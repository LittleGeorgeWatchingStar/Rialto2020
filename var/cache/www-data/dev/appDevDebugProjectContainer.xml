<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/home/stefan/Documents/Applications/rialto/app</parameter>
    <parameter key="kernel.project_dir">/home/stefan/Documents/Applications/rialto</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev</parameter>
    <parameter key="kernel.logs_dir">/home/stefan/Documents/Applications/rialto/var/logs/www-data</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="CraueFormFlowBundle">Craue\FormFlowBundle\CraueFormFlowBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="EasyAdminBundle">EasyCorp\Bundle\EasyAdminBundle\EasyAdminBundle</parameter>
      <parameter key="JMSJobQueueBundle">JMS\JobQueueBundle\JMSJobQueueBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="FOSJsRoutingBundle">FOS\JsRoutingBundle\FOSJsRoutingBundle</parameter>
      <parameter key="NelmioSecurityBundle">Nelmio\SecurityBundle\NelmioSecurityBundle</parameter>
      <parameter key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</parameter>
      <parameter key="TacticianBundle">League\Tactician\Bundle\TacticianBundle</parameter>
      <parameter key="GumstixFormBundle">Gumstix\FormBundle\GumstixFormBundle</parameter>
      <parameter key="GumstixGeographyBundle">Gumstix\GeographyBundle\GumstixGeographyBundle</parameter>
      <parameter key="GumstixRestBundle">Gumstix\RestBundle\GumstixRestBundle</parameter>
      <parameter key="GumstixSSOBundle">Gumstix\SSOBundle\GumstixSSOBundle</parameter>
      <parameter key="WebpackEncoreBundle">Symfony\WebpackEncoreBundle\WebpackEncoreBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="GumstixTestingBundle">Gumstix\TestingBundle\GumstixTestingBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/symfony/swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="CraueFormFlowBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle</parameter>
        <parameter key="namespace">Craue\FormFlowBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/sensio/framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="EasyAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src</parameter>
        <parameter key="namespace">EasyCorp\Bundle\EasyAdminBundle</parameter>
      </parameter>
      <parameter key="JMSJobQueueBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/jms/job-queue-bundle/JMS/JobQueueBundle</parameter>
        <parameter key="namespace">JMS\JobQueueBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/jms/serializer-bundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="FOSRestBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/friendsofsymfony/rest-bundle</parameter>
        <parameter key="namespace">FOS\RestBundle</parameter>
      </parameter>
      <parameter key="FOSJsRoutingBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/friendsofsymfony/jsrouting-bundle</parameter>
        <parameter key="namespace">FOS\JsRoutingBundle</parameter>
      </parameter>
      <parameter key="NelmioSecurityBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/nelmio/security-bundle</parameter>
        <parameter key="namespace">Nelmio\SecurityBundle</parameter>
      </parameter>
      <parameter key="NelmioCorsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/nelmio/cors-bundle</parameter>
        <parameter key="namespace">Nelmio\CorsBundle</parameter>
      </parameter>
      <parameter key="TacticianBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/league/tactician-bundle/src</parameter>
        <parameter key="namespace">League\Tactician\Bundle</parameter>
      </parameter>
      <parameter key="GumstixFormBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/gumstix/form-bundle/src</parameter>
        <parameter key="namespace">Gumstix\FormBundle</parameter>
      </parameter>
      <parameter key="GumstixGeographyBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/gumstix/geo-bundle/src</parameter>
        <parameter key="namespace">Gumstix\GeographyBundle</parameter>
      </parameter>
      <parameter key="GumstixRestBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/gumstix/rest-bundle/src</parameter>
        <parameter key="namespace">Gumstix\RestBundle</parameter>
      </parameter>
      <parameter key="GumstixSSOBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/gumstix/sso-bundle/src/SSOBundle</parameter>
        <parameter key="namespace">Gumstix\SSOBundle</parameter>
      </parameter>
      <parameter key="WebpackEncoreBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/symfony/webpack-encore-bundle/src</parameter>
        <parameter key="namespace">Symfony\WebpackEncoreBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="GumstixTestingBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/home/stefan/Documents/Applications/rialto/src/Gumstix/TestingBundle</parameter>
        <parameter key="namespace">Gumstix\TestingBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="assets_version">2a685dc7e</parameter>
    <parameter key="authorizenet.trans_key"></parameter>
    <parameter key="ciiva_apikey"></parameter>
    <parameter key="ciiva_password"></parameter>
    <parameter key="db_password">rialto</parameter>
    <parameter key="email.password"></parameter>
    <parameter key="enable_profiler">false</parameter>
    <parameter key="pcb_ng.api.password">03500208Gs</parameter>
    <parameter key="pcb_ng.api.user">stefan.zhang@gumstix.com</parameter>
    <parameter key="rialto_email.xmpp_password"></parameter>
    <parameter key="rialto_purchasing.octopart_catalog_apikey"></parameter>
    <parameter key="rialto_purchasing.supplier_mailbox_password"></parameter>
    <parameter key="rialto_wordpress.password"></parameter>
    <parameter key="secret">dbe2ad5133a4f5cc31bf35299e956df963ff944bb385d89e9b2b078d902c2816</parameter>
    <parameter key="sentry_dsn"></parameter>
    <parameter key="taxjar_api_token"></parameter>
    <parameter key="ups.access_license">7BCE6A23028BC75C</parameter>
    <parameter key="ups.invoice_password"></parameter>
    <parameter key="ups.password">saywhat</parameter>
    <parameter key="fedex.key">nn5npVFwcV3i7sFf</parameter>
    <parameter key="fedex.password">ZnvePMF2ZNJWUL5Eq92eoYTnR</parameter>
    <parameter key="fedex.account_number">510087780</parameter>
    <parameter key="fedex.meter_number">119167837</parameter>
    <parameter key="rialto_util.font_dir">/home/stefan/Documents/Applications/rialto/fonts</parameter>
    <parameter key="rialto_purchasing.supplier_mailbox_server">imap.gmail.com</parameter>
    <parameter key="rialto_purchasing.supplier_mailbox_username">engine@altium.com</parameter>
    <parameter key="default_po_owner">andrew.simpson</parameter>
    <parameter key="rialto.sales.email.bcc">jack@gumstix.com</parameter>
    <parameter key="ups.denied_party.enabled">1</parameter>
    <parameter key="ups.denied_party.screen_type">Party</parameter>
    <parameter key="ups.denied_party.match_level">High</parameter>
    <parameter key="ups.supply_chain_id">108</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="db_driver">pdo_mysql</parameter>
    <parameter key="db_name">rialto</parameter>
    <parameter key="db_user">rialto</parameter>
    <parameter key="bugtracker.uri">https://mantis.gumstix.com</parameter>
    <parameter key="bugtracker.default_category">1</parameter>
    <parameter key="bugtracker.project_id">1</parameter>
    <parameter key="rialto_wordpress.username">rialto</parameter>
    <parameter key="rialto_wordpress.post_type">pcn</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="rialto.root_dir">/home/stefan/Documents/Applications/rialto/app/..</parameter>
    <parameter key="aws_region">us-west-2</parameter>
    <parameter key="db_host">127.0.0.1</parameter>
    <parameter key="mongo_host">127.0.0.1</parameter>
    <parameter key="data_bucket">devstix-rialto-files</parameter>
    <parameter key="router.request_context.host">rialto.mystix.com</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url">/index.php</parameter>
    <parameter key="trusted_hosts" type="collection">
      <parameter>mystix.com</parameter>
      <parameter>https://dev-storefront.pcbng.com/</parameter>
    </parameter>
    <parameter key="cors_hosts" type="collection">
      <parameter>^http://(.+.)?mystix.com</parameter>
    </parameter>
    <parameter key="use_ssl">false</parameter>
    <parameter key="user.admin">ianfp</parameter>
    <parameter key="user.webmaster">ianfp</parameter>
    <parameter key="email.transport">smtp</parameter>
    <parameter key="email.host">email-smtp.us-west-2.amazonaws.com</parameter>
    <parameter key="email.port">587</parameter>
    <parameter key="email.encryption">tls</parameter>
    <parameter key="email.username">AKIAI5WM7Y2VUODDW23Q</parameter>
    <parameter key="ups.webservices.uri">https://wwwcie.ups.com</parameter>
    <parameter key="ups.user_id">craighughes</parameter>
    <parameter key="ups.invoice_host">ftp2.ups.com</parameter>
    <parameter key="ups.invoice_username">gumstix0316</parameter>
    <parameter key="authorizenet.login">6e79LeRw</parameter>
    <parameter key="authorizenet.sandbox">1</parameter>
    <parameter key="pcb_ng.storefront.base_uri">https://dev-storefront.pcbng.com/</parameter>
    <parameter key="pcb_ng.api.base_uri">https://api-dev.pcbng.com/api/</parameter>
    <parameter key="gumstix_sso.service.server">http://accounts.mystix.com/</parameter>
    <parameter key="rialto_wordpress.base_url">http://www.mystix.com</parameter>
    <parameter key="rialto_madison.madison_url">http://madison.mystix.com/app.php</parameter>
    <parameter key="catalina.base_url">http://catalina.mystix.com</parameter>
    <parameter key="geppetto.base_url">http://geppetto.mystix.com</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">dbe2ad5133a4f5cc31bf35299e956df963ff944bb385d89e9b2b078d902c2816</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection">
      <parameter>mystix.com</parameter>
      <parameter>https://dev-storefront.pcbng.com/</parameter>
    </parameter>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter">0</parameter>
      <parameter key="cookie_secure">false</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
      <parameter key="use_strict_mode">true</parameter>
    </parameter>
    <parameter key="session.save_path">/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="translator.default_path">/home/stefan/Documents/Applications/rialto/translations</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="debug.container.dump">/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.options.matcher.cache_class">appDevDebugProjectContainerUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevDebugProjectContainerUrlGenerator</parameter>
    <parameter key="router.resource">/home/stefan/Documents/Applications/rialto/app/config/routing_dev.yaml</parameter>
    <parameter key="router.cache_class_prefix">appDevDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/serialization.php</parameter>
    <parameter key="serializer.mapping.cache.prefix"></parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_ACCOUNTING</parameter>
        <parameter>ROLE_ENGINEER</parameter>
        <parameter>ROLE_MANUFACTURING</parameter>
        <parameter>ROLE_PURCHASING</parameter>
        <parameter>ROLE_RECEIVING</parameter>
        <parameter>ROLE_SALES</parameter>
        <parameter>ROLE_SHIPPING</parameter>
        <parameter>ROLE_STOCK_CREATE</parameter>
        <parameter>ROLE_WAREHOUSE</parameter>
      </parameter>
      <parameter key="ROLE_ENGINEER" type="collection">
        <parameter>ROLE_STOCK</parameter>
        <parameter>ROLE_MANUFACTURING</parameter>
        <parameter>ROLE_PURCHASING</parameter>
      </parameter>
      <parameter key="ROLE_WAREHOUSE" type="collection">
        <parameter>ROLE_STOCK</parameter>
        <parameter>ROLE_RECEIVING</parameter>
        <parameter>ROLE_SHIPPING</parameter>
      </parameter>
      <parameter key="ROLE_SALES" type="collection">
        <parameter>ROLE_CUSTOMER_SERVICE</parameter>
      </parameter>
      <parameter key="ROLE_ACCOUNTING" type="collection">
        <parameter>ROLE_EMPLOYEE</parameter>
      </parameter>
      <parameter key="ROLE_CUSTOMER_SERVICE" type="collection">
        <parameter>ROLE_STOCK_VIEW</parameter>
      </parameter>
      <parameter key="ROLE_MANUFACTURING" type="collection">
        <parameter>ROLE_EMPLOYEE</parameter>
      </parameter>
      <parameter key="ROLE_PURCHASING" type="collection">
        <parameter>ROLE_PURCHASING_DATA</parameter>
      </parameter>
      <parameter key="ROLE_PURCHASING_DATA" type="collection">
        <parameter>ROLE_STOCK_VIEW</parameter>
      </parameter>
      <parameter key="ROLE_RECEIVING" type="collection">
        <parameter>ROLE_EMPLOYEE</parameter>
      </parameter>
      <parameter key="ROLE_SHIPPING" type="collection">
        <parameter>ROLE_EMPLOYEE</parameter>
      </parameter>
      <parameter key="ROLE_STOCK_CREATE" type="collection">
        <parameter>ROLE_STOCK</parameter>
      </parameter>
      <parameter key="ROLE_STOCK" type="collection">
        <parameter>ROLE_STOCK_VIEW</parameter>
      </parameter>
      <parameter key="ROLE_STOCK_VIEW" type="collection">
        <parameter>ROLE_EMPLOYEE</parameter>
      </parameter>
      <parameter key="ROLE_STOREFRONT" type="collection">
        <parameter>ROLE_API_CLIENT</parameter>
      </parameter>
      <parameter key="ROLE_SUPPLIER_ADVANCED" type="collection">
        <parameter>ROLE_SUPPLIER_SIMPLE</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="twig.exception_listener.controller">FOS\RestBundle\Controller\ExceptionController::showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>GumstixFormBundle:Form:fields.html.twig</parameter>
      <parameter>form/fields.html.twig</parameter>
      <parameter>payment/PaymentMethod/fields.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/home/stefan/Documents/Applications/rialto/templates</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>doctrine</parameter>
          <parameter>translation</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.php" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>php</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.flash" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>flash</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.ups" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>ups</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.doctrine" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>doctrine</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.email" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>email</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.automation" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>automation</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.production" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>supplier</parameter>
          <parameter>manufacturing</parameter>
          <parameter>receiving</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.sentry">null</parameter>
    </parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">fake_transport</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">tls</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">587</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">email-smtp.us-west-2.amazonaws.com</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">AKIAI5WM7Y2VUODDW23Q</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password"></parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.local_domain">null</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">false</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">false</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="craue.form.flow.class">Craue\FormFlowBundle\Form\FormFlow</parameter>
    <parameter key="craue.form.flow.storage.class">Craue\FormFlowBundle\Storage\SessionStorage</parameter>
    <parameter key="craue.form.flow.event_listener.previous_step_invalid.class">Craue\FormFlowBundle\EventListener\PreviousStepInvalidEventListener</parameter>
    <parameter key="craue.form.flow.event_listener.previous_step_invalid.event">flow.previous_step_invalid</parameter>
    <parameter key="craue.form.flow.event_listener.flow_expired.class">Craue\FormFlowBundle\EventListener\FlowExpiredEventListener</parameter>
    <parameter key="craue.form.flow.event_listener.flow_expired.event">flow.flow_expired</parameter>
    <parameter key="craue_twig_extensions.formflow.class">Craue\FormFlowBundle\Twig\Extension\FormFlowExtension</parameter>
    <parameter key="craue_formflow.util.class">Craue\FormFlowBundle\Util\FormFlowUtil</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="jms_job_safe_object" type="collection">
        <parameter key="class">JMS\JobQueueBundle\Entity\Type\SafeObjectType</parameter>
        <parameter key="commented">null</parameter>
      </parameter>
      <parameter key="vector2d" type="collection">
        <parameter key="class">Gumstix\Geometry\Orm\Vector2DType</parameter>
        <parameter key="commented">null</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine_migrations.dir_name">/home/stefan/Documents/Applications/rialto/app/migrations</parameter>
    <parameter key="doctrine_migrations.namespace">Rialto\Migrations</parameter>
    <parameter key="doctrine_migrations.table_name">database_migration</parameter>
    <parameter key="doctrine_migrations.name">Database Migrations</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</parameter>
    <parameter key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</parameter>
    <parameter key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</parameter>
    <parameter key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</parameter>
    <parameter key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</parameter>
    <parameter key="easyadmin.config" type="collection">
      <parameter key="site_name">Rialto</parameter>
      <parameter key="list" type="collection">
        <parameter key="max_results">30</parameter>
        <parameter key="actions" type="collection"/>
      </parameter>
      <parameter key="design" type="collection">
        <parameter key="menu" type="collection">
          <parameter type="collection">
            <parameter key="label">Home</parameter>
            <parameter key="route">index</parameter>
          </parameter>
          <parameter>GLAccount</parameter>
          <parameter>Role</parameter>
          <parameter>BinStyle</parameter>
          <parameter>TaxAuthority</parameter>
          <parameter>Company</parameter>
        </parameter>
        <parameter key="theme">default</parameter>
        <parameter key="color_scheme">dark</parameter>
        <parameter key="brand_color">#205081</parameter>
        <parameter key="form_theme" type="collection">
          <parameter>@EasyAdmin/form/bootstrap_3_horizontal_layout.html.twig</parameter>
        </parameter>
        <parameter key="assets" type="collection">
          <parameter key="css" type="collection"/>
          <parameter key="js" type="collection"/>
          <parameter key="favicon" type="collection">
            <parameter key="path">favicon.ico</parameter>
            <parameter key="mime_type">image/x-icon</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="entities" type="collection">
        <parameter key="GLAccount" type="collection">
          <parameter key="class">Rialto\Accounting\Ledger\Account\GLAccount</parameter>
          <parameter key="label">Accounting : GL Account</parameter>
          <parameter key="disabled_actions" type="collection">
            <parameter>delete</parameter>
          </parameter>
          <parameter key="list" type="collection">
            <parameter key="fields" type="collection">
              <parameter>id</parameter>
              <parameter>name</parameter>
              <parameter>groupName</parameter>
            </parameter>
            <parameter key="sort" type="collection">
              <parameter>id</parameter>
              <parameter>ASC</parameter>
            </parameter>
          </parameter>
          <parameter key="form" type="collection">
            <parameter key="fields" type="collection">
              <parameter>id</parameter>
              <parameter>name</parameter>
              <parameter>accountGroup</parameter>
            </parameter>
          </parameter>
          <parameter key="name">GLAccount</parameter>
        </parameter>
        <parameter key="Role" type="collection">
          <parameter key="class">Rialto\Security\Role\Role</parameter>
          <parameter key="label">Security : Role</parameter>
          <parameter key="disabled_actions" type="collection">
            <parameter>new</parameter>
            <parameter>delete</parameter>
          </parameter>
          <parameter key="list" type="collection">
            <parameter key="fields" type="collection">
              <parameter>role</parameter>
              <parameter>group</parameter>
              <parameter>label</parameter>
            </parameter>
          </parameter>
          <parameter key="form" type="collection">
            <parameter key="fields" type="collection">
              <parameter>group</parameter>
              <parameter>label</parameter>
            </parameter>
          </parameter>
          <parameter key="name">Role</parameter>
        </parameter>
        <parameter key="BinStyle" type="collection">
          <parameter key="class">Rialto\Stock\Bin\BinStyle</parameter>
          <parameter key="label">Stock : Bin style</parameter>
          <parameter key="disabled_actions" type="collection">
            <parameter>delete</parameter>
          </parameter>
          <parameter key="list" type="collection">
            <parameter key="fields" type="collection">
              <parameter>id</parameter>
              <parameter>name</parameter>
              <parameter>numLabels</parameter>
            </parameter>
          </parameter>
          <parameter key="new" type="collection">
            <parameter key="fields" type="collection">
              <parameter>id</parameter>
              <parameter>name</parameter>
              <parameter>numLabels</parameter>
            </parameter>
          </parameter>
          <parameter key="name">BinStyle</parameter>
        </parameter>
        <parameter key="TaxAuthority" type="collection">
          <parameter key="class">Rialto\Tax\Authority\TaxAuthority</parameter>
          <parameter key="label">Tax : Tax Authority</parameter>
          <parameter key="disabled_actions" type="collection">
            <parameter>new</parameter>
            <parameter>delete</parameter>
          </parameter>
          <parameter key="name">TaxAuthority</parameter>
        </parameter>
        <parameter key="Company" type="collection">
          <parameter key="class">Rialto\Company\Company</parameter>
          <parameter key="label">Company</parameter>
          <parameter key="disabled_actions" type="collection">
            <parameter>new</parameter>
            <parameter>delete</parameter>
          </parameter>
          <parameter key="list" type="collection">
            <parameter key="fields" type="collection">
              <parameter>id</parameter>
              <parameter>name</parameter>
              <parameter>regOffice1</parameter>
              <parameter>regOffice2</parameter>
              <parameter>regOffice3</parameter>
            </parameter>
          </parameter>
          <parameter key="form" type="collection">
            <parameter key="fields" type="collection">
              <parameter>name</parameter>
              <parameter>regOffice1</parameter>
              <parameter>regOffice2</parameter>
              <parameter>regOffice3</parameter>
            </parameter>
          </parameter>
          <parameter key="name">Company</parameter>
        </parameter>
      </parameter>
      <parameter key="formats" type="collection">
        <parameter key="date">Y-m-d</parameter>
        <parameter key="time">H:i:s</parameter>
        <parameter key="datetime">F j, Y H:i</parameter>
        <parameter key="dateinterval">%y Year(s) %m Month(s) %d Day(s)</parameter>
      </parameter>
      <parameter key="disabled_actions" type="collection"/>
      <parameter key="translation_domain">messages</parameter>
      <parameter key="search" type="collection"/>
      <parameter key="edit" type="collection">
        <parameter key="actions" type="collection"/>
      </parameter>
      <parameter key="new" type="collection">
        <parameter key="actions" type="collection"/>
      </parameter>
      <parameter key="show" type="collection">
        <parameter key="actions" type="collection"/>
        <parameter key="max_results">10</parameter>
      </parameter>
    </parameter>
    <parameter key="easyadmin.cache.dir">/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/easy_admin</parameter>
    <parameter key="jms_job_queue.entity.many_to_any_listener.class">JMS\JobQueueBundle\Entity\Listener\ManyToAnyListener</parameter>
    <parameter key="jms_job_queue.twig.extension.class">JMS\JobQueueBundle\Twig\JobQueueExtension</parameter>
    <parameter key="jms_job_queue.retry_scheduler.class">JMS\JobQueueBundle\Retry\ExponentialRetryScheduler</parameter>
    <parameter key="jms_job_queue.job_manager.class">JMS\JobQueueBundle\Entity\Repository\JobManager</parameter>
    <parameter key="jms_job_queue.statistics">true</parameter>
    <parameter key="jms_job_queue.entity.statistics_listener.class">JMS\JobQueueBundle\Entity\Listener\StatisticsListener</parameter>
    <parameter key="jms_job_queue.queue_options_defaults" type="collection">
      <parameter key="max_concurrent_jobs">3</parameter>
    </parameter>
    <parameter key="jms_job_queue.queue_options" type="collection"/>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</parameter>
    <parameter key="jms_serializer.identical_property_naming_strategy.class">JMS\Serializer\Naming\IdenticalPropertyNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.twig_runtime_extension.class">JMS\Serializer\Twig\SerializerRuntimeExtension</parameter>
    <parameter key="jms_serializer.twig_runtime_extension_helper.class">JMS\Serializer\Twig\SerializerRuntimeHelper</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.xml_serialization_visitor.format_output">true</parameter>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">JMS\Serializer\Handler\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="jms_serializer.configured_context_factory.class">JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory</parameter>
    <parameter key="jms_serializer.expression_evaluator.class">JMS\Serializer\Expression\ExpressionEvaluator</parameter>
    <parameter key="jms_serializer.expression_language.class">Symfony\Component\ExpressionLanguage\ExpressionLanguage</parameter>
    <parameter key="jms_serializer.expression_language.function_provider.class">JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider</parameter>
    <parameter key="jms_serializer.accessor_strategy.default.class">JMS\Serializer\Accessor\DefaultAccessorStrategy</parameter>
    <parameter key="jms_serializer.accessor_strategy.expression.class">JMS\Serializer\Accessor\ExpressionAccessorStrategy</parameter>
    <parameter key="jms_serializer.cache.cache_warmer.class">JMS\SerializerBundle\Cache\CacheWarmer</parameter>
    <parameter key="fos_rest.format_listener.rules">null</parameter>
    <parameter key="fos_js_routing.extractor.class">FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor</parameter>
    <parameter key="fos_js_routing.controller.class">FOS\JsRoutingBundle\Controller\Controller</parameter>
    <parameter key="fos_js_routing.normalizer.route_collection.class">FOS\JsRoutingBundle\Serializer\Normalizer\RouteCollectionNormalizer</parameter>
    <parameter key="fos_js_routing.normalizer.routes_response.class">FOS\JsRoutingBundle\Serializer\Normalizer\RoutesResponseNormalizer</parameter>
    <parameter key="fos_js_routing.denormalizer.route_collection.class">FOS\JsRoutingBundle\Serializer\Denormalizer\RouteCollectionDenormalizer</parameter>
    <parameter key="fos_js_routing.request_context_base_url">null</parameter>
    <parameter key="fos_js_routing.cache_control" type="collection">
      <parameter key="enabled">false</parameter>
    </parameter>
    <parameter key="nelmio_security.clickjacking.paths" type="collection">
      <parameter key="^/.*" type="collection">
        <parameter key="header">SAMEORIGIN</parameter>
      </parameter>
    </parameter>
    <parameter key="nelmio_security.clickjacking.content_types" type="collection"/>
    <parameter key="nelmio_security.external_redirects.whitelist">(?:.*\.mystix\.com|.*\.dev\-storefront\.pcbng\.com|mystix\.com|dev\-storefront\.pcbng\.com)</parameter>
    <parameter key="nelmio_security.external_redirects.override">null</parameter>
    <parameter key="nelmio_security.external_redirects.forward_as">null</parameter>
    <parameter key="nelmio_security.external_redirects.abort">true</parameter>
    <parameter key="nelmio_cors.map" type="collection">
      <parameter key="^/api/" type="collection">
        <parameter key="origin_regex">true</parameter>
        <parameter key="allow_origin" type="collection">
          <parameter>^http://(.+.)?mystix.com</parameter>
        </parameter>
        <parameter key="allow_headers" type="collection">
          <parameter>origin</parameter>
          <parameter>content-type</parameter>
        </parameter>
        <parameter key="allow_methods" type="collection">
          <parameter>POST</parameter>
          <parameter>PUT</parameter>
          <parameter>GET</parameter>
          <parameter>DELETE</parameter>
          <parameter>OPTIONS</parameter>
          <parameter>PATCH</parameter>
        </parameter>
        <parameter key="max_age">3600</parameter>
      </parameter>
    </parameter>
    <parameter key="nelmio_cors.defaults" type="collection">
      <parameter key="allow_origin" type="collection"/>
      <parameter key="allow_credentials">true</parameter>
      <parameter key="allow_headers" type="collection"/>
      <parameter key="expose_headers" type="collection"/>
      <parameter key="allow_methods" type="collection"/>
      <parameter key="max_age">0</parameter>
      <parameter key="hosts" type="collection"/>
      <parameter key="origin_regex">false</parameter>
      <parameter key="forced_allow_origin_value">null</parameter>
    </parameter>
    <parameter key="nelmio_cors.cors_listener.class">Nelmio\CorsBundle\EventListener\CorsListener</parameter>
    <parameter key="nelmio_cors.options_resolver.class">Nelmio\CorsBundle\Options\Resolver</parameter>
    <parameter key="nelmio_cors.options_provider.config.class">Nelmio\CorsBundle\Options\ConfigProvider</parameter>
    <parameter key="gumstix_sso.tokens.consumer_key"></parameter>
    <parameter key="gumstix_sso.tokens.consumer_secret"></parameter>
    <parameter key="gumstix_sso.service.scope">gumstix</parameter>
    <parameter key="gumstix_sso.cookie.name">gumstix-sso</parameter>
    <parameter key="gumstix_sso.credential_file">/home/stefan/Documents/Applications/rialto/app/../var/data/gumstix_sso/credential.data</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter key="console.command.rialto_accounting_paymenttransaction_cli_recalculatesettled">console.command.rialto_accounting_paymenttransaction_cli_recalculatesettled</parameter>
      <parameter key="console.command.rialto_allocation_cli_deleteinvalidallocationscommand">console.command.rialto_allocation_cli_deleteinvalidallocationscommand</parameter>
      <parameter key="console.command.rialto_allocation_cli_deletestockbinallocationscommand">console.command.rialto_allocation_cli_deletestockbinallocationscommand</parameter>
      <parameter key="console.command.rialto_logging_cli_recreatemongologscommand">console.command.rialto_logging_cli_recreatemongologscommand</parameter>
      <parameter key="console.command.rialto_magento2_stock_cli_syncstocklevelscommand">console.command.rialto_magento2_stock_cli_syncstocklevelscommand</parameter>
      <parameter key="console.command.rialto_magento2_order_cli_syncorderscommand">console.command.rialto_magento2_order_cli_syncorderscommand</parameter>
      <parameter key="console.command.rialto_manufacturing_customization_cli_validatesubstitutionscommand">console.command.rialto_manufacturing_customization_cli_validatesubstitutionscommand</parameter>
      <parameter key="console.command.rialto_manufacturing_kit_reminder_sendemailcommand">console.command.rialto_manufacturing_kit_reminder_sendemailcommand</parameter>
      <parameter key="console.command.rialto_manufacturing_workorder_cli_autobuildcommand">console.command.rialto_manufacturing_workorder_cli_autobuildcommand</parameter>
      <parameter key="console.command.rialto_manufacturing_task_cli_taskscommand">console.command.rialto_manufacturing_task_cli_taskscommand</parameter>
      <parameter key="console.command.rialto_manufacturing_task_cli_refreshproductiontaskscommand">console.command.rialto_manufacturing_task_cli_refreshproductiontaskscommand</parameter>
      <parameter key="console.command.rialto_manufacturing_task_cli_productiontaskremindercommand">console.command.rialto_manufacturing_task_cli_productiontaskremindercommand</parameter>
      <parameter key="console.command.rialto_manufacturing_task_cli_jobscommand">console.command.rialto_manufacturing_task_cli_jobscommand</parameter>
      <parameter key="console.command.rialto_payment_sweep_cli_sweepcardtransactionscommand">console.command.rialto_payment_sweep_cli_sweepcardtransactionscommand</parameter>
      <parameter key="console.command.rialto_printing_job_cli_flushprintqueue">console.command.rialto_printing_job_cli_flushprintqueue</parameter>
      <parameter key="console.command.rialto_printing_job_cli_deletecompletedprintjobs">console.command.rialto_printing_job_cli_deletecompletedprintjobs</parameter>
      <parameter key="console.command.rialto_printing_printer_cli_devprintserver">console.command.rialto_printing_printer_cli_devprintserver</parameter>
      <parameter key="console.command.rialto_purchasing_catalog_cli_purchasingdatasynchronizercommand">Rialto\Purchasing\Catalog\Cli\PurchasingDataSynchronizerCommand</parameter>
      <parameter key="console.command.rialto_purchasing_catalog_cli_purchasingdatastocklevelrefreshcommand">Rialto\Purchasing\Catalog\Cli\PurchasingDataStockLevelRefreshCommand</parameter>
      <parameter key="console.command.rialto_purchasing_catalog_cli_refreshgeppettopurchasingdataconsolecommand">Rialto\Purchasing\Catalog\Cli\RefreshGeppettoPurchasingDataConsoleCommand</parameter>
      <parameter key="console.command.rialto_purchasing_invoice_reader_email_cli_autoimportinvoices">console.command.rialto_purchasing_invoice_reader_email_cli_autoimportinvoices</parameter>
      <parameter key="console.command.rialto_purchasing_invoice_cli_finduninvoicedorders">console.command.rialto_purchasing_invoice_cli_finduninvoicedorders</parameter>
      <parameter key="console.command.rialto_purchasing_recurring_cli_autoinvoicecommand">console.command.rialto_purchasing_recurring_cli_autoinvoicecommand</parameter>
      <parameter key="console.command.rialto_purchasing_manufacturer_cli_bulkpushmodulemanufacturersconsolecommand">Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand</parameter>
      <parameter key="console.command.rialto_purchasing_order_cli_autoordercommand">console.command.rialto_purchasing_order_cli_autoordercommand</parameter>
      <parameter key="console.command.rialto_purchasing_receiving_notify_testxmppcommand">console.command.rialto_purchasing_receiving_notify_testxmppcommand</parameter>
      <parameter key="console.command.rialto_sales_order_dates_inittargetdatecommand">console.command.rialto_sales_order_dates_inittargetdatecommand</parameter>
      <parameter key="console.command.rialto_security_user_cli_createusercommand">console.command.rialto_security_user_cli_createusercommand</parameter>
      <parameter key="console.command.rialto_security_user_cli_promoteusercommand">console.command.rialto_security_user_cli_promoteusercommand</parameter>
      <parameter key="console.command.rialto_security_user_cli_adduuidcommand">console.command.rialto_security_user_cli_adduuidcommand</parameter>
      <parameter key="console.command.rialto_shopify_webhook_cli_webhookcustomcommand">console.command.rialto_shopify_webhook_cli_webhookcustomcommand</parameter>
      <parameter key="console.command.rialto_stock_item_cli_bulksetdefaultworkordercommand">console.command.rialto_stock_item_cli_bulksetdefaultworkordercommand</parameter>
      <parameter key="console.command.rialto_stock_item_cli_stocklevelrefreshcommand">Rialto\Stock\Item\Cli\StockLevelRefreshCommand</parameter>
      <parameter key="console.command.rialto_stock_level_cli_stocklevelsynccommand">console.command.rialto_stock_level_cli_stocklevelsynccommand</parameter>
      <parameter key="console.command.rialto_stock_returns_cli_generatemissingadjustmentglrecordscommand">console.command.rialto_stock_returns_cli_generatemissingadjustmentglrecordscommand</parameter>
      <parameter key="console.command.rialto_tax_regime_cli_loadtaxregimescommand">console.command.rialto_tax_regime_cli_loadtaxregimescommand</parameter>
      <parameter key="console.command.rialto_ups_trackingrecord_cli_polltrackingnumberscommand">Rialto\Ups\TrackingRecord\Cli\PollTrackingNumbersCommand</parameter>
      <parameter key="console.command.rialto_ups_trackingrecord_cli_updatepotrackingrecordscommand">Rialto\Ups\TrackingRecord\Cli\UpdatePOTrackingRecordsCommand</parameter>
      <parameter key="console.command.rialto_ups_trackingrecord_cli_updatesalestrackingrecordscommand">Rialto\Ups\TrackingRecord\Cli\UpdateSalesTrackingRecordsCommand</parameter>
      <parameter key="console.command.rialto_port_commandbus_handlecommandconsolecommand">console.command.rialto_port_commandbus_handlecommandconsolecommand</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_aboutcommand">console.command.about</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_assetsinstallcommand">console.command.assets_install</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cacheclearcommand">console.command.cache_clear</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cachepoolclearcommand">console.command.cache_pool_clear</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cachepoolprunecommand">console.command.cache_pool_prune</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_cachewarmupcommand">console.command.cache_warmup</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_configdebugcommand">console.command.config_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_configdumpreferencecommand">console.command.config_dump_reference</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_containerdebugcommand">console.command.container_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_debugautowiringcommand">console.command.debug_autowiring</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_eventdispatcherdebugcommand">console.command.event_dispatcher_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_routerdebugcommand">console.command.router_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_routermatchcommand">console.command.router_match</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_translationdebugcommand">console.command.translation_debug</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_translationupdatecommand">console.command.translation_update</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_xlifflintcommand">console.command.xliff_lint</parameter>
      <parameter key="console.command.symfony_bundle_frameworkbundle_command_yamllintcommand">console.command.yaml_lint</parameter>
      <parameter key="console.command.symfony_component_form_command_debugcommand">console.command.form_debug</parameter>
      <parameter key="console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand">security.command.user_password_encoder</parameter>
      <parameter key="console.command.symfony_bridge_twig_command_debugcommand">twig.command.debug</parameter>
      <parameter key="console.command.symfony_bundle_twigbundle_command_lintcommand">twig.command.lint</parameter>
      <parameter key="console.command.symfony_bundle_swiftmailerbundle_command_debugcommand">swiftmailer.command.debug</parameter>
      <parameter key="console.command.symfony_bundle_swiftmailerbundle_command_newemailcommand">swiftmailer.command.new_email</parameter>
      <parameter key="console.command.symfony_bundle_swiftmailerbundle_command_sendemailcommand">swiftmailer.command.send_email</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_containscommand">console.command.doctrine_bundle_doctrinecachebundle_command_containscommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_deletecommand">console.command.doctrine_bundle_doctrinecachebundle_command_deletecommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_flushcommand">console.command.doctrine_bundle_doctrinecachebundle_command_flushcommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_statscommand">console.command.doctrine_bundle_doctrinecachebundle_command_statscommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_createdatabasedoctrinecommand">doctrine.database_create_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_dropdatabasedoctrinecommand">doctrine.database_drop_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_generateentitiesdoctrinecommand">doctrine.generate_entities_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_runsqldoctrinecommand">doctrine.query_sql_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearmetadatacachedoctrinecommand">doctrine.cache_clear_metadata_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearquerycachedoctrinecommand">doctrine.cache_clear_query_cache_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearresultcachedoctrinecommand">doctrine.cache_clear_result_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_collectionregiondoctrinecommand">doctrine.cache_collection_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_convertmappingdoctrinecommand">doctrine.mapping_convert_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_createschemadoctrinecommand">doctrine.schema_create_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_dropschemadoctrinecommand">doctrine.schema_drop_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_ensureproductionsettingsdoctrinecommand">doctrine.ensure_production_settings_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_entityregioncachedoctrinecommand">doctrine.clear_entity_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_importdoctrinecommand">doctrine.database_import_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_infodoctrinecommand">doctrine.mapping_info_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_queryregioncachedoctrinecommand">doctrine.clear_query_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_rundqldoctrinecommand">doctrine.query_dql_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_updateschemadoctrinecommand">doctrine.schema_update_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_validateschemacommand">doctrine.schema_validate_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_importmappingdoctrinecommand">doctrine.mapping_import_command</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsdiffdoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsdiffdoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsexecutedoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsexecutedoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsgeneratedoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsgeneratedoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationslatestdoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationslatestdoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsmigratedoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsmigratedoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsstatusdoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsstatusdoctrinecommand</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsversiondoctrinecommand">console.command.doctrine_bundle_migrationsbundle_command_migrationsversiondoctrinecommand</parameter>
      <parameter key="console.command.jms_jobqueuebundle_command_cleanupcommand">jms_job_queue.command.clean_up</parameter>
      <parameter key="console.command.jms_jobqueuebundle_command_markjobincompletecommand">jms_job_queue.command.mark_job_incomplete</parameter>
      <parameter key="console.command.jms_jobqueuebundle_command_runcommand">jms_job_queue.command.run</parameter>
      <parameter key="console.command.jms_jobqueuebundle_command_schedulecommand">jms_job_queue.command.schedule</parameter>
      <parameter key="console.command.fos_jsroutingbundle_command_dumpcommand">fos_js_routing.dump_command</parameter>
      <parameter key="console.command.fos_jsroutingbundle_command_routerdebugexposedcommand">fos_js_routing.router_debug_exposed_command</parameter>
      <parameter key="console.command.league_tactician_bundle_command_debugcommand">console.command.league_tactician_bundle_command_debugcommand</parameter>
      <parameter key="console.command.gumstix_ssobundle_command_setupcommand">console.command.gumstix_ssobundle_command_setupcommand</parameter>
    </parameter>
    <parameter key="console.lazy_command.ids" type="collection">
      <parameter key="Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand">true</parameter>
      <parameter key="console.command.about">true</parameter>
      <parameter key="console.command.assets_install">true</parameter>
      <parameter key="console.command.cache_clear">true</parameter>
      <parameter key="console.command.cache_pool_clear">true</parameter>
      <parameter key="console.command.cache_pool_prune">true</parameter>
      <parameter key="console.command.cache_warmup">true</parameter>
      <parameter key="console.command.config_debug">true</parameter>
      <parameter key="console.command.config_dump_reference">true</parameter>
      <parameter key="console.command.container_debug">true</parameter>
      <parameter key="console.command.debug_autowiring">true</parameter>
      <parameter key="console.command.event_dispatcher_debug">true</parameter>
      <parameter key="console.command.router_debug">true</parameter>
      <parameter key="console.command.router_match">true</parameter>
      <parameter key="console.command.translation_debug">true</parameter>
      <parameter key="console.command.translation_update">true</parameter>
      <parameter key="console.command.xliff_lint">true</parameter>
      <parameter key="console.command.yaml_lint">true</parameter>
      <parameter key="console.command.form_debug">true</parameter>
      <parameter key="security.command.user_password_encoder">true</parameter>
      <parameter key="twig.command.debug">true</parameter>
      <parameter key="twig.command.lint">true</parameter>
      <parameter key="swiftmailer.command.debug">true</parameter>
      <parameter key="swiftmailer.command.new_email">true</parameter>
      <parameter key="swiftmailer.command.send_email">true</parameter>
      <parameter key="doctrine.database_create_command">true</parameter>
      <parameter key="doctrine.database_drop_command">true</parameter>
      <parameter key="doctrine.generate_entities_command">true</parameter>
      <parameter key="doctrine.query_sql_command">true</parameter>
      <parameter key="doctrine.cache_clear_metadata_command">true</parameter>
      <parameter key="doctrine.cache_clear_query_cache_command">true</parameter>
      <parameter key="doctrine.cache_clear_result_command">true</parameter>
      <parameter key="doctrine.cache_collection_region_command">true</parameter>
      <parameter key="doctrine.mapping_convert_command">true</parameter>
      <parameter key="doctrine.schema_create_command">true</parameter>
      <parameter key="doctrine.schema_drop_command">true</parameter>
      <parameter key="doctrine.ensure_production_settings_command">true</parameter>
      <parameter key="doctrine.clear_entity_region_command">true</parameter>
      <parameter key="doctrine.database_import_command">true</parameter>
      <parameter key="doctrine.mapping_info_command">true</parameter>
      <parameter key="doctrine.clear_query_region_command">true</parameter>
      <parameter key="doctrine.query_dql_command">true</parameter>
      <parameter key="doctrine.schema_update_command">true</parameter>
      <parameter key="doctrine.schema_validate_command">true</parameter>
      <parameter key="doctrine.mapping_import_command">true</parameter>
      <parameter key="jms_job_queue.command.clean_up">true</parameter>
      <parameter key="jms_job_queue.command.mark_job_incomplete">true</parameter>
      <parameter key="jms_job_queue.command.run">true</parameter>
      <parameter key="jms_job_queue.command.schedule">true</parameter>
      <parameter key="fos_js_routing.dump_command">true</parameter>
      <parameter key="fos_js_routing.router_debug_exposed_command">true</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="Rialto\Accounting\Debtor\DebtorTransactionFactory" class="Rialto\Accounting\Debtor\DebtorTransactionFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Accounting\Debtor\Orm\DebtorPaymentStatus" class="Rialto\Accounting\Debtor\Orm\DebtorPaymentStatus" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Accounting\Web\AccountingRouter" class="Rialto\Accounting\Web\AccountingRouter" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
    </service>
    <service id="Rialto\Accounting\Web\AccountingExtension" class="Rialto\Accounting\Web\AccountingExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Accounting\Web\AccountingRouter"/>
    </service>
    <service id="Rialto\Accounting\Bank\Account\AvailableChequeNumberValidator" class="Rialto\Accounting\Bank\Account\AvailableChequeNumberValidator" public="true" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Accounting\Period\Web\PeriodController" class="Rialto\Accounting\Period\Web\PeriodController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Rialto\Accounting\PaymentTransaction\Cli\RecalculateSettled" class="Rialto\Accounting\PaymentTransaction\Cli\RecalculateSettled" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Accounting\Bank\Account\Repository\BankAccountRepository" class="Rialto\Accounting\Bank\Account\Repository\DQL\DqlBankAccountRepository" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Accounting\Bank\Transfer\BankTransferController" class="Rialto\Accounting\Bank\Transfer\BankTransferController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id="service_locator.yscbjmj.Rialto\Accounting\Bank\Transfer\BankTransferController"/>
      </call>
    </service>
    <service id="Rialto\Allocation\Web\AllocationExtension" class="Rialto\Allocation\Web\AllocationExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="Rialto\Allocation\EstimatedArrivalDate\EstimatedArrivalDateGenerator"/>
    </service>
    <service id="Rialto\Allocation\Validator\PurchasingDataExistsValidator" class="Rialto\Allocation\Validator\PurchasingDataExistsValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Allocation\Validator\PurchasingDataExistsForChildValidator" class="Rialto\Allocation\Validator\PurchasingDataExistsForChildValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Allocation\Allocation\AllocationFactory" class="Rialto\Allocation\Allocation\AllocationFactory" public="true" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Allocation\Allocation\InvalidAllocationExceptionListener" class="Rialto\Allocation\Allocation\InvalidAllocationExceptionListener" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.authorization_checker"/>
      <call method="setSession">
        <argument type="service" id="session"/>
      </call>
    </service>
    <service id="Rialto\Allocation\Dispatch\DispatchInstructionSubscriber" class="Rialto\Allocation\Dispatch\DispatchInstructionSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="session"/>
    </service>
    <service id="Rialto\Allocation\Consumer\StockConsumerListener" class="Rialto\Allocation\Consumer\StockConsumerListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Rialto\Allocation\Allocation\EmptyAllocationRemover" class="Rialto\Allocation\Allocation\EmptyAllocationRemover" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.terminate" method="onKernelTerminate"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Allocation\Allocation\AllocationTransfer" class="Rialto\Allocation\Allocation\AllocationTransfer" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Allocation\Allocation\AllocationTransferListener" class="Rialto\Allocation\Allocation\AllocationTransferListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationTransfer"/>
    </service>
    <service id="Rialto\Allocation\Cli\DeleteInvalidAllocationsCommand" class="Rialto\Allocation\Cli\DeleteInvalidAllocationsCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Rialto\Allocation\Cli\DeleteStockBinAllocationsCommand" class="Rialto\Allocation\Cli\DeleteStockBinAllocationsCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Allocation\EstimatedArrivalDate\EstimatedArrivalDateGenerator" class="Rialto\Allocation\EstimatedArrivalDate\EstimatedArrivalDateGenerator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Purchasing\Producer\CommitmentDateEstimator\StockProducerCommitmentDateEstimator"/>
      <argument type="service" id="Rialto\Shipping\Method\ShippingTimeEstimator\ShippingTimeEstimatorInterface"/>
    </service>
    <service id="Rialto\Allocation\Requirement\RequirementTask\RequirementTaskFactory" class="Rialto\Allocation\Requirement\RequirementTask\RequirementTaskFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Allocation\EstimatedArrivalDate\EstimatedArrivalDateGenerator"/>
    </service>
    <service id="Rialto\Catalina\CatalinaClient" class="Rialto\Catalina\CatalinaClient" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\SSOBundle\Service\HttpClientFactory"/>
      <argument>http://catalina.mystix.com</argument>
    </service>
    <service id="Rialto\Catalina\Web\CatalinaExtension" class="Rialto\Catalina\Web\CatalinaExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument>http://catalina.mystix.com</argument>
    </service>
    <service id="Rialto\Catalina\ProductionTaskListener" class="Rialto\Catalina\ProductionTaskListener" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="manufacturing"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Catalina\CatalinaClient"/>
      <argument type="service" id="monolog.logger.manufacturing"/>
    </service>
    <service id="Rialto\Ciiva\CiivaClient" class="Rialto\Ciiva\CiivaClient" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="GuzzleHttp\Client"/>
      <argument></argument>
      <argument></argument>
      <argument>/home/stefan/Documents/Applications/rialto/app/../var/ciivaCookies</argument>
    </service>
    <service id="Rialto\Cms\ExceptionHandler" class="Rialto\Cms\ExceptionHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.exception" method="onException" priority="0"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="Rialto\Cms\CmsLoader" class="Rialto\Cms\CmsLoader" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.loader"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Cms\CmsEngine" class="Rialto\Cms\CmsEngine" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Cms\CmsLoader"/>
      <argument type="collection">
        <argument type="service" id="twig.extension.routing"/>
        <argument type="service" id="Gumstix\GeographyBundle\Twig\GeographyExtension"/>
      </argument>
    </service>
    <service id="Rialto\Cms\CmsExtension" class="Rialto\Cms\CmsExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Rialto\Cms\CmsEngine"/>
    </service>
    <service id="Rialto\Cms\Web\CmsEntryType" class="Rialto\Cms\Web\CmsEntryType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Aws\S3\S3Client" class="Aws\S3\S3Client" public="false" autowire="true">
      <argument type="collection">
        <argument key="region">us-west-2</argument>
        <argument key="version">latest</argument>
      </argument>
    </service>
    <service id="GuzzleHttp\Client" class="GuzzleHttp\Client" shared="false" public="false" autowire="true"/>
    <service id="Rialto\Database\Orm\ErpDbManager" class="Rialto\Database\Orm\ErpDbManager" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Database\Orm\LockExceptionHandler" class="Rialto\Database\Orm\LockExceptionHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="Rialto\Entity\DomainEventHandler" class="Rialto\Entity\DomainEventHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="postPersist"/>
      <tag name="doctrine.event_listener" event="postUpdate"/>
      <tag name="doctrine.event_listener" event="postRemove"/>
      <tag name="doctrine.event_listener" event="postFlush"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="MongoDB\Client" class="MongoDB\Client" public="false" autowire="true" autoconfigure="true">
      <argument>mongodb://127.0.0.1:27017</argument>
    </service>
    <service id="MongoDB\Database" class="MongoDB\Database" public="true" autowire="true" autoconfigure="true">
      <argument>rialto</argument>
      <factory service="MongoDB\Client" method="selectDatabase"/>
    </service>
    <service id="Rialto\Email\Mailer" class="Rialto\Email\Mailer" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="email"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="Rialto\Security\User\Orm\UserRepository"/>
      <argument type="service" id="monolog.logger.email"/>
    </service>
    <service id="Rialto\Email\Attachment\AttachmentZipper" class="Rialto\Email\Attachment\AttachmentZipper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Filesystem\TempFilesystem"/>
    </service>
    <service id="Rialto\Email\Web\EmailExtension" class="Rialto\Email\Web\EmailExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Fabiang\Xmpp\Options" class="Fabiang\Xmpp\Options" public="false" autowire="true" autoconfigure="true">
      <argument>tls://talk.google.com:5223</argument>
      <call method="setUsername">
        <argument>bob.t.erbauer</argument>
      </call>
      <call method="setPassword">
        <argument></argument>
      </call>
      <call method="setTo">
        <argument>gmail.com</argument>
      </call>
      <call method="setTimeout">
        <argument>10</argument>
      </call>
    </service>
    <service id="Fabiang\Xmpp\Client" class="Fabiang\Xmpp\Client" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Fabiang\Xmpp\Options"/>
    </service>
    <service id="Rialto\Filesystem\Filesystem" class="Rialto\Filesystem\Filesystem" public="false" autowire="true" autoconfigure="true" abstract="true">
      <argument>/home/stefan/Documents/Applications/rialto/app/..</argument>
    </service>
    <service id="Gumstix\Storage\FileStorage" class="Gumstix\Storage\FileStorage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Aws\S3\S3Client"/>
      <argument>devstix-rialto-files</argument>
      <factory class="Gumstix\Storage\GaufretteStorage" method="awsS3"/>
    </service>
    <service id="Rialto\Filesystem\TempFilesystem" class="Rialto\Filesystem\TempFilesystem" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Filetype\Pdf\PdfGenerator" class="Rialto\Filetype\Pdf\PdfGenerator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="Rialto\Filetype\Postscript\PostscriptConverter" class="Rialto\Filetype\Postscript\PostscriptConverter" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Filetype\Image\QrCodeGenerator" class="Rialto\Filetype\Image\QrCodeGenerator" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Filetype\FiletypeExtension" class="Rialto\Filetype\FiletypeExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Rialto\Filetype\Image\QrCodeGenerator"/>
    </service>
    <service id="Rialto\Filetype\Pdf\LatexExtension" class="Rialto\Filetype\Pdf\LatexExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Rialto\Filetype\Postscript\FontFilesystem" class="Rialto\Filetype\Postscript\FontFilesystem" public="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.request" method="initPostscriptFonts"/>
      <tag name="container.hot_path"/>
      <argument>/home/stefan/Documents/Applications/rialto/fonts</argument>
    </service>
    <service id="Rialto\Filetype\Pdf\PdfConverter" class="Rialto\Filetype\Pdf\PdfConverter" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Filesystem\TempFilesystem"/>
    </service>
    <service id="Rialto\Filetype\Image\OcrConverter" class="Rialto\Filetype\Image\OcrConverter" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Filesystem\TempFilesystem"/>
    </service>
    <service id="Rialto\Filing\DocumentFilesystem" class="Rialto\Filing\DocumentFilesystem" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\Filing\DocumentGenerator" class="Rialto\Filing\DocumentGenerator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Filing\DocumentFilesystem"/>
      <argument type="service" id="Rialto\Filetype\Postscript\FontFilesystem"/>
    </service>
    <service id="Rialto\Geography\Address\Web\AddressToArrayTransformer" class="Rialto\Geography\Address\Web\AddressToArrayTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Geography\Address\Web\AddressEntityType" class="Rialto\Geography\Address\Web\AddressEntityType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Geography\Address\Web\AddressToArrayTransformer"/>
    </service>
    <service id="Rialto\Geppetto\GeppettoClient" class="Rialto\Geppetto\GeppettoClient" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\SSOBundle\Service\HttpClientFactory"/>
      <argument>http://geppetto.mystix.com</argument>
    </service>
    <service id="Rialto\Geppetto\Design\DesignFactory" class="Rialto\Geppetto\Design\DesignFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Item\StockItemFactory"/>
      <argument type="service" id="Rialto\Stock\Cost\StandardCostUpdater"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Geppetto\Design\DesignStockItemFactory" class="Rialto\Geppetto\Design\DesignStockItemFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Geppetto\Design\DesignStockItemTemplateFactory"/>
      <argument type="service" id="Rialto\Stock\Item\StockItemFactory"/>
      <argument type="service" id="Rialto\Stock\Cost\StandardCostUpdater"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Geppetto\Design\DesignStockItemTemplateFactory" class="Rialto\Geppetto\Design\DesignStockItemTemplateFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Geppetto\Design\Web\DesignController" class="Rialto\Geppetto\Design\Web\DesignController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Rialto\Geppetto\Design\DesignFactory"/>
      <argument type="service" id="Rialto\Geppetto\Design\DesignStockItemFactory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Madison\MadisonClient"/>
    </service>
    <service id="Rialto\Geppetto\StandardCostListener" class="Rialto\Geppetto\StandardCostListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Stock\Cost\StandardCostUpdater"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Legacy\CurlHelper" class="Rialto\Legacy\CurlHelper">
      <call method="disableCertificateCheck">
        <argument>true</argument>
      </call>
    </service>
    <service id="Rialto\Logging\FlashLogger" class="Rialto\Logging\FlashLogger" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="session"/>
    </service>
    <service id="Rialto\Logging\FlashHandler" class="Rialto\Logging\FlashHandler" public="false" autowire="true" autoconfigure="true">
      <call method="setSession">
        <argument type="service" id="session"/>
      </call>
    </service>
    <service id="Rialto\Logging\Cli\RecreateMongoLogsCommand" class="Rialto\Logging\Cli\RecreateMongoLogsCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="MongoDB\Database"/>
    </service>
    <service id="Rialto\Madison\MadisonClient" class="Rialto\Madison\MadisonClient" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\SSOBundle\Service\HttpClientFactory"/>
      <argument>http://madison.mystix.com/app.php</argument>
      <argument type="service" id="Rialto\Madison\Link\LinkFactory"/>
    </service>
    <service id="Rialto\Madison\Feature\Web\FeatureType" class="Rialto\Madison\Feature\Web\FeatureType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Madison\MadisonClient"/>
    </service>
    <service id="Rialto\Madison\Feature\FeatureInjector" class="Rialto\Madison\Feature\FeatureInjector" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Madison\Feature\Repository\StockItemFeatureRepository"/>
    </service>
    <service id="Rialto\Madison\Version\VersionChangeCache" class="Rialto\Madison\Version\VersionChangeCache" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Madison\Version\VersionChangeListener" class="Rialto\Madison\Version\VersionChangeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="preUpdate"/>
      <argument type="service" id="Rialto\Madison\Version\VersionChangeCache"/>
    </service>
    <service id="Rialto\Madison\Version\VersionChangeNotifier" class="Rialto\Madison\Version\VersionChangeNotifier" public="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Madison\MadisonClient"/>
      <argument type="service" id="Rialto\Madison\Version\VersionChangeCache"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Rialto\Madison\Feature\Repository\StockItemFeatureRepository" class="Rialto\Madison\Feature\Repository\DQL\DqlStockItemFeatureRepository" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Madison\Feature\StockItemFeatureCalculator" class="Rialto\Madison\Feature\StockItemFeatureCalculator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Madison\Feature\Repository\StockItemFeatureRepository"/>
      <argument type="service" id="Rialto\Manufacturing\Customization\Customizer"/>
    </service>
    <service id="Rialto\Madison\Link\LinkFactory" class="Rialto\Madison\Link\LinkFactory" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Magento2\Firewall\MagentoAuthenticator" class="Rialto\Magento2\Firewall\MagentoAuthenticator" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Magento2\Firewall\StorefrontUserProvider" class="Rialto\Magento2\Firewall\StorefrontUserProvider" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Magento2\Order\PaymentProcessor" class="Rialto\Magento2\Order\PaymentProcessor" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Magento2\Api\Rest\RestApiFactory"/>
    </service>
    <service id="Rialto\Magento2\Order\ShipmentListener" class="Rialto\Magento2\Order\ShipmentListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Magento2\Api\Rest\RestApiFactory"/>
    </service>
    <service id="Rialto\Magento2\Order\OrderClosedListener" class="Rialto\Magento2\Order\OrderClosedListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Magento2\Api\Rest\RestApiFactory"/>
    </service>
    <service id="Rialto\Magento2\Stock\StockUpdateListener" class="Rialto\Magento2\Stock\StockUpdateListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Magento2\Api\Rest\RestApiFactory"/>
    </service>
    <service id="Rialto\Magento2\Stock\Cli\SyncStockLevelsCommand" class="Rialto\Magento2\Stock\Cli\SyncStockLevelsCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Magento2\Api\Rest\RestApiFactory"/>
    </service>
    <service id="Rialto\Magento2\Order\Cli\SyncOrdersCommand" class="Rialto\Magento2\Order\Cli\SyncOrdersCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Magento2\Order\OrderSynchronizerInterface"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Rialto\Magento2\Order\OrderSynchronizerInterface" class="Rialto\Magento2\Order\OrderSynchronizer" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Magento2\Api\Rest\RestApiFactory"/>
      <argument type="service" id="Rialto\Sales\Order\Import\OrderImporter"/>
    </service>
    <service id="Rialto\Magento2\Api\Rest\RestApiFactory" class="Rialto\Magento2\Api\Rest\RestApiFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Rialto\Magento2\Order\SuspectedFraudListener" class="Rialto\Magento2\Order\SuspectedFraudListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
    </service>
    <service id="Rialto\Manufacturing\Audit\Adjustment\UseAvailableStock" class="Rialto\Manufacturing\Audit\Adjustment\UseAvailableStock" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
    </service>
    <service id="Rialto\Manufacturing\Audit\Adjustment\AdjustPlaceholders" class="Rialto\Manufacturing\Audit\Adjustment\AdjustPlaceholders" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
    </service>
    <service id="Rialto\Manufacturing\Audit\Adjustment\ReceiveTransfers" class="Rialto\Manufacturing\Audit\Adjustment\ReceiveTransfers" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Transfer\TransferReceiver"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
    </service>
    <service id="Rialto\Manufacturing\Audit\Adjustment\ReceivePurchaseOrders" class="Rialto\Manufacturing\Audit\Adjustment\ReceivePurchaseOrders" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Purchasing\Receiving\Receiver"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="Rialto\Manufacturing\Audit\Adjustment\AdjustCompetitors" class="Rialto\Manufacturing\Audit\Adjustment\AdjustCompetitors" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
    </service>
    <service id="Rialto\Manufacturing\Audit\AuditAdjuster" class="Rialto\Manufacturing\Audit\AuditAdjuster" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <call method="addReleaseStrategy">
        <argument type="service" id="Rialto\Manufacturing\Audit\Adjustment\AdjustPlaceholders"/>
      </call>
      <call method="addAcquireStrategy">
        <argument type="service" id="Rialto\Manufacturing\Audit\Adjustment\UseAvailableStock"/>
      </call>
      <call method="addAcquireStrategy">
        <argument type="service" id="Rialto\Manufacturing\Audit\Adjustment\AdjustPlaceholders"/>
      </call>
      <call method="addAcquireStrategy">
        <argument type="service" id="Rialto\Manufacturing\Audit\Adjustment\AdjustCompetitors"/>
      </call>
    </service>
    <service id="Rialto\Manufacturing\Bom\Bag\AddBagToBomListener" class="Rialto\Manufacturing\Bom\Bag\AddBagToBomListener" public="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Manufacturing\Bom\Bag\BagAdder"/>
    </service>
    <service id="Rialto\Manufacturing\Bom\Bag\BagAdder" class="Rialto\Manufacturing\Bom\Bag\BagAdder" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Manufacturing\Bom\Bag\BagFinder"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
    </service>
    <service id="Rialto\Manufacturing\Bom\Bag\BagFinder" class="Rialto\Manufacturing\Bom\Bag\BagFinder" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Manufacturing\Bom\Bag\BagFinderGateway"/>
    </service>
    <service id="Rialto\Manufacturing\Bom\Bag\BagFinderGateway" class="Rialto\Manufacturing\Bom\Bag\BagFinderGateway" public="false" autowire="true" autoconfigure="true">
      <argument>Rialto\Stock\Item\Version\ItemVersion</argument>
      <factory service="doctrine" method="getRepository"/>
    </service>
    <service id="Rialto\Manufacturing\Bom\Validator\IsValidBomCsvValidator" class="Rialto\Manufacturing\Bom\Validator\IsValidBomCsvValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Manufacturing\Bom\Bag\BagFitStrategy" class="Rialto\Manufacturing\Bom\Bag\BagFitStrategy" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Manufacturing\BuildFiles\PcbBuildFileVoter" class="Rialto\Manufacturing\BuildFiles\PcbBuildFileVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="Rialto\Manufacturing\Customization\ExtendedTemperatureCustomization" class="Rialto\Manufacturing\Customization\ExtendedTemperatureCustomization" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument>-40</argument>
      <argument>85</argument>
    </service>
    <service id="Rialto\Manufacturing\Customization\Customizer" class="Rialto\Manufacturing\Customization\Customizer" public="false" autowire="true" autoconfigure="true">
      <call method="register">
        <argument>ext-temp</argument>
        <argument type="service" id="Rialto\Manufacturing\Customization\ExtendedTemperatureCustomization"/>
      </call>
    </service>
    <service id="Rialto\Manufacturing\Customization\Web\CustomizationStrategyType" class="Rialto\Manufacturing\Customization\Web\CustomizationStrategyType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Manufacturing\Customization\Customizer"/>
    </service>
    <service id="Rialto\Manufacturing\Customization\CustomizationErrorHandler" class="Rialto\Manufacturing\Customization\CustomizationErrorHandler" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Email\Mailer"/>
    </service>
    <service id="Rialto\Manufacturing\Customization\Cli\ValidateSubstitutionsCommand" class="Rialto\Manufacturing\Customization\Cli\ValidateSubstitutionsCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="Rialto\Manufacturing\Kit\Reminder\SendEmailCommand" class="Rialto\Manufacturing\Kit\Reminder\SendEmailCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Stock\Transfer\Orm\TransferRepository"/>
      <argument type="service" id="Rialto\Security\User\Orm\UserRepository"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Rialto\Manufacturing\Kit\Reminder\EmailScheduler" class="Rialto\Manufacturing\Kit\Reminder\EmailScheduler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Manufacturing\WorkOrder\WorkOrderFactory" class="Rialto\Manufacturing\WorkOrder\WorkOrderFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Purchasing\Order\PurchaseOrderFactory"/>
      <argument type="service" id="Rialto\Manufacturing\Requirement\RequirementFactory"/>
    </service>
    <service id="Rialto\Manufacturing\WorkOrder\Issue\WorkOrderIssuer" class="Rialto\Manufacturing\WorkOrder\Issue\WorkOrderIssuer" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Manufacturing\PurchaseOrder\Command\OrderPartsHandler" class="Rialto\Manufacturing\PurchaseOrder\Command\OrderPartsHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="Rialto\Purchasing\Producer\StockProducerFactory"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
    </service>
    <service id="Rialto\Manufacturing\Allocation\Command\AllocateHandler" class="Rialto\Manufacturing\Allocation\Command\AllocateHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="Rialto\Purchasing\Producer\StockProducerFactory"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
    </service>
    <service id="Rialto\Manufacturing\PurchaseOrder\Command\UserSelectManufacturerToOrderHandler" class="Rialto\Manufacturing\PurchaseOrder\Command\UserSelectManufacturerToOrderHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="Rialto\Purchasing\Producer\StockProducerFactory"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
    </service>
    <service id="Rialto\Manufacturing\WorkOrder\WorkOrderPdfGenerator" class="Rialto\Manufacturing\WorkOrder\WorkOrderPdfGenerator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Filetype\Pdf\PdfGenerator"/>
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
      <argument type="service" id="Rialto\Manufacturing\WorkOrder\Filesystem\FlashFilesystem"/>
    </service>
    <service id="Rialto\Manufacturing\WorkType\ProductLabelPrinter" class="Rialto\Manufacturing\WorkType\ProductLabelPrinter" public="true" autowire="true" autoconfigure="true">
      <argument>product</argument>
      <argument type="service" id="Rialto\Printing\Job\PrintQueue"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
      <argument type="service" id="Rialto\Manufacturing\WorkOrder\Issue\WorkOrderIssuer"/>
      <argument type="service" id="Rialto\Purchasing\Receiving\Receiver"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="Rialto\Port\FormatConversion\PostScriptToPdfConverter"/>
    </service>
    <service id="Rialto\Manufacturing\WorkOrder\TransferEventListener" class="Rialto\Manufacturing\WorkOrder\TransferEventListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
    </service>
    <service id="Rialto\Manufacturing\PurchaseOrder\PartsOrderSentListener" class="Rialto\Manufacturing\PurchaseOrder\PartsOrderSentListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Manufacturing\WorkOrder\Cli\AutoBuildCommand" class="Rialto\Manufacturing\WorkOrder\Cli\AutoBuildCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="Rialto\Manufacturing\Requirement\RequirementFactory" class="Rialto\Manufacturing\Requirement\RequirementFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Manufacturing\Requirement\ScrapCalculator"/>
      <argument type="service" id="Rialto\Manufacturing\Customization\Customizer"/>
      <argument type="service" id="Rialto\Manufacturing\Customization\CustomizationErrorHandler"/>
    </service>
    <service id="Rialto\Manufacturing\Requirement\ScrapCalculator" class="Rialto\Manufacturing\Requirement\ScrapCalculator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Manufacturing\Task\ProductionTaskFactory" class="Rialto\Manufacturing\Task\ProductionTaskFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Manufacturing\Task\ProductionTaskRefreshListener" class="Rialto\Manufacturing\Task\ProductionTaskRefreshListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="postUpdate"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Manufacturing\Task\Cli\TasksCommand" class="Rialto\Manufacturing\Task\Cli\TasksCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="automation"/>
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Manufacturing\Task\ProductionTaskFactory"/>
      <argument type="service" id="monolog.logger.automation"/>
    </service>
    <service id="Rialto\Manufacturing\Task\Cli\RefreshProductionTasksCommand" class="Rialto\Manufacturing\Task\Cli\RefreshProductionTasksCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="Rialto\Manufacturing\Task\Cli\ProductionTaskReminderCommand" class="Rialto\Manufacturing\Task\Cli\ProductionTaskReminderCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="Rialto\Manufacturing\Task\Cli\JobsCommand" class="Rialto\Manufacturing\Task\Cli\JobsCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="Rialto\Manufacturing\Web\ManufacturingRouter" class="Rialto\Manufacturing\Web\ManufacturingRouter" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
    </service>
    <service id="Rialto\Manufacturing\Web\ManufacturingExtension" class="Rialto\Manufacturing\Web\ManufacturingExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Manufacturing\Web\ManufacturingRouter"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Manufacturing\WorkOrder\Filesystem\FlashFilesystem" class="Rialto\Manufacturing\WorkOrder\Filesystem\FlashFilesystem" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\Purchasing\EmailEventSubscriber" class="Rialto\Purchasing\EmailEventSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="Rialto\Manufacturing\Log\Logger" class="Rialto\Manufacturing\Log\Logger" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="manufacturing"/>
      <argument type="service" id="monolog.logger.manufacturing"/>
    </service>
    <service id="Rialto\Manufacturing\Log\ProductionLogProcessor" class="Rialto\Manufacturing\Log\ProductionLogProcessor" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.processor" method="processRecord" handler="production"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="Rialto\Manufacturing\ClearToBuild\ClearToBuildFactory" class="Rialto\Manufacturing\ClearToBuild\ClearToBuildFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Purchasing\Producer\CommitmentDateEstimator\StockProducerCommitmentDateEstimator"/>
      <argument type="service" id="Rialto\Shipping\Method\ShippingTimeEstimator\ShippingTimeEstimatorInterface"/>
    </service>
    <service id="Rialto\Manufacturing\Allocation\Orm\StockAllocationRepository" class="Rialto\Manufacturing\Allocation\Orm\DQL\DqlStockAllocationRepository" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Manufacturing\WorkOrder\Web\WorkOrderController" class="Rialto\Manufacturing\WorkOrder\Web\WorkOrderController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Rialto\Panelization\PanelizedOrderFactory" class="Rialto\Panelization\PanelizedOrderFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Security\User\UserManager"/>
      <argument type="service" id="Rialto\Stock\Facility\Orm\FacilityRepository"/>
      <argument type="service" id="Rialto\Manufacturing\Requirement\RequirementFactory"/>
    </service>
    <service id="Rialto\Panelization\Orm\PanelGateway" class="Rialto\Panelization\Orm\PanelGateway" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Panelization\Layout\TopToBottomLayout" class="Rialto\Panelization\Layout\TopToBottomLayout" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Panelization\AssetManager" class="Rialto\Panelization\AssetManager" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
      <argument type="service" id="Rialto\Panelization\Web\PanelPdfGenerator"/>
    </service>
    <service id="Rialto\Panelization\Web\PanelPdfGenerator" class="Rialto\Panelization\Web\PanelPdfGenerator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Filetype\Pdf\PdfGenerator"/>
    </service>
    <service id="Rialto\Panelization\IO\PanelizationStorage" class="Rialto\Panelization\IO\PanelizationStorage" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\Panelization\Validator\PurchasingDataExistsValidator" class="Rialto\Panelization\Validator\PurchasingDataExistsValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Payment\AuthorizeNetFactory" class="Rialto\Payment\AuthorizeNetFactory" public="false" autowire="true" autoconfigure="true">
      <argument>6e79LeRw</argument>
      <argument></argument>
    </service>
    <service id="Rialto\Payment\AuthorizeNet" class="Rialto\Payment\AuthorizeNet" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Payment\AuthorizeNetFactory"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <call method="setSandbox">
        <argument>1</argument>
      </call>
    </service>
    <service id="Rialto\Payment\Sweep\CardTransactionSweep" class="Rialto\Payment\Sweep\CardTransactionSweep" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Payment\AuthorizeNet"/>
      <argument type="service" id="Rialto\Accounting\Bank\Account\Repository\BankAccountRepository"/>
    </service>
    <service id="Rialto\Payment\PaymentProcessor" class="Rialto\Payment\PaymentProcessor" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="flash"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Payment\AuthorizeNet"/>
      <argument type="service" id="monolog.logger.flash"/>
    </service>
    <service id="Rialto\Payment\Sweep\Orm\SweepGateway" class="Rialto\Payment\Sweep\Orm\SweepGateway" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Payment\Sweep\Cli\SweepCardTransactionsCommand" class="Rialto\Payment\Sweep\Cli\SweepCardTransactionsCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Payment\Sweep\Orm\SweepGateway"/>
      <argument type="service" id="Rialto\Payment\Sweep\CardTransactionSweep"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
    </service>
    <service id="pcb_ng_http_client" class="GuzzleHttp\Client" public="false" autowire="true" autoconfigure="true">
      <argument type="collection">
        <argument key="base_uri">https://api-dev.pcbng.com/api/</argument>
        <argument key="http_errors">false</argument>
      </argument>
    </service>
    <service id="Rialto\PcbNg\Service\PcbNgClient" class="Rialto\PcbNg\Service\PcbNgClient" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>https://dev-storefront.pcbng.com/</argument>
      <argument type="service" id="pcb_ng_http_client"/>
      <argument type="service" id="Rialto\PcbNg\Service\GerbersConverter"/>
      <argument>stefan.zhang@gumstix.com</argument>
      <argument>03500208Gs</argument>
    </service>
    <service id="Rialto\PcbNg\Service\PcbNgPurchasingDataFactory" class="Rialto\PcbNg\Service\PcbNgPurchasingDataFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\PcbNg\Service\PcbNgClient"/>
      <argument type="service" id="Rialto\PcbNg\Service\GerbersConverter"/>
      <argument type="service" id="Rialto\PcbNg\Service\LocationsConverter"/>
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\PcbNg\Service\PcbNgSubmitter" class="Rialto\PcbNg\Service\PcbNgSubmitter" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\PcbNg\Service\PcbNgClient"/>
      <argument type="service" id="Rialto\PcbNg\Service\GerbersConverter"/>
      <argument type="service" id="Rialto\PcbNg\Service\LocationsConverter"/>
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\PcbNg\Service\GerbersConverter" class="Rialto\PcbNg\Service\GerbersConverter" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\PcbNg\Service\LocationsConverter" class="Rialto\PcbNg\Service\LocationsConverter" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\PcbNg\Service\PickAndPlaceFactory" class="Rialto\PcbNg\Service\PickAndPlaceFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Purchasing\Catalog\Orm\PurchasingDataRepository"/>
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\PcbNg\Command\CreateManufacturedStockItemPcbNgPurchasingDataHandler" class="Rialto\PcbNg\Command\CreateManufacturedStockItemPcbNgPurchasingDataHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\PcbNg\Service\PcbNgPurchasingDataFactory"/>
      <argument type="service" id="Rialto\PcbNg\Service\PcbNgClient"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Rialto\PcbNg\Service\PcbNgNotificationEmailer" class="Rialto\PcbNg\Service\PcbNgNotificationEmailer" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
    </service>
    <service id="Rialto\PcbNg\Service\PcbNgMailbox" class="Rialto\PcbNg\Service\PcbNgMailbox" public="false" autowire="true" autoconfigure="true">
      <argument>imap.gmail.com</argument>
      <argument>engine@altium.com</argument>
      <argument></argument>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Rialto\PcbNg\Command\ProcessPcbNgEmailsHandler" class="Rialto\PcbNg\Command\ProcessPcbNgEmailsHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="Rialto\PcbNg\Service\PcbNgMailbox"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Printing\Job\PrintQueue" class="Rialto\Printing\Job\PrintQueue" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Printing\Printer\PrinterRepo" class="Rialto\Printing\Printer\PrinterRepo" shared="false" public="false" autowire="true" autoconfigure="true">
      <argument>Rialto\Printing\Printer\Printer</argument>
      <factory service="doctrine" method="getRepository"/>
    </service>
    <service id="Rialto\Printing\Job\Cli\FlushPrintQueue" class="Rialto\Printing\Job\Cli\FlushPrintQueue" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Printing\Job\PrintQueue"/>
    </service>
    <service id="Rialto\Printing\Job\Cli\DeleteCompletedPrintJobs" class="Rialto\Printing\Job\Cli\DeleteCompletedPrintJobs" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Printing\Job\PrintQueue"/>
    </service>
    <service id="Rialto\Printing\Printer\Cli\DevPrintServer" class="Rialto\Printing\Printer\Cli\DevPrintServer" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="Rialto\Purchasing\Catalog\Web\PurchasingDataController" class="Rialto\Purchasing\Catalog\Web\PurchasingDataController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="Rialto\Purchasing\Catalog\Remote\Web\RemoteCatalogController" class="Rialto\Purchasing\Catalog\Remote\Web\RemoteCatalogController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Rialto\Stock\Web\StockRouter"/>
    </service>
    <service id="Rialto\Purchasing\Catalog\Remote\OctopartCatalogParser" class="Rialto\Purchasing\Catalog\Remote\OctopartCatalogParser" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Purchasing\Catalog\Remote\OctopartCatalog" class="Rialto\Purchasing\Catalog\Remote\OctopartCatalog" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="GuzzleHttp\Client"/>
      <argument type="service" id="Rialto\Purchasing\Catalog\Remote\OctopartCatalogParser"/>
      <argument></argument>
    </service>
    <service id="Rialto\Purchasing\Manufacturer\ComplianceFilesystem" class="Rialto\Purchasing\Manufacturer\ComplianceFilesystem" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\Purchasing\Manufacturer\LogoFilesystem" class="Rialto\Purchasing\Manufacturer\LogoFilesystem" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\Purchasing\Catalog\PurchasingDataSynchronizer" class="Rialto\Purchasing\Catalog\PurchasingDataSynchronizer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Rialto\Purchasing\Catalog\Cli\PurchasingDataSynchronizerCommand" class="Rialto\Purchasing\Catalog\Cli\PurchasingDataSynchronizerCommand" public="true" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Purchasing\Catalog\PurchasingDataSynchronizer"/>
    </service>
    <service id="Rialto\Purchasing\Catalog\Orm\PurchasingDataRepository" class="Rialto\Purchasing\Catalog\Orm\PurchasingDataRepository" shared="false" public="false" autowire="true" autoconfigure="true">
      <argument>Rialto\Purchasing\Catalog\PurchasingData</argument>
      <factory service="doctrine" method="getRepository"/>
    </service>
    <service id="Rialto\Purchasing\Catalog\Cli\PurchasingDataStockLevelRefreshCommand" class="Rialto\Purchasing\Catalog\Cli\PurchasingDataStockLevelRefreshCommand" public="true" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Port\CommandBus\CommandQueue"/>
    </service>
    <service id="Rialto\Purchasing\Catalog\Cli\RefreshGeppettoPurchasingDataConsoleCommand" class="Rialto\Purchasing\Catalog\Cli\RefreshGeppettoPurchasingDataConsoleCommand" public="true" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Port\CommandBus\CommandQueue"/>
    </service>
    <service id="Rialto\Purchasing\Catalog\Command\RefreshPurchasingDataStockLevelHandler" class="Rialto\Purchasing\Catalog\Command\RefreshPurchasingDataStockLevelHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Purchasing\Catalog\PurchasingDataSynchronizer"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Reader\Email\AutoImporter" class="Rialto\Purchasing\Invoice\Reader\Email\AutoImporter" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Purchasing\Invoice\Reader\Email\SupplierMailbox"/>
      <argument type="service" id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentParser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Reader\Email\Cli\AutoImportInvoices" class="Rialto\Purchasing\Invoice\Reader\Email\Cli\AutoImportInvoices" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Purchasing\Invoice\Reader\Email\AutoImporter"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Cli\FindUninvoicedOrders" class="Rialto\Purchasing\Invoice\Cli\FindUninvoicedOrders" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Reader\Email\SupplierMailbox" class="Rialto\Purchasing\Invoice\Reader\Email\FakeMailbox" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem" class="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorAttachment" class="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorAttachment" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorBodyLink" class="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorBodyLink" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="GuzzleHttp\Client"/>
      <argument type="service" id="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorUpsBodyLink" class="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorUpsBodyLink" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem"/>
      <argument type="service" id="Rialto\Legacy\CurlHelper"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorInterface" class="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocator" public="false" autowire="true" autoconfigure="true">
      <call method="registerStrategy">
        <argument type="service" id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorAttachment"/>
      </call>
      <call method="registerStrategy">
        <argument type="service" id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorBodyLink"/>
      </call>
      <call method="registerStrategy">
        <argument type="service" id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorUpsBodyLink"/>
      </call>
    </service>
    <service id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentConverter" class="Rialto\Purchasing\Invoice\Reader\Email\AttachmentConverter" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Filetype\Pdf\PdfConverter"/>
      <argument type="service" id="Rialto\Filetype\Image\OcrConverter"/>
      <argument type="service" id="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Parser\SupplierInvoiceParser" class="Rialto\Purchasing\Invoice\Parser\SupplierInvoiceParser" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentParser" class="Rialto\Purchasing\Invoice\Reader\Email\AttachmentParser" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocatorInterface"/>
      <argument type="service" id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentConverter"/>
      <argument type="service" id="Rialto\Purchasing\Invoice\Parser\SupplierInvoiceParser"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Web\SupplierInvoiceItemApprovalType" class="Rialto\Purchasing\Invoice\Web\SupplierInvoiceItemApprovalType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Purchasing\Recurring\Cli\AutoInvoiceCommand" class="Rialto\Purchasing\Recurring\Cli\AutoInvoiceCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\SupplierInvoiceZipper" class="Rialto\Purchasing\Invoice\SupplierInvoiceZipper" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Filesystem\TempFilesystem"/>
      <argument type="service" id="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Command\UploadSupplierInvoiceFileHandler" class="Rialto\Purchasing\Invoice\Command\UploadSupplierInvoiceFileHandler" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController" class="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand" class="Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command" command="purchasing:push-module-manufacturers"/>
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Purchasing\Manufacturer\Command\PushManufacturerFeatureHandler"/>
      <call method="setName">
        <argument>purchasing:push-module-manufacturers</argument>
      </call>
    </service>
    <service id="Rialto\Purchasing\Manufacturer\Command\PushManufacturerFeatureHandler" class="Rialto\Purchasing\Manufacturer\Command\PushManufacturerFeatureHandler" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Madison\Feature\StockItemFeatureCalculator"/>
      <argument type="service" id="Rialto\Madison\MadisonClient"/>
    </service>
    <service id="Rialto\Purchasing\Order\Web\PurchaseOrderController" class="Rialto\Purchasing\Order\Web\PurchaseOrderController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Rialto\Purchasing\Order\PurchaseOrderSender"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="Rialto\Port\CommandBus\CommandBus"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\Purchasing\Order\Web\EditPurchaseOrderType" class="Rialto\Purchasing\Order\Web\EditPurchaseOrderType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Purchasing\Order\Web\CreatePurchaseOrderType" class="Rialto\Purchasing\Order\Web\CreatePurchaseOrderType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Purchasing\Order\PurchaseOrderFactory"/>
    </service>
    <service id="Rialto\Purchasing\Order\Cli\AutoOrderCommand" class="Rialto\Purchasing\Order\Cli\AutoOrderCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="Rialto\Purchasing\Order\PurchaseOrderFactory" class="Rialto\Purchasing\Order\PurchaseOrderFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument>andrew.simpson</argument>
      <call method="loadCurrentUser">
        <argument type="service" id="security.token_storage"/>
      </call>
    </service>
    <service id="Rialto\Purchasing\Order\OrderPdfGenerator" class="Rialto\Purchasing\Order\OrderPdfGenerator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Filetype\Pdf\PdfGenerator"/>
    </service>
    <service id="Rialto\Purchasing\Order\Attachment\PurchaseOrderAttachmentLocator" class="Rialto\Purchasing\Order\Attachment\PurchaseOrderAttachmentLocator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Manufacturing\WorkOrder\WorkOrderPdfGenerator"/>
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
      <argument type="service" id="Rialto\Stock\Publication\PublicationFilesystem"/>
      <argument type="service" id="Rialto\Panelization\IO\PanelizationStorage"/>
    </service>
    <service id="Rialto\Purchasing\Order\Attachment\PurchaseOrderAttachmentGenerator" class="Rialto\Purchasing\Order\Attachment\PurchaseOrderAttachmentGenerator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Purchasing\Order\Attachment\PurchaseOrderAttachmentLocator"/>
    </service>
    <service id="Rialto\Purchasing\Producer\DependencyUpdater" class="Rialto\Purchasing\Producer\DependencyUpdater" public="true" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="flash"/>
      <argument type="service" id="Rialto\Manufacturing\Requirement\RequirementFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Rialto\Purchasing\Catalog\PurchasingDataSynchronizer"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.flash"/>
      </call>
    </service>
    <service id="Rialto\Purchasing\Order\PurchaseOrderSender" class="Rialto\Purchasing\Order\PurchaseOrderSender" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Purchasing\Order\Attachment\PurchaseOrderAttachmentGenerator"/>
      <argument type="service" id="Rialto\Email\Attachment\AttachmentZipper"/>
      <argument type="service" id="Rialto\Purchasing\Order\OrderPdfGenerator"/>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Rialto\Cms\CmsEngine"/>
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage"/>
      </call>
    </service>
    <service id="Rialto\Purchasing\Order\AutoSendReworkOrderSubscriber" class="Rialto\Purchasing\Order\AutoSendReworkOrderSubscriber" public="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Purchasing\Order\OrderPdfGenerator"/>
      <argument type="service" id="Rialto\Purchasing\Order\Attachment\PurchaseOrderAttachmentGenerator"/>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
      <argument type="service" id="Rialto\Cms\CmsEngine"/>
    </service>
    <service id="Rialto\Purchasing\PurchasingErrorHandler" class="Rialto\Purchasing\PurchasingErrorHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="Rialto\Purchasing\Order\PurchaseOrderVoter" class="Rialto\Purchasing\Order\PurchaseOrderVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Purchasing\Order\StockItemVoter" class="Rialto\Purchasing\Order\StockItemVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="Rialto\Purchasing\Producer\StockProducerVoter" class="Rialto\Purchasing\Producer\StockProducerVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Purchasing\Producer\CommitmentDateEstimator\StockProducerCommitmentDateEstimator" class="Rialto\Purchasing\Producer\CommitmentDateEstimator\StockProducerCommitmentDateEstimator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Shipping\Method\ShippingTimeEstimator\ShippingTimeEstimatorInterface"/>
    </service>
    <service id="Rialto\Purchasing\Order\Command\MergePurchaseOrdersHandler" class="Rialto\Purchasing\Order\Command\MergePurchaseOrdersHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Purchasing\Receiving\ItemReceiver" class="Rialto\Purchasing\Receiving\ItemReceiver" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="flash"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Rialto\Manufacturing\WorkOrder\Issue\WorkOrderIssuer"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
      <argument type="service" id="monolog.logger.flash"/>
    </service>
    <service id="Rialto\Purchasing\Receiving\Receiver" class="Rialto\Purchasing\Receiving\Receiver" public="true" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="flash"/>
      <argument type="service" id="Rialto\Purchasing\Receiving\ItemReceiver"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.flash"/>
    </service>
    <service id="Rialto\Purchasing\Receiving\GoodsReceivedLogger" class="Rialto\Purchasing\Receiving\GoodsReceivedLogger" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="receiving"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="monolog.logger.receiving"/>
    </service>
    <service id="Rialto\Purchasing\Receiving\Web\GoodsReceivedType" class="Rialto\Purchasing\Receiving\Web\GoodsReceivedType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Purchasing\Receiving\Auth\ReceiveIntoVoter" class="Rialto\Purchasing\Receiving\Auth\ReceiveIntoVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="Rialto\Purchasing\Receiving\Auth\CanReceiveIntoValidator" class="Rialto\Purchasing\Receiving\Auth\CanReceiveIntoValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Purchasing\Receiving\Notify\XmppEventSubscriber" class="Rialto\Purchasing\Receiving\Notify\XmppEventSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Fabiang\Xmpp\Client"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Rialto\Purchasing\Receiving\Notify\TestXmppCommand" class="Rialto\Purchasing\Receiving\Notify\TestXmppCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Fabiang\Xmpp\Client"/>
    </service>
    <service id="Rialto\Purchasing\Supplier\SupplierPaymentStatus" class="Rialto\Purchasing\Supplier\SupplierPaymentStatus" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Purchasing\Supplier\Attribute\Web\SupplierAttributeType" class="Rialto\Purchasing\Supplier\Attribute\Web\SupplierAttributeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Rialto\Purchasing\Quotation\QuotationCsvMapping" class="Rialto\Purchasing\Quotation\QuotationCsvMapping" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="autowired.Rialto\Purchasing\Supplier\Supplier"/>
    </service>
    <service id="Rialto\Purchasing\Web\PurchasingRouter" class="Rialto\Purchasing\Web\PurchasingRouter" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
    </service>
    <service id="Rialto\Purchasing\Web\PurchasingExtension" class="Rialto\Purchasing\Web\PurchasingExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Purchasing\Web\PurchasingRouter"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem"/>
    </service>
    <service id="Rialto\Purchasing\Producer\StockProducerFactory" class="Rialto\Purchasing\Producer\StockProducerFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Purchasing\Order\PurchaseOrderFactory"/>
      <argument type="service" id="Rialto\Manufacturing\WorkOrder\WorkOrderFactory"/>
    </service>
    <service id="Rialto\Purchasing\Supplier\Web\ActionsController" class="Rialto\Purchasing\Supplier\Web\ActionsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Rialto\Purchasing\LeadTime\LeadTimeCalculator" class="Rialto\Purchasing\LeadTime\LeadTimeCalculator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Purchasing\LeadTime\LeadTimeGateway"/>
    </service>
    <service id="Rialto\Purchasing\LeadTime\LeadTimeGateway" class="Rialto\Purchasing\LeadTime\LeadTimeGateway" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Level\StockLevelService"/>
    </service>
    <service id="Rialto\Purchasing\Producer\Web\StockProducerType" class="Rialto\Purchasing\Producer\Web\StockProducerType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Sales\Invoice\SalesInvoiceProcessor" class="Rialto\Sales\Invoice\SalesInvoiceProcessor" public="true" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="flash"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Shipping\Shipment\DelegatingShipmentFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.flash"/>
    </service>
    <service id="Rialto\Sales\Invoice\Label\EciaLabelManager" class="Rialto\Sales\Invoice\Label\EciaLabelManager" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Printing\Printer\PrinterRepo"/>
    </service>
    <service id="Rialto\Sales\Order\Dates\InitTargetDateCommand" class="Rialto\Sales\Order\Dates\InitTargetDateCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Sales\Order\Dates\TargetShipDateCalculator"/>
    </service>
    <service id="Rialto\Sales\Order\Dates\TargetShipDateCalculator" class="Rialto\Sales\Order\Dates\TargetShipDateCalculator" public="true" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Sales\Order\Dates\TargetShipDateListener" class="Rialto\Sales\Order\Dates\TargetShipDateListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Sales\Order\Dates\TargetShipDateCalculator"/>
    </service>
    <service id="Rialto\Sales\Order\Email\OrderEmailListener" class="Rialto\Sales\Order\Email\OrderEmailListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument>andrew.simpson</argument>
      <argument type="service" id="Rialto\Sales\Order\Email\OrderToEmailFilter"/>
    </service>
    <service id="Rialto\Sales\Shipping\SalesOrderShippingApproval" class="Rialto\Sales\Shipping\SalesOrderShippingApproval" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="validator"/>
      <argument type="service" id="Rialto\Shipping\Export\DeniedPartyScreener"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Sales\Shipping\ApproveToShipEventListener" class="Rialto\Sales\Shipping\ApproveToShipEventListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Sales\Shipping\SalesOrderShippingApproval"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Sales\Discount\DiscountCalculator" class="Rialto\Sales\Discount\DiscountCalculator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Sales\Order\SalesOrderPaymentProcessor" class="Rialto\Sales\Order\SalesOrderPaymentProcessor" public="true" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="flash"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Payment\AuthorizeNet"/>
      <argument type="service" id="Rialto\Accounting\Debtor\DebtorTransactionFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.flash"/>
    </service>
    <service id="Rialto\Sales\Order\OrderUpdateListener" class="Rialto\Sales\Order\OrderUpdateListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Rialto\Sales\Order\Allocation\AllocationEventListener" class="Rialto\Sales\Order\Allocation\AllocationEventListener" public="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Sales\Order\Import\OrderImporter" class="Rialto\Sales\Order\Import\OrderImporter" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Sales\Order\Import\OrderImporterDataSource"/>
    </service>
    <service id="Rialto\Sales\Order\Import\OrderImporterDataSource" class="Rialto\Sales\Order\Import\OrderImporterDataSource" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Sales\Order\CustomerPartNoPopulator" class="Rialto\Sales\Order\CustomerPartNoPopulator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Sales\Order\SoftwareInvoicer" class="Rialto\Sales\Order\SoftwareInvoicer" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Sales\Order\SalesOrderPaymentProcessor"/>
      <argument type="service" id="Rialto\Sales\Invoice\SalesInvoiceProcessor"/>
      <argument type="service" id="Rialto\Shipping\Export\DeniedPartyScreener"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Rialto\Sales\Order\Dates\Web\OrderDateController" class="Rialto\Sales\Order\Dates\Web\OrderDateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Sales\Order\Email\OrderToEmailFilter" class="Rialto\Sales\Order\Email\OrderToEmailFilter" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Sales\Order\Allocation\Command\CreateStockItemOrderHandler" class="Rialto\Sales\Order\Allocation\Command\CreateStockItemOrderHandler" public="true" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Purchasing\Order\PurchaseOrderFactory"/>
      <argument type="service" id="Rialto\Purchasing\Producer\StockProducerFactory"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Sales\Returns\Receipt\SalesReturnReceiver" class="Rialto\Sales\Returns\Receipt\SalesReturnReceiver" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Sales\Returns\Disposition\SalesReturnDisposition" class="Rialto\Sales\Returns\Disposition\SalesReturnDisposition" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Bin\StockBinSplitter"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Rialto\Allocation\Allocation\AllocationFactory"/>
      <argument type="service" id="Rialto\Manufacturing\WorkOrder\WorkOrderFactory"/>
      <argument type="service" id="Rialto\Stock\Transfer\TransferService"/>
    </service>
    <service id="Rialto\Sales\Web\SalesExtension" class="Rialto\Sales\Web\SalesExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Rialto\Sales\Web\SalesRouter"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Sales\Web\SalesRouter" class="Rialto\Sales\Web\SalesRouter" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
    </service>
    <service id="Rialto\Sales\SalesPdfGenerator" class="Rialto\Sales\SalesPdfGenerator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Filing\DocumentGenerator"/>
      <argument type="service" id="Rialto\Filetype\Pdf\PdfGenerator"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Sales\SalesPrintManager" class="Rialto\Sales\SalesPrintManager" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Sales\SalesPdfGenerator"/>
      <argument type="service" id="Rialto\Printing\Job\PrintQueue"/>
      <argument>standard</argument>
    </service>
    <service id="Rialto\Sales\SalesLogger" class="Rialto\Sales\SalesLogger" public="true" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="sales"/>
      <argument type="service" id="monolog.logger.sales"/>
    </service>
    <service id="Rialto\Sales\EmailEventListener" class="Rialto\Sales\EmailEventListener" public="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Sales\SalesPdfGenerator"/>
    </service>
    <service id="Rialto\Sales\DocumentEventListener" class="Rialto\Sales\DocumentEventListener" public="true" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="flash"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Shipping\Shipment\DelegatingShipmentFactory"/>
      <argument type="service" id="Rialto\Sales\SalesPrintManager"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Publication\PublicationPrintManager"/>
      <argument type="service" id="monolog.logger.flash"/>
    </service>
    <service id="Rialto\Security\User\Orm\UserRepository" class="Rialto\Security\User\Orm\UserRepository" shared="false" public="false" autowire="true" autoconfigure="true">
      <argument>Rialto\Security\User\User</argument>
      <factory service="doctrine" method="getRepository"/>
    </service>
    <service id="Rialto\Security\User\Cli\CreateUserCommand" class="Rialto\Security\User\Cli\CreateUserCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="Rialto\Security\User\Cli\PromoteUserCommand" class="Rialto\Security\User\Cli\PromoteUserCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Security\User\Cli\AddUuidCommand" class="Rialto\Security\User\Cli\AddUuidCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="Rialto\Security\User\Web\UserType" class="Rialto\Security\User\Web\UserType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Security\User\UserVoter" class="Rialto\Security\User\UserVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="Rialto\Security\User\UserManager" class="Rialto\Security\User\SymfonyUserManager" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Security\User\LastLoginUpdater" class="Rialto\Security\User\LastLoginUpdater" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Task\TaskVoter" class="Rialto\Task\TaskVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="Rialto\Security\Firewall\ByUuidProvider" class="Rialto\Security\Firewall\ByUuidProvider" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Security\Firewall\ByUsernameProvider" class="Rialto\Security\Firewall\ByUsernameProvider" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Security\Firewall\UsernameNotFoundExceptionHandler" class="Rialto\Security\Firewall\UsernameNotFoundExceptionHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Rialto\Security\Nda\NdaFormListener" class="Rialto\Security\Nda\NdaFormListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Rialto\Security\User\UserManager"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="Rialto\Security\Logging\SentryContextProcessor" class="Rialto\Security\Logging\SentryContextProcessor" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.processor" method="processRecord" handler="sentry"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="Rialto\Security\Web\SecurityExtension" class="Rialto\Security\Web\SecurityExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="Rialto\Shipping\Shipment\DefaultShipmentFactory" class="Rialto\Shipping\Shipment\DefaultShipmentFactory" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Shipping\Shipment\DelegatingShipmentFactory" class="Rialto\Shipping\Shipment\DelegatingShipmentFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Shipping\Shipment\DefaultShipmentFactory"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="registerImplementation">
        <argument>UPS</argument>
        <argument type="service" id="Rialto\Ups\Shipping\UpsShipmentFactory"/>
      </call>
    </service>
    <service id="Rialto\Shipping\Shipment\Web\ShipmentOptionsType" class="Rialto\Shipping\Shipment\Web\ShipmentOptionsType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Shipping\Shipment\DelegatingShipmentFactory"/>
    </service>
    <service id="Rialto\Shipping\Export\AllowedCountryValidator" class="Rialto\Shipping\Export\AllowedCountryValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Shipping\Export\DeniedPartyScreener" class="Rialto\Shipping\Export\FakeDeniedPartyScreener" public="true" autowire="true" autoconfigure="true">
      <argument>false</argument>
    </service>
    <service id="Rialto\Shipping\Method\ShippingTimeEstimator\ShippingTimeEstimatorInterface" class="Rialto\Shipping\Method\ShippingTimeEstimator\ShippingTimeEstimator" public="true" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Shopify\Webhook\WebhookAuthenticator" class="Rialto\Shopify\Webhook\WebhookAuthenticator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Shopify\Webhook\ShopifyUserProvider" class="Rialto\Shopify\Webhook\ShopifyUserProvider" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Shopify\Webhook\Cli\WebhookCustomCommand" class="Rialto\Shopify\Webhook\Cli\WebhookCustomCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="Rialto\Shopify\Order\PaymentProcessor" class="Rialto\Shopify\Order\PaymentProcessor" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="rialto_sales.capture_payment" method="capturePayment"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="GuzzleHttp\Client"/>
    </service>
    <service id="Rialto\Shopify\Order\FulfillmentListener" class="Rialto\Shopify\Order\FulfillmentListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="rialto_sales.order_invoice" method="onOrderInvoice"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="GuzzleHttp\Client"/>
    </service>
    <service id="Rialto\Shopify\Order\OrderClosedListener" class="Rialto\Shopify\Order\OrderClosedListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="rialto_sales.order_closed" method="onOrderClosed"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="GuzzleHttp\Client"/>
    </service>
    <service id="Rialto\Stock\Bin\Label\BinLabelListener" class="Rialto\Stock\Bin\Label\BinLabelListener" public="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Stock\Bin\Label\BinLabelPrintQueue"/>
    </service>
    <service id="Rialto\Stock\Bin\StockBinUpdateListener" class="Rialto\Stock\Bin\StockBinUpdateListener" public="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Port\CommandBus\CommandBus"/>
      <argument type="service" id="Rialto\Logging\FlashLogger"/>
    </service>
    <service id="Rialto\Stock\Bin\Label\BinLabelPrintQueue" class="Rialto\Stock\Bin\Label\BinLabelPrintQueue" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Printing\Job\PrintQueue"/>
      <argument type="service" id="Rialto\Port\FormatConversion\PostScriptToPdfConverter"/>
    </service>
    <service id="Rialto\Stock\Bin\StockBinSplitter" class="Rialto\Stock\Bin\StockBinSplitter" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Stock\Bin\Web\StockAdjustmentType" class="Rialto\Stock\Bin\Web\StockAdjustmentType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Stock\Bin\Web\BinUpdateAllocType" class="Rialto\Stock\Bin\Web\BinUpdateAllocType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Stock\Bin\StockBinVoter" class="Rialto\Stock\Bin\StockBinVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Stock\Bin\Label\Web\LabelController" class="Rialto\Stock\Bin\Label\Web\LabelController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="Rialto\Stock\Bin\Web\StockBinController" class="Rialto\Stock\Bin\Web\StockBinController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Stock\Facility\Orm\FacilityRepository" class="Rialto\Stock\Facility\Orm\FacilityRepository" shared="false" public="false" autowire="true" autoconfigure="true">
      <argument>Rialto\Stock\Facility\Facility</argument>
      <factory service="doctrine" method="getRepository"/>
    </service>
    <service id="Rialto\Stock\Item\Web\ActionsController" class="Rialto\Stock\Item\Web\ActionsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Rialto\Stock\Item\NewSkuValidator" class="Rialto\Stock\Item\NewSkuValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Stock\Item\StockCodeGenerator" class="Rialto\Stock\Item\StockCodeGenerator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Stock\Item\StockItemFactory" class="Rialto\Stock\Item\StockItemFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Item\StockCodeGenerator"/>
    </service>
    <service id="Rialto\Stock\Item\StockItemDeleteService" class="Rialto\Stock\Item\StockItemDeleteService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Stock\Item\Web\StockItemAttributeType" class="Rialto\Stock\Item\Web\StockItemAttributeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="Rialto\Stock\Item\Web\StockItemTemplateType" class="Rialto\Stock\Item\Web\StockItemTemplateType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Stock\Item\Web\EditType" class="Rialto\Stock\Item\Web\EditType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Stock\Item\Version\Web\ItemVersionSelectorType" class="Rialto\Stock\Item\Version\Web\ItemVersionSelectorType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Stock\Item\Version\Orm\ItemVersionRepository"/>
    </service>
    <service id="Rialto\Stock\Item\Version\Orm\ItemVersionRepository" class="Rialto\Stock\Item\Version\Orm\ItemVersionRepository" shared="false" public="false" autowire="true" autoconfigure="true">
      <argument>Rialto\Stock\Item\Version\ItemVersion</argument>
      <factory service="doctrine" method="getRepository"/>
    </service>
    <service id="Rialto\Stock\Item\BatchStockUpdater" class="Rialto\Stock\Item\BatchStockUpdater" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Stock\Item\Cli\BulkSetDefaultWorkOrderCommand" class="Rialto\Stock\Item\Cli\BulkSetDefaultWorkOrderCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Geppetto\GeppettoClient"/>
    </service>
    <service id="Rialto\Stock\Item\EventListener\DefaultWorkTypeListener" class="Rialto\Stock\Item\EventListener\DefaultWorkTypeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber" connection="default"/>
    </service>
    <service id="Rialto\Stock\Item\Cli\StockLevelRefreshCommand" class="Rialto\Stock\Item\Cli\StockLevelRefreshCommand" public="true" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Port\CommandBus\CommandQueue"/>
    </service>
    <service id="Rialto\Stock\Item\Command\RefreshStockLevelHandler" class="Rialto\Stock\Item\Command\RefreshStockLevelHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Stock\Level\StockLevelSynchronizer"/>
    </service>
    <service id="Rialto\Stock\Level\StockLevelSynchronizer" class="Rialto\Stock\Level\StockLevelSynchronizer" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Stock\Level\Cli\StockLevelSyncCommand" class="Rialto\Stock\Level\Cli\StockLevelSyncCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="automation"/>
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Level\StockLevelSynchronizer"/>
      <argument type="service" id="monolog.logger.automation"/>
    </service>
    <service id="Rialto\Stock\Level\StockLevelService" class="Rialto\Stock\Level\StockLevelService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Stock\Publication\PublicationFilesystem" class="Rialto\Stock\Publication\PublicationFilesystem" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Gumstix\Storage\FileStorage"/>
    </service>
    <service id="Rialto\Stock\Publication\PublicationPrintManager" class="Rialto\Stock\Publication\PublicationPrintManager" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Stock\Publication\PublicationFilesystem"/>
      <argument type="service" id="Rialto\Printing\Job\PrintQueue"/>
    </service>
    <service id="Rialto\Stock\Returns\ReturnedItemService" class="Rialto\Stock\Returns\ReturnedItemService" public="true" autowire="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Returns\Problem\ReturnedItemResolver"/>
      <argument type="service" id="Rialto\Stock\Transfer\TransferService"/>
    </service>
    <service id="Rialto\Stock\Returns\Problem\ReturnedItemResolver" class="Rialto\Stock\Returns\Problem\ReturnedItemResolver" public="true" autowire="true">
      <tag name="monolog.logger" channel="receiving"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Transfer\TransferReceiver"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.receiving"/>
    </service>
    <service id="Rialto\Stock\Returns\Web\ReturnedItemsFlow" class="Rialto\Stock\Returns\Web\ReturnedItemsFlow" public="true" autowire="true">
      <call method="setDataManager">
        <argument type="service" id="craue.form.flow.data_manager_default"/>
      </call>
      <call method="setFormFactory">
        <argument type="service" id="form.factory"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      </call>
    </service>
    <service id="Rialto\Stock\Returns\Cli\GenerateMissingAdjustmentGlRecordsCommand" class="Rialto\Stock\Returns\Cli\GenerateMissingAdjustmentGlRecordsCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Stock\Shelf\Position\AssignmentListener" class="Rialto\Stock\Shelf\Position\AssignmentListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Stock\Shelf\Position\PositionAssigner"/>
    </service>
    <service id="Rialto\Stock\Shelf\Position\PositionAssigner" class="Rialto\Stock\Shelf\Position\PositionAssigner" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Shelf\Velocity\VelocityCalculator"/>
      <argument type="service" id="Rialto\Stock\Shelf\Position\Query\FirstAvailablePositionQuery"/>
    </service>
    <service id="Rialto\Stock\Shelf\Velocity\VelocityCalculator" class="Rialto\Stock\Shelf\Velocity\VelocityCalculator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Stock\Transfer\Orm\TransferRepository" class="Rialto\Stock\Transfer\Orm\TransferRepository" shared="false" public="false" autowire="true" autoconfigure="true">
      <argument>Rialto\Stock\Transfer\Transfer</argument>
      <factory service="doctrine" method="getRepository"/>
    </service>
    <service id="Rialto\Stock\Transfer\TransferReceiver" class="Rialto\Stock\Transfer\TransferReceiver" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Stock\Transfer\TransferService" class="Rialto\Stock\Transfer\TransferService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Transfer\TransferReceiver"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Stock\Transfer\BinEventListener" class="Rialto\Stock\Transfer\BinEventListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Stock\Web\StockRouter" class="Rialto\Stock\Web\StockRouter" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
    </service>
    <service id="Rialto\Stock\Web\StockExtension" class="Rialto\Stock\Web\StockExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Web\StockRouter"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="Rialto\Stock\EmailEventListener" class="Rialto\Stock\EmailEventListener" public="true" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Stock\Category\CategoryChange" class="Rialto\Stock\Category\CategoryChange" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Stock\Level\StockLevelService"/>
    </service>
    <service id="Rialto\Stock\Cost\StandardCostUpdater" class="Rialto\Stock\Cost\StandardCostUpdater" public="true" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="flash"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="Rialto\Stock\Level\StockLevelService"/>
      <argument type="service" id="monolog.logger.flash"/>
    </service>
    <service id="Rialto\Stock\Count\Web\CsvStockCountFlow" class="Rialto\Stock\Count\Web\CsvStockCountFlow" public="true" autowire="true">
      <call method="setDataManager">
        <argument type="service" id="craue.form.flow.data_manager_default"/>
      </call>
      <call method="setFormFactory">
        <argument type="service" id="form.factory"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      </call>
    </service>
    <service id="Rialto\Stock\Count\StockCountVoter" class="Rialto\Stock\Count\StockCountVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="Rialto\Stock\Shelf\Position\Query\FirstAvailablePositionQuery" class="Rialto\Stock\Shelf\Position\Query\DQL\DqlFirstAvailablePositionQuery" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Summary\Menu\SummaryVoter" class="Rialto\Summary\Menu\SummaryVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="Rialto\Summary\Menu\Web\SummaryExtension" class="Rialto\Summary\Menu\Web\SummaryExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Rialto\Supplier\Logger" class="Rialto\Supplier\Logger" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="supplier"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="monolog.logger.supplier"/>
    </service>
    <service id="Rialto\Supplier\SupplierVoter" class="Rialto\Supplier\SupplierVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="Rialto\Supplier\Web\SupplierExtension" class="Rialto\Supplier\Web\SupplierExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Supplier\Order\Email\EmailSubscriber" class="Rialto\Supplier\Order\Email\EmailSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Email\Mailer"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="Rialto\Supplier\Allocation\Web\BinAllocationController" class="Rialto\Supplier\Allocation\Web\BinAllocationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id="service_locator.yscbjmj.Rialto\Supplier\Allocation\Web\BinAllocationController"/>
      </call>
    </service>
    <service id="Rialto\Supplier\Order\Web\TrackingFacades\SupplierInvoiceTrackingFacadesFactory" class="Rialto\Supplier\Order\Web\TrackingFacades\SupplierInvoiceTrackingFacadesFactory" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="Rialto\Supplier\Order\Web\WorkOrderController" class="Rialto\Supplier\Order\Web\WorkOrderController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="TaxJar\Client" class="TaxJar\Client" public="false" autowire="true" autoconfigure="true">
      <argument></argument>
      <factory class="TaxJar\Client" method="withApiKey"/>
    </service>
    <service id="Rialto\Tax\TaxJarLookup" class="Rialto\Tax\TaxJarLookup" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="TaxJar\Client"/>
      <argument type="service" id="Rialto\Stock\Facility\Orm\FacilityRepository"/>
    </service>
    <service id="Rialto\Tax\Web\TaxExtension" class="Rialto\Tax\Web\TaxExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Rialto\Tax\Regime\Cli\LoadTaxRegimesCommand" class="Rialto\Tax\Regime\Cli\LoadTaxRegimesCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Time\Web\TimeExtension" class="Rialto\Time\Web\TimeExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Rialto\Ups\UpsAccount" class="Rialto\Ups\UpsAccount" public="false" autowire="true" autoconfigure="true">
      <argument>7BCE6A23028BC75C</argument>
      <argument>craighughes</argument>
      <argument>saywhat</argument>
    </service>
    <service id="Rialto\Ups\Shipping\Export\UpsDeniedPartyScreener" class="Rialto\Ups\Shipping\Export\UpsDeniedPartyScreener" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Ups\UpsAccount"/>
      <argument>https://wwwcie.ups.com</argument>
      <call method="setEnabled">
        <argument>1</argument>
      </call>
      <call method="setScreenType">
        <argument>Party</argument>
      </call>
      <call method="setMatchLevel">
        <argument>High</argument>
      </call>
    </service>
    <service id="Rialto\Ups\Shipping\Label\ShippingLabelListener" class="Rialto\Ups\Shipping\Label\ShippingLabelListener" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="flash"/>
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Printing\Job\PrintQueue"/>
      <argument type="service" id="monolog.logger.flash"/>
    </service>
    <service id="rialto_ups.http_client" class="GuzzleHttp\Client" public="false" autowire="true" autoconfigure="true">
      <argument type="collection">
        <argument key="base_uri">https://wwwcie.ups.com</argument>
      </argument>
    </service>
    <service id="Rialto\Ups\Shipping\Webservice\UpsApiService" class="Rialto\Ups\Shipping\Webservice\UpsApiService" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="ups"/>
      <argument type="service" id="Rialto\Ups\UpsAccount"/>
      <argument type="service" id="rialto_ups.http_client"/>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="monolog.logger.ups"/>
    </service>
    <service id="Rialto\Ups\Shipping\UpsShipmentFactory" class="Rialto\Ups\Shipping\UpsShipmentFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Ups\Shipping\Webservice\UpsApiService"/>
    </service>
    <service id="Rialto\Ups\Shipping\Webservice\UpsExtension" class="Rialto\Ups\Shipping\Webservice\UpsExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Rialto\Ups\Invoice\XmlInvoiceParser" class="Rialto\Ups\Invoice\XmlInvoiceParser" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument>108</argument>
    </service>
    <service id="Rialto\Ups\Invoice\CsvInvoiceParser" class="Rialto\Ups\Invoice\CsvInvoiceParser" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
      <argument>108</argument>
    </service>
    <service id="Rialto\Ups\Invoice\InvoiceLoader" class="Rialto\Ups\Invoice\InvoiceLoader" public="true" autowire="true" autoconfigure="true">
      <argument>ftp2.ups.com</argument>
      <argument>gumstix0316</argument>
      <argument></argument>
      <call method="registerParser">
        <argument type="service" id="Rialto\Ups\Invoice\XmlInvoiceParser"/>
      </call>
      <call method="registerParser">
        <argument type="service" id="Rialto\Ups\Invoice\CsvInvoiceParser"/>
      </call>
    </service>
    <service id="Rialto\Ups\TrackingRecord\Cli\PollTrackingNumbersCommand" class="Rialto\Ups\TrackingRecord\Cli\PollTrackingNumbersCommand" public="true" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Port\CommandBus\CommandBus"/>
    </service>
    <service id="Rialto\Ups\TrackingRecord\Cli\UpdatePOTrackingRecordsCommand" class="Rialto\Ups\TrackingRecord\Cli\UpdatePOTrackingRecordsCommand" public="true" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Ups\TrackingRecord\Cli\UpdateSalesTrackingRecordsCommand" class="Rialto\Ups\TrackingRecord\Cli\UpdateSalesTrackingRecordsCommand" public="true" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Ups\TrackingRecord\Web\TrackingExtension" class="Rialto\Ups\TrackingRecord\Web\TrackingExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Ups\TrackingRecord\Command\UpdateTrackingRecordHandler" class="Rialto\Ups\TrackingRecord\Command\UpdateTrackingRecordHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="tactician.handler" typehints="1"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="Rialto\Ups\Shipping\Webservice\UpsApiService"/>
    </service>
    <service id="Rialto\Web\RialtoExtension" class="Rialto\Web\RialtoExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Web\NumberExtension" class="Rialto\Web\NumberExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Rialto\Web\LockingParamConverter" class="Rialto\Web\LockingParamConverter" public="false" autowire="true" autoconfigure="true">
      <tag name="request.param_converter" priority="10"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="Rialto\Web\Serializer\DateTimeNormalizer" class="Rialto\Web\Serializer\DateTimeNormalizer" public="false" autowire="true" autoconfigure="true">
      <tag name="serializer.normalizer"/>
    </service>
    <service id="Rialto\Web\Serializer\ViewHandler" class="Rialto\Web\Serializer\ViewHandler" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="fos_rest.view_handler.default"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Rialto\Web\Form\JsEntityType" class="Rialto\Web\Form\JsEntityType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Web\Form\TextEntityType" class="Rialto\Web\Form\TextEntityType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Web\Form\Validator" class="Rialto\Web\Form\Validator" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="validator"/>
    </service>
    <service id="Rialto\Web\Form\FormExtension" class="Rialto\Web\Form\FormExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Rialto\Web\Form\NumberTypeExtension" class="Rialto\Web\Form\NumberTypeExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\NumberType"/>
    </service>
    <service id="rialto_wordpress.http_client" class="GuzzleHttp\Client" public="false" autowire="true" autoconfigure="true">
      <argument type="collection">
        <argument key="base_uri">http://www.mystix.com</argument>
        <argument key="http_errors">false</argument>
      </argument>
    </service>
    <service id="Gumstix\Wordpress\Service\RpcClient" class="Gumstix\Wordpress\Service\RpcClient" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="rialto_wordpress.http_client"/>
      <argument>rialto</argument>
      <argument></argument>
    </service>
    <service id="Rialto\Wordpress\ChangeNoticeListener" class="Rialto\Wordpress\ChangeNoticeListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Gumstix\Wordpress\Service\RpcClient"/>
      <argument type="service" id="templating.engine.twig"/>
      <argument>pcn</argument>
    </service>
    <service id="Rialto\Port\CommandBus\CommandBus" class="Infrastructure\CommandBus\TacticianCommandBus" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="tactician.commandbus.default"/>
    </service>
    <service id="Infrastructure\CommandBus\DispatchRecordedEventsMiddleware" class="Infrastructure\CommandBus\DispatchRecordedEventsMiddleware" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Port\EventDispatcher\EventRecorderInterface"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Infrastructure\CommandBus\LogCommandMiddleware" class="Infrastructure\CommandBus\LogCommandMiddleware" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="automation"/>
      <argument type="service" id="monolog.logger.automation"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="Rialto\Security\User\UserManager"/>
    </service>
    <service id="Rialto\Port\CommandBus\CommandQueue" class="Infrastructure\CommandBus\JmsCommandQueue" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="serializer"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="Rialto\Port\CommandBus\HandleCommandConsoleCommand" class="Rialto\Port\CommandBus\HandleCommandConsoleCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="monolog.logger" channel="automation"/>
      <tag name="console.command"/>
      <argument type="service" id="Rialto\Port\CommandBus\CommandBus"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="monolog.logger.automation"/>
    </service>
    <service id="Rialto\Port\EventDispatcher\EventRecorderInterface" class="Infrastructure\EventDispatcher\SimpleEventRecorder" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Port\FormatConversion\PostScriptToPdfConverter" class="Infrastructure\FormatConversion\GhostscriptConverter" public="false" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Purchasing\Invoice\Reader\Email\AttachmentLocator" class="Rialto\Purchasing\Invoice\Reader\Email\FakeAttachmentLocator" autowire="true" autoconfigure="true"/>
    <service id="Rialto\Payment\FakeGateway" class="Rialto\Payment\FakeGateway" autowire="true" autoconfigure="true">
      <argument type="service" id="Rialto\Database\Orm\ErpDbManager"/>
    </service>
    <service id="Rialto\Email\FakeTransport" class="Rialto\Email\FakeTransport" public="true" autowire="true" autoconfigure="true">
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="100"/>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="service_locator.zsk7zqm"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-100"/>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-150"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="controller_name_converter"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged" tag="kernel.cache_warmer"/>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <argument type="collection">
        <argument>Symfony\Component\HttpFoundation\ParameterBag</argument>
        <argument>Symfony\Component\HttpFoundation\HeaderBag</argument>
        <argument>Symfony\Component\HttpFoundation\FileBag</argument>
        <argument>Symfony\Component\HttpFoundation\ServerBag</argument>
        <argument>Symfony\Component\HttpFoundation\Request</argument>
        <argument>Symfony\Component\HttpKernel\Kernel</argument>
      </argument>
      <deprecated>The "%service_id%" option is deprecated since version 3.3, to be removed in 4.0.</deprecated>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged" tag="kernel.cache_clearer"/>
    </service>
    <service id="kernel" public="true" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/home/stefan/Documents/Applications/rialto/app/Resources</argument>
      <argument type="collection">
        <argument>/home/stefan/Documents/Applications/rialto/app</argument>
      </argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>dbe2ad5133a4f5cc31bf35299e956df963ff944bb385d89e9b2b078d902c2816</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.sentry" type="service" id="monolog.handler.sentry" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.production" type="service" id="monolog.handler.production" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.automation" type="service" id="monolog.handler.automation" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.email" type="service" id="monolog.handler.email" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.doctrine" type="service" id="monolog.handler.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.ups" type="service" id="monolog.handler.ups" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.php" type="service" id="monolog.handler.php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.view_handler.default" type="service" id="fos_rest.view_handler.default" on-invalid="ignore_uninitialized"/>
        <argument key="webpack_encore.tag_renderer" type="service" id="webpack_encore.tag_renderer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.webpack_encore" type="service" id="cache.webpack_encore" on-invalid="ignore_uninitialized"/>
        <argument key="webpack_encore.entrypoint_lookup[_default]" type="service" id="webpack_encore.entrypoint_lookup[_default]" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app">reset</argument>
        <argument key="cache.system">reset</argument>
        <argument key="cache.validator">reset</argument>
        <argument key="cache.serializer">reset</argument>
        <argument key="cache.annotations">reset</argument>
        <argument key="debug.stopwatch">reset</argument>
        <argument key="debug.event_dispatcher">reset</argument>
        <argument key="security.token_storage">setToken</argument>
        <argument key="monolog.handler.sentry">reset</argument>
        <argument key="monolog.handler.production">reset</argument>
        <argument key="monolog.handler.automation">reset</argument>
        <argument key="monolog.handler.email">reset</argument>
        <argument key="monolog.handler.doctrine">reset</argument>
        <argument key="monolog.handler.ups">reset</argument>
        <argument key="monolog.handler.php">reset</argument>
        <argument key="monolog.handler.console">reset</argument>
        <argument key="swiftmailer.email_sender.listener">reset</argument>
        <argument key="form.type.entity">reset</argument>
        <argument key="fos_rest.view_handler.default">reset</argument>
        <argument key="webpack_encore.tag_renderer">reset</argument>
        <argument key="cache.webpack_encore">reset</argument>
        <argument key="webpack_encore.entrypoint_lookup[_default]">reset</argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id="service_locator.w7xlwgx"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.logging"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/home/stefan/Documents/Applications/rialto/translations</argument>
      <argument>/home/stefan/Documents/Applications/rialto/templates</argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/home/stefan/Documents/Applications/rialto/translations</argument>
      <argument>/home/stefan/Documents/Applications/rialto/templates</argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>Rialto\Cms\Web</argument>
        <argument>Rialto\Geography\Address\Web</argument>
        <argument>Rialto\Madison\Feature\Web</argument>
        <argument>Rialto\Manufacturing\Customization\Web</argument>
        <argument>Rialto\Purchasing\Invoice\Web</argument>
        <argument>Rialto\Purchasing\Order\Web</argument>
        <argument>Rialto\Purchasing\Receiving\Web</argument>
        <argument>Rialto\Purchasing\Supplier\Attribute\Web</argument>
        <argument>Rialto\Purchasing\Producer\Web</argument>
        <argument>Rialto\Security\User\Web</argument>
        <argument>Rialto\Shipping\Shipment\Web</argument>
        <argument>Rialto\Stock\Bin\Web</argument>
        <argument>Rialto\Stock\Item\Web</argument>
        <argument>Rialto\Stock\Item\Version\Web</argument>
        <argument>Rialto\Web\Form</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>Rialto\Cms\Web\CmsEntryType</argument>
        <argument>Rialto\Geography\Address\Web\AddressEntityType</argument>
        <argument>Rialto\Madison\Feature\Web\FeatureType</argument>
        <argument>Rialto\Manufacturing\Customization\Web\CustomizationStrategyType</argument>
        <argument>Rialto\Purchasing\Invoice\Web\SupplierInvoiceItemApprovalType</argument>
        <argument>Rialto\Purchasing\Order\Web\EditPurchaseOrderType</argument>
        <argument>Rialto\Purchasing\Order\Web\CreatePurchaseOrderType</argument>
        <argument>Rialto\Purchasing\Receiving\Web\GoodsReceivedType</argument>
        <argument>Rialto\Purchasing\Supplier\Attribute\Web\SupplierAttributeType</argument>
        <argument>Rialto\Purchasing\Producer\Web\StockProducerType</argument>
        <argument>Rialto\Security\User\Web\UserType</argument>
        <argument>Rialto\Shipping\Shipment\Web\ShipmentOptionsType</argument>
        <argument>Rialto\Stock\Bin\Web\StockAdjustmentType</argument>
        <argument>Rialto\Stock\Bin\Web\BinUpdateAllocType</argument>
        <argument>Rialto\Stock\Item\Web\StockItemAttributeType</argument>
        <argument>Rialto\Stock\Item\Web\StockItemTemplateType</argument>
        <argument>Rialto\Stock\Item\Web\EditType</argument>
        <argument>Rialto\Stock\Item\Version\Web\ItemVersionSelectorType</argument>
        <argument>Rialto\Web\Form\JsEntityType</argument>
        <argument>Rialto\Web\Form\TextEntityType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminFormType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminAutocompleteType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminDividerType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminSectionType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminGroupType</argument>
      </argument>
      <argument type="collection">
        <argument>Rialto\Web\Form\NumberTypeExtension</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Craue\FormFlowBundle\Form\Extension\FormFlowFormExtension</argument>
        <argument>Craue\FormFlowBundle\Form\Extension\FormFlowHiddenFieldExtension</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EasyAdminExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Guesser\MissingDoctrineOrmTypeGuesser</argument>
      </argument>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>mvd-zwBBmi</argument>
      <argument>0</argument>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>0jh7X3y8vj</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>NZqc2hKsY6</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>2BZSraCeyL</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>UdmIUttHVZ</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.webpack_encore" type="service" id="cache.webpack_encore" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.webpack_encore" type="service" id="cache.webpack_encore" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id="2_ServiceLocator~onbzduz" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="1_NativeFileSessionHandler~onbzduz" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id="1_NativeFileSessionHandler~onbzduz"/>
    </service>
    <service id="session.handler.write_check" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.4 and will be removed in 4.0. Use the `session.lazy_write` ini setting instead.</deprecated>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="2_ServiceLocator~onbzduz"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id="service_locator.mojpgvr"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\NumberType" type="iterator">
          <argument type="service" id="Rialto\Web\Form\NumberTypeExtension"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="craue.form.flow.form_extension"/>
          <argument type="service" id="easyadmin.form.type.extension"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\HiddenType" type="iterator">
          <argument type="service" id="craue.form.flow.hidden_field_extension"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
        <argument type="service" id="easyadmin.form.guesser.missing_doctrine_orm_type_guesser"/>
      </argument>
      <argument>null</argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.logging" on-invalid="ignore"/>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.range" class="Symfony\Component\Form\Extension\Core\Type\RangeType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType" public="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.logging" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.logging"/>
      <argument>validators</argument>
    </service>
    <service id="deprecated.form.registry" class="stdClass">
      <property name="registry" type="collection"/>
      <deprecated>The service "%service_id%" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0</deprecated>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.logging" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="deprecated.form.registry.csrf" class="stdClass">
      <property name="registry" type="collection"/>
      <deprecated>The service "%service_id%" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0</deprecated>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._version__default" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy">
      <argument>2a685dc7e</argument>
      <argument>%%s?%%s</argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets._version__default"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="templating.engine.delegating" class="Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev</argument>
    </service>
    <service id="templating.finder" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="templating.filename_parser"/>
      <argument>/home/stefan/Documents/Applications/rialto/app/Resources</argument>
    </service>
    <service id="templating.cache_warmer.template_paths" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="20"/>
      <argument type="service" id="templating.finder"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.filesystem" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader" public="false">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.cache" class="Symfony\Component\Templating\Loader\CacheLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <argument type="service" id="templating.loader.wrapped"/>
      <argument>null</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="templating.loader.chain" class="Symfony\Component\Templating\Loader\ChainLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="2_ApcCache~xbqoag9" class="Doctrine\Common\Cache\ApcCache" public="false">
      <call method="setNamespace">
        <argument></argument>
      </call>
    </service>
    <service id="1_PhpArrayAdapter~xbqoag9" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="true">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.logging" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id="1_PhpArrayAdapter~xbqoag9"/>
    </service>
    <service id="validator.mapping.cache.doctrine.apc" class="Symfony\Component\Validator\Mapping\Cache\DoctrineCache" public="false">
      <argument type="service" id="2_ApcCache~xbqoag9"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.4 and will be removed in 4.0. Use a Psr6 cache like "validator.mapping.cache.symfony" instead.</deprecated>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id="service_locator.jjt03.w"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_locator.yepb.pt"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.ar.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.be.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.be.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.bg.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.ca.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.cs.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.cs.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.cs.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.da.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.de.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.de.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.de.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.el.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.en.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.en.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.en.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.en.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/app/Resources/translations/form.en.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/app/Resources/translations/validators.en.yml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.es.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.es.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.es.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.eu.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.eu.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.fa.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.fa.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.fa.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.fi.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.fr.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.fr.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.fr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.gl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.hr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.hu.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.hu.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.hu.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.it.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.it.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.it.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.lt.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.nl.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.nl.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.nl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nn.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.pl.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.pl.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.pl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.pt.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.pt_BR.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.pt_BR.yml</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.ro.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.ru.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.ru.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.ru.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.sk.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.sk.yml</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.sl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.sv.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tl.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.tr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.tr.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.uk.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.uk.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.uk.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.uk.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.uk.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.vi.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.zh_CN.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.zh_CN.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.zh_CN.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/CraueFormFlowBundle.zh_TW.yml</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/translations/validators.zh_TW.yml</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="sr_RS" type="collection">
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/EasyAdminBundle.sr_RS.xlf</argument>
            <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/translations/messages.sr_RS.xlf</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="translator.selector"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.4 and will be removed in 4.0. Use "translation.reader" instead.</deprecated>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" key="translator" id="translator.logging.inner"/>
      <argument type="service" id="service_locator.s.m3yzc.translation.warmer"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="translator.logging"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="cache_connection.gd_mszc" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache_connection.jke6kex" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>-1</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/home/stefan/Documents/Applications/rialto</argument>
      <argument type="service" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Allocation\Allocation\EmptyAllocationRemover"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Cms\ExceptionHandler"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Filetype\Postscript\FontFilesystem"/>
          <argument>initPostscriptFonts</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.capture_payment</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Shopify\Order\PaymentProcessor"/>
          <argument>capturePayment</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_invoice</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Shopify\Order\FulfillmentListener"/>
          <argument>onOrderInvoice</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_closed</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Shopify\Order\OrderClosedListener"/>
          <argument>onOrderClosed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>%craue.form.flow.event_listener.previous_step_invalid.event%</argument>
        <argument type="collection">
          <argument type="service" id="craue.form.flow.event_listener.previous_step_invalid"/>
          <argument>onPreviousStepInvalid</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>%craue.form.flow.event_listener.flow_expired.event%</argument>
        <argument type="collection">
          <argument type="service" id="craue.form.flow.event_listener.flow_expired"/>
          <argument>onFlowExpired</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="easyadmin.listener.controller"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>easy_admin.post_initialize</argument>
        <argument type="collection">
          <argument type="service" id="easyadmin.listener.request_post_initialize"/>
          <argument>initializeRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.body_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.format_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>34</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_security.external_redirect_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>250</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="webpack_encore.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_purchasing.goods_received</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Allocation\Dispatch\DispatchInstructionSubscriber"/>
          <argument>onGoodsReceived</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_allocation.consumer_change</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Allocation\Consumer\StockConsumerListener"/>
          <argument>onStockConsumerChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.creation</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Allocation\Allocation\AllocationTransferListener"/>
          <argument>onStockCreation</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_manufacturing.add_production_tasks</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Catalina\ProductionTaskListener"/>
          <argument>addProductionTasks</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Database\Orm\LockExceptionHandler"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_manufacturing.new_bom</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Geppetto\StandardCostListener"/>
          <argument>setModuleStandardCost</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Madison\Version\VersionChangeNotifier"/>
          <argument>notifyMadison</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.capture_payment</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Magento2\Order\PaymentProcessor"/>
          <argument>createInvoiceAndCapturePayment</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_invoice</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Magento2\Order\ShipmentListener"/>
          <argument>createShipment</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_closed</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Magento2\Order\OrderClosedListener"/>
          <argument>closeOrder</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.level_update</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Magento2\Stock\StockUpdateListener"/>
          <argument>updateStockLevel</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>magento2.suspected_fraud</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Magento2\Order\SuspectedFraudListener"/>
          <argument>notifyOfSuspectedFraud</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_manufacturing.new_bom</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Manufacturing\Bom\Bag\AddBagToBomListener"/>
          <argument>addBagIfNeeded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.transfer_sent</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Manufacturing\Kit\Reminder\EmailScheduler"/>
          <argument>schedulePesterEmailIfNeeded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.transfer_sent</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Manufacturing\WorkOrder\TransferEventListener"/>
          <argument>updateOrders</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.transfer_receipt</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Manufacturing\WorkOrder\TransferEventListener"/>
          <argument>updateOrders</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.missing_item_resolved</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Manufacturing\WorkOrder\TransferEventListener"/>
          <argument>updateOrders</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\Purchasing\Order\Event\PurchaseOrderSent</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Manufacturing\PurchaseOrder\PartsOrderSentListener"/>
          <argument>updateDependentOrders</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Manufacturing\Task\ProductionTaskRefreshListener"/>
          <argument>refreshTasksAndJobs</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Manufacturing\Task\ProductionTaskRefreshListener"/>
          <argument>refreshTasksAndJobs</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\Purchasing\Order\Event\PurchaseOrderRejected</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Purchasing\EmailEventSubscriber"/>
          <argument>onOrderRejected</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_purchasing.goods_received</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Purchasing\EmailEventSubscriber"/>
          <argument>onGoodsReceived</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.capture_payment</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Payment\PaymentProcessor"/>
          <argument>capturePayment</argument>
        </argument>
        <argument>-20</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_closed</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Payment\PaymentProcessor"/>
          <argument>voidUncapturedTransactions</argument>
        </argument>
        <argument>-20</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\PcbNg\Event\PendingReview</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\PcbNg\Service\PcbNgNotificationEmailer"/>
          <argument>onPendingReview</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\PcbNg\Event\OnHold</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\PcbNg\Service\PcbNgNotificationEmailer"/>
          <argument>onHold</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\PcbNg\Event\Cancelled</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\PcbNg\Service\PcbNgNotificationEmailer"/>
          <argument>onCancelled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\PcbNg\Event\QueuedForFabrication</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\PcbNg\Service\PcbNgNotificationEmailer"/>
          <argument>onQueuedForFabrication</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\PcbNg\Event\QueuedForManufacturing</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\PcbNg\Service\PcbNgNotificationEmailer"/>
          <argument>onQueuedForManufacturing</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\PcbNg\Event\InFabrication</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\PcbNg\Service\PcbNgNotificationEmailer"/>
          <argument>onInFabrication</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\PcbNg\Event\InManufacturing</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\PcbNg\Service\PcbNgNotificationEmailer"/>
          <argument>onInManufacturing</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\PcbNg\Event\Shipped</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\PcbNg\Service\PcbNgNotificationEmailer"/>
          <argument>onShipped</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\PcbNg\Event\Refunded</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\PcbNg\Service\PcbNgNotificationEmailer"/>
          <argument>onRefunded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\PcbNg\Event\Error</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\PcbNg\Service\PcbNgNotificationEmailer"/>
          <argument>onError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto.sales.sales_return_disposition</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Purchasing\Order\AutoSendReworkOrderSubscriber"/>
          <argument>onSalesReturnDisposition</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto.form.handle_error</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Purchasing\PurchasingErrorHandler"/>
          <argument>onFormError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_purchasing.goods_received</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Purchasing\Receiving\GoodsReceivedLogger"/>
          <argument>logGrn</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_purchasing.goods_received</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Purchasing\Receiving\Notify\XmppEventSubscriber"/>
          <argument>sendXmppMessageIfNeeded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.allocation</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\Order\Dates\TargetShipDateListener"/>
          <argument>onOrderAllocated</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>rialto.sales.credit</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\Order\Dates\TargetShipDateListener"/>
          <argument>onCustomerCredit</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.allocation</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\Order\Email\OrderEmailListener"/>
          <argument>notifyIfUnableToAllocate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_authorized</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\Order\Email\OrderEmailListener"/>
          <argument>notifyWhenCustomerHasPaid</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.allocation</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\Shipping\ApproveToShipEventListener"/>
          <argument>approveToShipIfReady</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto.sales.credit</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\Order\OrderUpdateListener"/>
          <argument>convertToOrder</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_authorized</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\Order\Allocation\AllocationEventListener"/>
          <argument>allocate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_authorized</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\Order\SoftwareInvoicer"/>
          <argument>handleOrderAuthorized</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto.sales.credit</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\EmailEventListener"/>
          <argument>notifyCustomerOfReceipt</argument>
        </argument>
        <argument>-20</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_invoice</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\EmailEventListener"/>
          <argument>notifyCustomerOfShipment</argument>
        </argument>
        <argument>-20</argument>
      </call>
      <call method="addListener">
        <argument>rialto.sales.sales_return_disposition</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\EmailEventListener"/>
          <argument>notifyAuthorizerOfDisposition</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_invoice</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\DocumentEventListener"/>
          <argument>onOrderInvoice</argument>
        </argument>
        <argument>-5</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.approved_to_ship</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Sales\DocumentEventListener"/>
          <argument>onApprovedToShip</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Security\User\LastLoginUpdater"/>
          <argument>updateLoginDate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Security\Firewall\UsernameNotFoundExceptionHandler"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Security\Nda\NdaFormListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.transfer_sent</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Bin\Label\BinLabelListener"/>
          <argument>printLabels</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.creation</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Bin\Label\BinLabelListener"/>
          <argument>printLabels</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.adjustment</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Bin\Label\BinLabelListener"/>
          <argument>printLabels</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.bin_split</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Bin\Label\BinLabelListener"/>
          <argument>printLabels</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.bin_change</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Bin\StockBinUpdateListener"/>
          <argument>stockBinChangeUpdateStockLevel</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.bin_split</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Shelf\Position\AssignmentListener"/>
          <argument>onBinMove</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.missing_item_resolved</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Shelf\Position\AssignmentListener"/>
          <argument>onBinMove</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.creation</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Shelf\Position\AssignmentListener"/>
          <argument>onBinMove</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.transfer_receipt</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Shelf\Position\AssignmentListener"/>
          <argument>onBinMove</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.adjustment</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Shelf\Position\AssignmentListener"/>
          <argument>onBinMove</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\Stock\Bin\Event\BinQuantityChanged</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\Transfer\BinEventListener"/>
          <argument>onBinQtyChanged</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.transfer_receipt</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\EmailEventListener"/>
          <argument>emailTransferShortage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.bin_split</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Stock\EmailEventListener"/>
          <argument>requestBinSplit</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_supplier.additional_part</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Logger"/>
          <argument>additionalPart</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\Purchasing\Order\Event\PurchaseOrderApproved</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Logger"/>
          <argument>approveOrder</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Rialto\Purchasing\Order\Event\PurchaseOrderRejected</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Logger"/>
          <argument>rejectOrder</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_supplier.supplier_reference</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Logger"/>
          <argument>supplierReference</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_allocation.change</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Logger"/>
          <argument>allocationChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.transfer_sent</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Logger"/>
          <argument>transferSent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.transfer_receipt</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Logger"/>
          <argument>transferReceipt</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_supplier.commitment_date</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Logger"/>
          <argument>commitmentDate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_supplier.audit</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Logger"/>
          <argument>audit</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_manufacturing.work_order_issue</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Logger"/>
          <argument>workOrderIssue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_supplier.additional_part</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Supplier\Order\Email\EmailSubscriber"/>
          <argument>requestAdditionalPart</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_sales.order_invoice</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Ups\Shipping\Label\ShippingLabelListener"/>
          <argument>onOrderInvoice</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rialto_stock.change_notice</argument>
        <argument type="collection">
          <argument type="service" id="Rialto\Wordpress\ChangeNoticeListener"/>
          <argument>onChangeNotice</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="resolve_controller_name_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session.save_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.view_response_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>30</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_security.clickjacking_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false"/>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.service"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_dir"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.controller"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.yaml_collection"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.xml_collection"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="routing.resolver"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <argument type="service" id="service_container"/>
      <argument>/home/stefan/Documents/Applications/rialto/app/config/routing_dev.yaml</argument>
      <argument type="collection">
        <argument key="cache_dir">/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument>/index.php</argument>
      <argument>GET</argument>
      <argument>rialto.mystix.com</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="service_locator.lluwcxp.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/home/stefan/Documents/Applications/rialto</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument type="service" id="templating.engine.twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="2_PhpArrayAdapter~b_anhl6" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="1_ArrayCache~b_anhl6" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id="1_ArrayCache~b_anhl6"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!AbstractController$|Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id="2_PhpArrayAdapter~b_anhl6"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="Rialto\Web\Serializer\DateTimeNormalizer"/>
        <argument type="service" id="Gumstix\RestBundle\Serializer\FormErrorNormalizer"/>
        <argument type="service" id="fos_rest.serializer.form_error_normalizer"/>
        <argument type="service" id="fos_rest.serializer.exception_normalizer.symfony"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-920"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-900"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument>null</argument>
      <argument type="service" id="property_accessor"/>
      <argument>null</argument>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
      <argument type="collection"/>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.chain_loader"/>
      <argument>null</argument>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection"/>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface">
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.mapping.cache.doctrine.apc" class="Doctrine\Common\Cache\ApcCache" public="false">
      <call method="setNamespace">
        <argument></argument>
      </call>
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.2 and will be removed in 4.0. APCu should now be automatically used when available.</deprecated>
    </service>
    <service id="serializer.mapping.cache.apc" class="Doctrine\Common\Cache\ApcCache" public="false">
      <call method="setNamespace">
        <argument></argument>
      </call>
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0. APCu should now be automatically used when available.</deprecated>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter" public="false"/>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="1_ServiceLocator~wgf8gq9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="true">
      <tag name="kernel.reset" method="setToken"/>
    </service>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id="1_ServiceLocator~wgf8gq9"/>
    </service>
    <service id="security.user_value_resolver" class="Symfony\Bundle\SecurityBundle\SecurityUserValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.simple_preauth.shopify_webhook"/>
        <argument type="service" id="security.authentication.provider.simple_preauth.magento2_oauth_callback"/>
        <argument type="service" id="security.authentication.provider.guard.api"/>
        <argument type="service" id="security.authentication.provider.guard.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="Rialto\Security\User\User" type="collection">
          <argument key="algorithm">sha1</argument>
          <argument key="iterations">1</argument>
          <argument key="encode_as_base64">false</argument>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="cost">13</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id="service_locator.dlahgfp"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.shopify_webhook" type="service" id="security.request_matcher.umgy0tl"/>
        <argument key="security.firewall.map.context.magento2_oauth_callback" type="service" id="security.request_matcher.kxgqwfa"/>
        <argument key="security.firewall.map.context.api" type="service" id="security.request_matcher.x1icpav"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.request_matcher.00qf1z7"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Security\Core\User\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.authentication.digest_entry_point" class="Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id="security.request_matcher.33jzefw"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.uqvjqsp"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.twegcbu"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.a95fckv"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.x7mst6n"/>
        <argument type="collection">
          <argument>ROLE_SUPPLIER_SIMPLE</argument>
          <argument>ROLE_EMPLOYEE</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.ycpk1ip"/>
        <argument type="collection">
          <argument>ROLE_API_CLIENT</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.p3gy.sr"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.d9xdm7s"/>
        <argument type="collection">
          <argument>ROLE_API_CLIENT</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.ylzsh_h"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.2jd_drb"/>
        <argument type="collection">
          <argument>ROLE_EMPLOYEE</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="Rialto\Security\Firewall\ByUuidProvider"/>
        <argument type="service" id="Rialto\Security\Firewall\ByUsernameProvider"/>
        <argument type="service" id="Rialto\Magento2\Firewall\StorefrontUserProvider"/>
        <argument type="service" id="Rialto\Shopify\Webhook\ShopifyUserProvider"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.digest" class="Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>null</argument>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection">
        <argument>shopify_webhook</argument>
        <argument>magento2_oauth_callback</argument>
      </argument>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.firewall.map.config.shopify_webhook" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>shopify_webhook</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.umgy0tl</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>Rialto\Shopify\Webhook\ShopifyUserProvider</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>simple_preauth</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="security.request_matcher.umgy0tl" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/shopify/webhook</argument>
    </service>
    <service id="security.authentication.provider.simple_preauth.shopify_webhook" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false">
      <argument type="service" id="Rialto\Shopify\Webhook\WebhookAuthenticator"/>
      <argument type="service" id="Rialto\Shopify\Webhook\ShopifyUserProvider"/>
      <argument>shopify_webhook</argument>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.authentication.listener.simple_preauth.shopify_webhook" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>shopify_webhook</argument>
      <argument type="service" id="Rialto\Shopify\Webhook\WebhookAuthenticator"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy_noop"/>
      </call>
    </service>
    <service id="security.exception_listener.shopify_webhook" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>shopify_webhook</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.shopify_webhook" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.simple_preauth.shopify_webhook"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.shopify_webhook"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.shopify_webhook"/>
    </service>
    <service id="security.firewall.map.config.magento2_oauth_callback" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>magento2_oauth_callback</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.kxgqwfa</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>Rialto\Magento2\Firewall\StorefrontUserProvider</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>simple_preauth</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="security.request_matcher.kxgqwfa" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/magento2/oauth/callback</argument>
    </service>
    <service id="security.authentication.provider.simple_preauth.magento2_oauth_callback" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false">
      <argument type="service" id="Rialto\Magento2\Firewall\MagentoAuthenticator"/>
      <argument type="service" id="Rialto\Magento2\Firewall\StorefrontUserProvider"/>
      <argument>magento2_oauth_callback</argument>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.authentication.listener.simple_preauth.magento2_oauth_callback" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>magento2_oauth_callback</argument>
      <argument type="service" id="Rialto\Magento2\Firewall\MagentoAuthenticator"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy_noop"/>
      </call>
    </service>
    <service id="security.exception_listener.magento2_oauth_callback" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>magento2_oauth_callback</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.magento2_oauth_callback" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.simple_preauth.magento2_oauth_callback"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.magento2_oauth_callback"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.magento2_oauth_callback"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.x1icpav</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>Rialto\Security\Firewall\ByUuidProvider</argument>
      <argument>api</argument>
      <argument>Gumstix\SSOBundle\Security\HeaderAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="security.request_matcher.x1icpav" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="Rialto\Security\Firewall\ByUuidProvider"/>
        <argument type="service" id="Rialto\Security\Firewall\ByUsernameProvider"/>
        <argument type="service" id="Rialto\Magento2\Firewall\StorefrontUserProvider"/>
        <argument type="service" id="Rialto\Shopify\Webhook\ShopifyUserProvider"/>
      </argument>
      <argument>api</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <call method="setLogoutOnUserChange">
        <argument>true</argument>
      </call>
    </service>
    <service id="security.authentication.provider.guard.api" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="Gumstix\SSOBundle\Security\CookieAuthenticator"/>
        <argument type="service" id="Gumstix\SSOBundle\Security\HeaderAuthenticator"/>
      </argument>
      <argument type="service" id="Rialto\Security\Firewall\ByUuidProvider"/>
      <argument>api</argument>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.authentication.listener.guard.api" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="api" provider="Rialto\Security\Firewall\ByUuidProvider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>api</argument>
      <argument type="iterator">
        <argument type="service" id="Gumstix\SSOBundle\Security\CookieAuthenticator"/>
        <argument type="service" id="Gumstix\SSOBundle\Security\HeaderAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="Gumstix\SSOBundle\Security\HeaderAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.guard.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.00qf1z7</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>Rialto\Security\Firewall\ByUuidProvider</argument>
      <argument>main</argument>
      <argument>Gumstix\SSOBundle\Security\LoginAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>switch_user</argument>
        <argument>guard</argument>
      </argument>
      <argument type="collection">
        <argument key="role">ROLE_ADMIN</argument>
        <argument key="parameter">_switch_user</argument>
        <argument key="stateless">false</argument>
      </argument>
    </service>
    <service id="security.request_matcher.00qf1z7" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.context_listener.1" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="Rialto\Security\Firewall\ByUuidProvider"/>
        <argument type="service" id="Rialto\Security\Firewall\ByUsernameProvider"/>
        <argument type="service" id="Rialto\Magento2\Firewall\StorefrontUserProvider"/>
        <argument type="service" id="Rialto\Shopify\Webhook\ShopifyUserProvider"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <call method="setLogoutOnUserChange">
        <argument>true</argument>
      </call>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="Gumstix\SSOBundle\Service\LogoutService"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard.main" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="Gumstix\SSOBundle\Security\CookieAuthenticator"/>
        <argument type="service" id="Gumstix\SSOBundle\Security\LoginAuthenticator"/>
      </argument>
      <argument type="service" id="Rialto\Security\Firewall\ByUuidProvider"/>
      <argument>main</argument>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.authentication.listener.guard.main" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="Rialto\Security\Firewall\ByUuidProvider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>main</argument>
      <argument type="iterator">
        <argument type="service" id="Gumstix\SSOBundle\Security\CookieAuthenticator"/>
        <argument type="service" id="Gumstix\SSOBundle\Security\LoginAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.switchuser_listener.main" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="Rialto\Security\Firewall\ByUuidProvider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>main</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ADMIN</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="Gumstix\SSOBundle\Security\LoginAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.1"/>
        <argument type="service" id="security.authentication.listener.guard.main"/>
        <argument type="service" id="security.authentication.switchuser_listener.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id="service_locator.dlahgfp" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.api" type="service" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.magento2_oauth_callback" type="service" id="security.firewall.map.context.magento2_oauth_callback"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
        <argument key="security.firewall.map.context.shopify_webhook" type="service" id="security.firewall.map.context.shopify_webhook"/>
      </argument>
    </service>
    <service id="security.request_matcher.33jzefw" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/login</argument>
    </service>
    <service id="security.request_matcher.uqvjqsp" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/$</argument>
    </service>
    <service id="security.request_matcher.twegcbu" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/css/compiled/</argument>
    </service>
    <service id="security.request_matcher.a95fckv" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/js/routing$</argument>
    </service>
    <service id="security.request_matcher.x7mst6n" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/supplier</argument>
    </service>
    <service id="security.request_matcher.ycpk1ip" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
    </service>
    <service id="security.request_matcher.p3gy.sr" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/status</argument>
    </service>
    <service id="security.request_matcher.d9xdm7s" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/magento2/oauth/callback</argument>
    </service>
    <service id="security.request_matcher.ylzsh_h" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin-jobs</argument>
    </service>
    <service id="security.request_matcher.2jd_drb" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>Rialto\Security\User\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.chain"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="exception_controller">FOS\RestBundle\Controller\ExceptionController::showAction</argument>
        <argument key="paths" type="collection">
          <argument key="/home/stefan/Documents/Applications/rialto/app/../templates">null</argument>
        </argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>GumstixFormBundle:Form:fields.html.twig</argument>
          <argument>form/fields.html.twig</argument>
          <argument>payment/PaymentMethod/fields.html.twig</argument>
        </argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="default_path">/home/stefan/Documents/Applications/rialto/templates</argument>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Accounting\Web\AccountingExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Allocation\Web\AllocationExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Catalina\Web\CatalinaExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Cms\CmsExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Email\Web\EmailExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Filetype\FiletypeExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Filetype\Pdf\LatexExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Manufacturing\Web\ManufacturingExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Purchasing\Web\PurchasingExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Sales\Web\SalesExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Security\Web\SecurityExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Stock\Web\StockExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Summary\Menu\Web\SummaryExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Supplier\Web\SupplierExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Tax\Web\TaxExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Time\Web\TimeExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Ups\Shipping\Webservice\UpsExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Ups\TrackingRecord\Web\TrackingExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Web\RialtoExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Web\NumberExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Rialto\Web\Form\FormExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.craue_formflow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="easyadmin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_job_queue.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_serializer.twig_extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="gumstix_form.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Gumstix\GeographyBundle\Twig\GeographyExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Gumstix\SSOBundle\Twig\SSOExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="webpack_encore.twig_entry_files_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>dojo_base</argument>
        <argument>//ajax.googleapis.com/ajax/libs/dojo/1.11.2</argument>
      </call>
      <call method="addGlobal">
        <argument>latex_image_path</argument>
        <argument>/home/stefan/Documents/Applications/rialto/app/Resources/latex</argument>
      </call>
      <call method="addGlobal">
        <argument>bugtracker</argument>
        <argument type="collection">
          <argument key="uri">https://mantis.gumstix.com</argument>
          <argument key="default_category">1</argument>
          <argument key="project_id">1</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id="service_locator.c7_qahl.twig.cache_warmer"/>
      <argument type="service" id="templating.finder" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="/home/stefan/Documents/Applications/rialto/app/../templates">null</argument>
        <argument key="/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/home/stefan/Documents/Applications/rialto/app</argument>
      <argument type="collection">
        <argument key="/home/stefan/Documents/Applications/rialto/app/../templates">null</argument>
        <argument key="/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form">null</argument>
      </argument>
      <argument>/home/stefan/Documents/Applications/rialto/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id="service_locator.2m3e4be.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <argument type="collection"/>
      <argument>/home/stefan/Documents/Applications/rialto</argument>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/app/../templates</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/app/Resources/TwigBundle/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/views</argument>
        <argument>CraueFormFlow</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/views</argument>
        <argument>!CraueFormFlow</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/views</argument>
        <argument>EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/views</argument>
        <argument>!EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/jms/job-queue-bundle/JMS/JobQueueBundle/Resources/views</argument>
        <argument>JMSJobQueue</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/jms/job-queue-bundle/JMS/JobQueueBundle/Resources/views</argument>
        <argument>!JMSJobQueue</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/gumstix/form-bundle/src/Resources/views</argument>
        <argument>GumstixForm</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/gumstix/form-bundle/src/Resources/views</argument>
        <argument>!GumstixForm</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/templates</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false">
      <call method="addLoader">
        <argument type="service" id="Rialto\Cms\CmsLoader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="twig.loader.filesystem"/>
      </call>
    </service>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.logging" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/home/stefan/Documents/Applications/rialto/app</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>FOS\RestBundle\Controller\ExceptionController::showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>FOS\RestBundle\Controller\ExceptionController::showAction</argument>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id="service_locator.sng9lji"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.loader.filesystem" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <argument>/home/stefan/Documents/Applications/rialto</argument>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/app/../templates</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/app/Resources/TwigBundle/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/views</argument>
        <argument>CraueFormFlow</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/craue/formflow-bundle/Resources/views</argument>
        <argument>!CraueFormFlow</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/views</argument>
        <argument>EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/easycorp/easyadmin-bundle/src/Resources/views</argument>
        <argument>!EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/jms/job-queue-bundle/JMS/JobQueueBundle/Resources/views</argument>
        <argument>JMSJobQueue</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/jms/job-queue-bundle/JMS/JobQueueBundle/Resources/views</argument>
        <argument>!JMSJobQueue</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/gumstix/form-bundle/src/Resources/views</argument>
        <argument>GumstixForm</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/gumstix/form-bundle/src/Resources/views</argument>
        <argument>!GumstixForm</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/templates</argument>
      </call>
      <call method="addPath">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="templating.engine.twig" class="Symfony\Bundle\TwigBundle\TwigEngine" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/home/stefan/Documents/Applications/rialto</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.sentry" class="Monolog\Handler\ErrorLogHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>0</argument>
      <argument>400</argument>
      <argument>true</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
      <call method="pushProcessor">
        <argument type="collection">
          <argument type="service" id="Rialto\Security\Logging\SentryContextProcessor"/>
          <argument>processRecord</argument>
        </argument>
      </call>
    </service>
    <service id="monolog.handler.production" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/stefan/Documents/Applications/rialto/var/logs/www-data/production.log</argument>
      <argument>200</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
      <call method="pushProcessor">
        <argument type="collection">
          <argument type="service" id="Rialto\Manufacturing\Log\ProductionLogProcessor"/>
          <argument>processRecord</argument>
        </argument>
      </call>
    </service>
    <service id="monolog.handler.automation" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/stefan/Documents/Applications/rialto/var/logs/www-data/automation.log</argument>
      <argument>200</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.email" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/stefan/Documents/Applications/rialto/var/logs/www-data/email.log</argument>
      <argument>200</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.doctrine" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/stefan/Documents/Applications/rialto/var/logs/www-data/doctrine.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.ups" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/stefan/Documents/Applications/rialto/var/logs/www-data/ups.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.php" class="Monolog\Handler\ErrorLogHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>0</argument>
      <argument>250</argument>
      <argument>true</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~0vjilra" class="Swift_Transport_Esmtp_Auth_NTLMAuthenticator" public="false"/>
    <service id="3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~0vjilra" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id="2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~0vjilra" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id="1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~0vjilra" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="Rialto\Email\FakeTransport"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id="1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~0vjilra"/>
        <argument type="service" id="2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~0vjilra"/>
        <argument type="service" id="3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~0vjilra"/>
        <argument type="service" id="4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~0vjilra"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument>/home/stefan/Documents/Applications/rialto/app/../data/swiftmailer/spool</argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.command.debug" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand">
      <tag name="console.command" command="debug:swiftmailer"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="swiftmailer.command.new_email" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand">
      <tag name="console.command" command="swiftmailer:email:send"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="swiftmailer.command.send_email" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand">
      <tag name="console.command" command="swiftmailer:spool:send"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer" public="true">
      <argument type="service" id="Rialto\Email\FakeTransport"/>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="craue.form.flow.storage_default" class="Craue\FormFlowBundle\Storage\SessionStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="craue.form.flow.data_manager_default" class="Craue\FormFlowBundle\Storage\DataManager" public="false">
      <argument type="service" id="craue.form.flow.storage_default"/>
    </service>
    <service id="craue.form.flow" class="Craue\FormFlowBundle\Form\FormFlow">
      <call method="setDataManager">
        <argument type="service" id="craue.form.flow.data_manager_default"/>
      </call>
      <call method="setFormFactory">
        <argument type="service" id="form.factory"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack"/>
      </call>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      </call>
    </service>
    <service id="craue.form.flow.form_extension" class="Craue\FormFlowBundle\Form\Extension\FormFlowFormExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="craue.form.flow.hidden_field_extension" class="Craue\FormFlowBundle\Form\Extension\FormFlowHiddenFieldExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\HiddenType" extended-type="Symfony\Component\Form\Extension\Core\Type\HiddenType"/>
    </service>
    <service id="craue.form.flow.event_listener.previous_step_invalid" class="Craue\FormFlowBundle\EventListener\PreviousStepInvalidEventListener">
      <tag name="kernel.event_listener" event="%craue.form.flow.event_listener.previous_step_invalid.event%" method="onPreviousStepInvalid"/>
      <call method="setTranslator">
        <argument type="service" id="translator.logging"/>
      </call>
    </service>
    <service id="craue.form.flow.event_listener.flow_expired" class="Craue\FormFlowBundle\EventListener\FlowExpiredEventListener">
      <tag name="kernel.event_listener" event="%craue.form.flow.event_listener.flow_expired.event%" method="onFlowExpired"/>
      <call method="setTranslator">
        <argument type="service" id="translator.logging"/>
      </call>
    </service>
    <service id="twig.extension.craue_formflow" class="Craue\FormFlowBundle\Twig\Extension\FormFlowExtension">
      <tag name="twig.extension"/>
      <call method="setFormFlowUtil">
        <argument type="service" id="craue_formflow_util"/>
      </call>
    </service>
    <service id="craue_formflow_util" class="Craue\FormFlowBundle\Util\FormFlowUtil" public="true"/>
    <service id="doctrine_cache.abstract.apc" class="Doctrine\Common\Cache\ApcCache" abstract="true"/>
    <service id="doctrine_cache.abstract.apcu" class="Doctrine\Common\Cache\ApcuCache" abstract="true"/>
    <service id="doctrine_cache.abstract.array" class="Doctrine\Common\Cache\ArrayCache" abstract="true"/>
    <service id="doctrine_cache.abstract.chain" class="Doctrine\Common\Cache\ChainCache" abstract="true"/>
    <service id="doctrine_cache.abstract.couchbase" class="Doctrine\Common\Cache\CouchbaseCache" abstract="true"/>
    <service id="doctrine_cache.abstract.file_system" class="Doctrine\Common\Cache\FilesystemCache" abstract="true"/>
    <service id="doctrine_cache.abstract.php_file" class="Doctrine\Common\Cache\PhpFileCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcache" class="Doctrine\Common\Cache\MemcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcached" class="Doctrine\Common\Cache\MemcachedCache" abstract="true"/>
    <service id="doctrine_cache.abstract.mongodb" class="Doctrine\Common\Cache\MongoDBCache" abstract="true"/>
    <service id="doctrine_cache.abstract.redis" class="Doctrine\Common\Cache\RedisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.predis" class="Doctrine\Common\Cache\PredisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.riak" class="Doctrine\Common\Cache\RiakCache" abstract="true"/>
    <service id="doctrine_cache.abstract.sqlite3" class="Doctrine\Common\Cache\SQLite3Cache" abstract="true"/>
    <service id="doctrine_cache.abstract.void" class="Doctrine\Common\Cache\VoidCache" abstract="true"/>
    <service id="doctrine_cache.abstract.wincache" class="Doctrine\Common\Cache\WinCacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.xcache" class="Doctrine\Common\Cache\XcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.zenddata" class="Doctrine\Common\Cache\ZendDataCache" abstract="true"/>
    <service id="doctrine_cache.contains_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.delete_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.flush_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.stats_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.generate_entities_command" class="Doctrine\Bundle\DoctrineBundle\Command\GenerateEntitiesDoctrineCommand">
      <tag name="console.command" command="doctrine:generate:entities"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:generate:entities</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id="service_container"/>
      <call method="addEventSubscriber">
        <argument type="service" id="Rialto\Stock\Item\EventListener\DefaultWorkTypeListener"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postPersist</argument>
        </argument>
        <argument type="service" id="Rialto\Entity\DomainEventHandler"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postUpdate</argument>
        </argument>
        <argument type="service" id="Rialto\Entity\DomainEventHandler"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postRemove</argument>
        </argument>
        <argument type="service" id="Rialto\Entity\DomainEventHandler"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postFlush</argument>
        </argument>
        <argument type="service" id="Rialto\Entity\DomainEventHandler"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>preUpdate</argument>
        </argument>
        <argument type="service" id="Rialto\Madison\Version\VersionChangeListener"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postUpdate</argument>
        </argument>
        <argument type="service" id="Rialto\Manufacturing\Task\ProductionTaskRefreshListener"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postGenerateSchema</argument>
        </argument>
        <argument>jms_job_queue.entity.many_to_any_listener</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postLoad</argument>
        </argument>
        <argument>jms_job_queue.entity.many_to_any_listener</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postPersist</argument>
        </argument>
        <argument>jms_job_queue.entity.many_to_any_listener</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>preRemove</argument>
        </argument>
        <argument>jms_job_queue.entity.many_to_any_listener</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postGenerateSchema</argument>
        </argument>
        <argument>jms_job_queue.entity.statistics_listener</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">127.0.0.1</argument>
        <argument key="dbname">rialto</argument>
        <argument key="user">rialto</argument>
        <argument key="password">rialto</argument>
        <argument key="charset">utf8mb4</argument>
        <argument key="port">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="serverVersion">5.6</argument>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="1_ServiceLocator~0pr2l.r" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id="service_locator.sr6ctxe"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="Rialto">Rialto</argument>
          <argument key="JMSJobQueueBundle">JMS\JobQueueBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.default"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
      <call method="addCustomStringFunction">
        <argument>IFNULL</argument>
        <argument>DoctrineExtensions\Query\Mysql\IfNull</argument>
      </call>
      <call method="addCustomStringFunction">
        <argument>IF</argument>
        <argument>DoctrineExtensions\Query\Mysql\IfElse</argument>
      </call>
      <call method="addCustomStringFunction">
        <argument>GROUP_CONCAT</argument>
        <argument>DoctrineExtensions\Query\Mysql\GroupConcat</argument>
      </call>
      <call method="addCustomStringFunction">
        <argument>REPLACE</argument>
        <argument>DoctrineExtensions\Query\Mysql\Replace</argument>
      </call>
      <call method="addCustomDatetimeFunction">
        <argument>DATE</argument>
        <argument>DoctrineExtensions\Query\Mysql\Date</argument>
      </call>
      <call method="addCustomDatetimeFunction">
        <argument>TIMESTAMPDIFF</argument>
        <argument>DoctrineExtensions\Query\Mysql\TimestampDiff</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_xml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
      <argument type="collection">
        <argument key="/home/stefan/Documents/Applications/rialto/app/config/doctrine">Rialto</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/home/stefan/Documents/Applications/rialto/vendor/jms/job-queue-bundle/JMS/JobQueueBundle/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Rialto</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>JMS\JobQueueBundle\Entity</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_f22bd84df7c3c7473b62847c8267cc57a811b05861142659adba14036bbc7d6f</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_f22bd84df7c3c7473b62847c8267cc57a811b05861142659adba14036bbc7d6f</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_f22bd84df7c3c7473b62847c8267cc57a811b05861142659adba14036bbc7d6f</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager.metadata_factory"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.metadata_factory" class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser" public="true">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_class" class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_dir" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="Rialto\Web\LockingParamConverter"/>
        <argument>10</argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.datetime"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sensio_framework_extra.converter.datetime" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="easyadmin.cache.manager" class="EasyCorp\Bundle\EasyAdminBundle\Cache\CacheManager" public="true">
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/easy_admin</argument>
    </service>
    <service id="easyadmin.config.manager" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\ConfigManager" public="true">
      <argument type="service" id="easyadmin.cache.manager"/>
      <argument type="service" id="property_accessor"/>
      <argument>%easyadmin.config%</argument>
      <argument>true</argument>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.normalizer_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.design_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.menu_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.action_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.metadata_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.property_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.view_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.template_config_pass"/>
      </call>
      <call method="addConfigPass">
        <argument type="service" id="easyadmin.configuration.default_config_pass"/>
      </call>
    </service>
    <service id="easyadmin.query_builder" class="EasyCorp\Bundle\EasyAdminBundle\Search\QueryBuilder" public="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="easyadmin.finder" class="EasyCorp\Bundle\EasyAdminBundle\Search\Finder" public="false">
      <argument type="service" id="easyadmin.query_builder"/>
      <argument type="service" id="easyadmin.paginator"/>
    </service>
    <service id="easyadmin.autocomplete" class="EasyCorp\Bundle\EasyAdminBundle\Search\Autocomplete" public="true">
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="easyadmin.finder"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="easyadmin.paginator" class="EasyCorp\Bundle\EasyAdminBundle\Search\Paginator" public="true"/>
    <service id="easyadmin.router" class="EasyCorp\Bundle\EasyAdminBundle\Router\EasyAdminRouter" public="true">
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="easyadmin.twig.extension" class="EasyCorp\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="easyadmin.router"/>
      <argument>true</argument>
      <argument type="service" id="security.logout_url_generator" on-invalid="null"/>
    </service>
    <service id="easyadmin.listener.controller" class="EasyCorp\Bundle\EasyAdminBundle\EventListener\ControllerListener" public="true">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="debug.controller_resolver"/>
    </service>
    <service id="easyadmin.listener.request_post_initialize" class="EasyCorp\Bundle\EasyAdminBundle\EventListener\RequestPostInitializeListener" public="true">
      <tag name="kernel.event_listener" event="easy_admin.post_initialize" method="initializeRequest"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="easyadmin.data_collector" class="EasyCorp\Bundle\EasyAdminBundle\DataCollector\EasyAdminDataCollector" public="false">
      <tag name="data_collector" template="@EasyAdmin/data_collector/easyadmin.html.twig" id="easyadmin"/>
      <argument type="service" id="easyadmin.config.manager"/>
    </service>
    <service id="easyadmin.configuration.normalizer_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\NormalizerConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="90"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="easyadmin.configuration.design_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\DesignConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="80"/>
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument>en</argument>
    </service>
    <service id="easyadmin.configuration.menu_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\MenuConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="70"/>
    </service>
    <service id="easyadmin.configuration.action_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\ActionConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="60"/>
    </service>
    <service id="easyadmin.configuration.metadata_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\MetadataConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="50"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="easyadmin.configuration.property_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\PropertyConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="40"/>
      <argument type="service" id="form.registry"/>
    </service>
    <service id="easyadmin.configuration.view_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\ViewConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="30"/>
    </service>
    <service id="easyadmin.configuration.template_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\TemplateConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="20"/>
      <argument type="service" id="twig.loader.filesystem"/>
    </service>
    <service id="easyadmin.configuration.default_config_pass" class="EasyCorp\Bundle\EasyAdminBundle\Configuration\DefaultConfigPass" public="false">
      <tag name="easyadmin.config_pass" priority="10"/>
    </service>
    <service id="easyadmin.form.type" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminFormType">
      <tag name="form.type"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="collection">
        <argument key="5" type="service" id="easyadmin.form.type.configurator.autocomplete"/>
        <argument key="4" type="service" id="easyadmin.form.type.configurator.collection"/>
        <argument key="3" type="service" id="easyadmin.form.type.configurator.checkbox"/>
        <argument key="2" type="service" id="easyadmin.form.type.configurator.type"/>
        <argument key="1" type="service" id="easyadmin.form.type.configurator.entity"/>
        <argument key="0" type="service" id="easyadmin.form.type.configurator.fos_ckeditor"/>
      </argument>
    </service>
    <service id="easyadmin.form.type.autocomplete" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminAutocompleteType">
      <tag name="form.type" alias="easyadmin_autocomplete"/>
      <argument type="service" id="easyadmin.config.manager"/>
    </service>
    <service id="easyadmin.form.type.divider" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminDividerType">
      <tag name="form.type" alias="easyadmin_divider"/>
    </service>
    <service id="easyadmin.form.type.section" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminSectionType">
      <tag name="form.type" alias="easyadmin_section"/>
    </service>
    <service id="easyadmin.form.type.group" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminGroupType">
      <tag name="form.type" alias="easyadmin_group"/>
    </service>
    <service id="easyadmin.form.type.extension" class="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EasyAdminExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="easyadmin.form.type_guesser_chain" class="Symfony\Component\Form\FormTypeGuesserChain" public="false">
      <argument type="collection">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
        <argument type="service" id="easyadmin.form.guesser.missing_doctrine_orm_type_guesser"/>
      </argument>
    </service>
    <service id="easyadmin.form.type.configurator.autocomplete" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\AutocompleteTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="30"/>
    </service>
    <service id="easyadmin.form.type.configurator.collection" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\CollectionTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="20"/>
    </service>
    <service id="easyadmin.form.type.configurator.checkbox" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\CheckboxTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="10"/>
    </service>
    <service id="easyadmin.form.type.configurator.type" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\TypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="0"/>
      <argument type="service" id="easyadmin.config.manager"/>
    </service>
    <service id="easyadmin.form.type.configurator.entity" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\EntityTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="-20"/>
    </service>
    <service id="easyadmin.form.type.configurator.fos_ckeditor" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\Configurator\FOSCKEditorTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="-130"/>
    </service>
    <service id="easyadmin.form.guesser.missing_doctrine_orm_type_guesser" class="EasyCorp\Bundle\EasyAdminBundle\Form\Guesser\MissingDoctrineOrmTypeGuesser" public="true">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_job_queue.retry_scheduler" class="JMS\JobQueueBundle\Retry\ExponentialRetryScheduler"/>
    <service id="jms_job_queue.entity.many_to_any_listener" class="JMS\JobQueueBundle\Entity\Listener\ManyToAnyListener" public="true">
      <tag name="doctrine.event_listener" lazy="1" event="postGenerateSchema"/>
      <tag name="doctrine.event_listener" lazy="1" event="postLoad"/>
      <tag name="doctrine.event_listener" lazy="1" event="postPersist"/>
      <tag name="doctrine.event_listener" lazy="1" event="preRemove"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_job_queue.twig.extension" class="JMS\JobQueueBundle\Twig\JobQueueExtension">
      <tag name="twig.extension"/>
      <argument type="collection"/>
    </service>
    <service id="jms_job_queue.job_manager" class="JMS\JobQueueBundle\Entity\Repository\JobManager" public="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="jms_job_queue.retry_scheduler"/>
    </service>
    <service id="jms_job_queue.command.clean_up" class="JMS\JobQueueBundle\Command\CleanUpCommand" public="false">
      <tag name="console.command"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_job_queue.job_manager"/>
      <call method="setName">
        <argument>jms-job-queue:clean-up</argument>
      </call>
    </service>
    <service id="jms_job_queue.command.mark_job_incomplete" class="JMS\JobQueueBundle\Command\MarkJobIncompleteCommand" public="false">
      <tag name="console.command"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_job_queue.job_manager"/>
      <call method="setName">
        <argument>jms-job-queue:mark-incomplete</argument>
      </call>
    </service>
    <service id="jms_job_queue.command.run" class="JMS\JobQueueBundle\Command\RunCommand" public="false">
      <tag name="console.command"/>
      <call method="setName">
        <argument>jms-job-queue:run</argument>
      </call>
    </service>
    <service id="jms_job_queue.command.schedule" class="JMS\JobQueueBundle\Command\ScheduleCommand" public="false">
      <tag name="console.command"/>
      <argument type="service" id="doctrine"/>
      <argument type="tagged" tag="jms_job_queue.scheduler"/>
      <argument type="tagged" tag="jms_job_queue.cron_command"/>
      <call method="setName">
        <argument>jms-job-queue:schedule</argument>
      </call>
    </service>
    <service id="jms_job_queue.entity.statistics_listener" class="JMS\JobQueueBundle\Entity\Listener\StatisticsListener" public="true">
      <tag name="doctrine.event_listener" lazy="1" event="postGenerateSchema"/>
    </service>
    <service id="jms_serializer.event_dispatcher" class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
      <argument type="service" id="service_locator.orfjtul"/>
      <call method="setListeners">
        <argument type="collection">
          <argument key="serializer.pre_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerializeTypedProxy</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
          <argument key="serializer.post_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber" public="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber" public="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="service_locator.w_ccqsm"/>
      <argument type="collection">
        <argument key="2" type="collection">
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromyml</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
        </argument>
        <argument key="1" type="collection">
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
          <argument key="Exception" type="collection">
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeToJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeToXml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sP</argument>
      <argument>UTC</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler" public="true">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.metadata.file_locator" class="Metadata\Driver\FileLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="jms_serializer.metadata.yaml_driver" class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.xml_driver" class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.php_driver" class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.annotation_driver" class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="jms_serializer.metadata.chain_driver" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="jms_serializer.metadata.yaml_driver"/>
        <argument type="service" id="jms_serializer.metadata.xml_driver"/>
        <argument type="service" id="jms_serializer.metadata.php_driver"/>
        <argument type="service" id="jms_serializer.metadata.annotation_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_phpcr_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine_phpcr"/>
    </service>
    <service id="jms_serializer.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver" public="false">
      <argument type="service" id="service_container"/>
      <argument>jms_serializer.metadata_driver</argument>
    </service>
    <service id="jms_serializer.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument></argument>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="jms_serializer.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.version_exclusion_strategy" class="JMS\Serializer\Exclusion\VersionExclusionStrategy" public="false" abstract="true"/>
    <service id="jms_serializer.camel_case_naming_strategy" class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
      <argument>_</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.identical_property_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy" public="false"/>
    <service id="jms_serializer.serialized_name_annotation_strategy" class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
      <argument type="service" id="jms_serializer.camel_case_naming_strategy"/>
    </service>
    <service id="jms_serializer.cache_naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy" public="false"/>
    <service id="jms_serializer.doctrine_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="string">null</argument>
    </service>
    <service id="jms_serializer.doctrine_phpcr_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.serializer" class="JMS\Serializer\Serializer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="json">jms_serializer.json_serialization_visitor</argument>
            <argument key="xml">jms_serializer.xml_serialization_visitor</argument>
            <argument key="yml">jms_serializer.yaml_serialization_visitor</argument>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="json">jms_serializer.json_deserialization_visitor</argument>
            <argument key="xml">jms_serializer.xml_deserialization_visitor</argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <call method="setSerializationContextFactory">
        <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      </call>
      <call method="setDeserializationContextFactory">
        <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
      </call>
    </service>
    <service id="jms_serializer.expression_evaluator" class="JMS\Serializer\Expression\ExpressionEvaluator">
      <argument type="service" id="jms_serializer.expression_language"/>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
      </argument>
    </service>
    <service id="jms_serializer.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false">
      <call method="registerProvider">
        <argument type="service" id="jms_serializer.expression_language.function_provider"/>
      </call>
    </service>
    <service id="jms_serializer.expression_language.function_provider" class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider" public="false"/>
    <service id="jms_serializer.twig_extension.serializer" class="JMS\Serializer\Twig\SerializerRuntimeExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer_runtime_helper" class="JMS\Serializer\Twig\SerializerRuntimeHelper" public="true">
      <tag name="twig.runtime"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.accessor_strategy.default" class="JMS\Serializer\Accessor\DefaultAccessorStrategy" public="false"/>
    <service id="jms_serializer.accessor_strategy.expression" class="JMS\Serializer\Accessor\ExpressionAccessorStrategy" public="false">
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\JsonSerializationVisitor" public="true">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor" public="true">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor" public="true">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
      <call method="setFormatOutput">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor" public="true">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor" public="true">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
    </service>
    <service id="jms_serializer.configured_serialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="jms_serializer.configured_deserialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="fos_rest.view_handler.default" class="FOS\RestBundle\View\ViewHandler" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_rest.serializer.symfony"/>
      <argument type="service" id="templating.engine.twig" on-invalid="null"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <argument type="collection">
        <argument key="serializeNullStrategy">true</argument>
      </argument>
    </service>
    <service id="fos_rest.view_handler.jsonp" class="FOS\RestBundle\View\JsonpHandler" public="false">
      <argument></argument>
    </service>
    <service id="fos_rest.routing.loader.directory" class="FOS\RestBundle\Routing\Loader\DirectoryRouteLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
    </service>
    <service id="fos_rest.routing.loader.controller" class="FOS\RestBundle\Routing\Loader\RestRouteLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="fos_rest.routing.loader.reader.controller"/>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.processor" class="FOS\RestBundle\Routing\Loader\RestRouteProcessor" public="false"/>
    <service id="fos_rest.routing.loader.yaml_collection" class="FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.xml_collection" class="FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.reader.controller" class="FOS\RestBundle\Routing\Loader\Reader\RestControllerReader" public="false">
      <argument type="service" id="fos_rest.routing.loader.reader.action"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="fos_rest.routing.loader.reader.action" class="FOS\RestBundle\Routing\Loader\Reader\RestActionReader" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="fos_rest.inflector.doctrine"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="fos_rest.inflector.doctrine" class="FOS\RestBundle\Inflector\DoctrineInflector" public="false"/>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="service_container"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="fos_rest.serializer.jms" class="FOS\RestBundle\Serializer\JMSSerializerAdapter" public="false" lazy="true">
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
    </service>
    <service id="fos_rest.serializer.symfony" class="FOS\RestBundle\Serializer\SymfonySerializerAdapter" public="false" lazy="true">
      <argument type="service" id="serializer"/>
    </service>
    <service id="fos_rest.serializer.form_error_normalizer" class="FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-10"/>
    </service>
    <service id="fos_rest.exception_listener" class="FOS\RestBundle\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>fos_rest.exception.twig_controller:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="fos_rest.exception.controller" class="FOS\RestBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="Rialto\Web\Serializer\ViewHandler"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.exception.twig_controller" class="FOS\RestBundle\Controller\TwigExceptionController" public="true">
      <argument type="service" id="Rialto\Web\Serializer\ViewHandler"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument>true</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="fos_rest.exception.codes_map" class="FOS\RestBundle\Util\ExceptionValueMap" public="false">
      <argument type="collection"/>
    </service>
    <service id="fos_rest.exception.messages_map" class="FOS\RestBundle\Util\ExceptionValueMap" public="false">
      <argument type="collection"/>
    </service>
    <service id="fos_rest.serializer.exception_normalizer.jms" class="FOS\RestBundle\Serializer\Normalizer\ExceptionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="fos_rest.exception.messages_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.serializer.exception_normalizer.symfony" class="FOS\RestBundle\Serializer\Normalizer\ExceptionNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-10"/>
      <argument type="service" id="fos_rest.exception.messages_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.view_response_listener" class="FOS\RestBundle\EventListener\ViewResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Rialto\Web\Serializer\ViewHandler"/>
      <argument>false</argument>
    </service>
    <service id="fos_rest.normalizer.camel_keys" class="FOS\RestBundle\Normalizer\CamelKeysNormalizer"/>
    <service id="fos_rest.normalizer.camel_keys_with_leading_underscore" class="FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore"/>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="service" id="service_locator.infznkp"/>
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
      </argument>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="10"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
      <argument>false</argument>
      <call method="setDefaultFormat">
        <argument>null</argument>
      </call>
    </service>
    <service id="service_locator.infznkp" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fos_rest.decoder.json" type="service" id="fos_rest.decoder.json"/>
      </argument>
    </service>
    <service id="fos_rest.format_listener" class="FOS\RestBundle\EventListener\FormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="34"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="fos_rest.format_negotiator"/>
    </service>
    <service id="fos_rest.format_negotiator" class="FOS\RestBundle\Negotiation\FormatNegotiator">
      <argument type="service" id="request_stack"/>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.6d27357678da78ac461e8b851ac5bf83a1f9471f9d410dff7d760712cb7770b80848bf9c"/>
        <argument type="collection">
          <argument key="methods">null</argument>
          <argument key="priorities" type="collection">
            <argument>html</argument>
            <argument>json</argument>
          </argument>
          <argument key="fallback_format">html</argument>
          <argument key="attributes" type="collection"/>
          <argument key="prefer_extension">2.0</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>json</argument>
            <argument>html</argument>
          </argument>
          <argument key="fallback_format">json</argument>
          <argument key="prefer_extension">2.0</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.140c098b541b37783581831795a9a5c20b93afc0ee596c2c8da2824c419dcec21a49976d"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>css</argument>
          </argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
          <argument key="prefer_extension">2.0</argument>
          <argument key="fallback_format">html</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.76989018a361dc0615ef8730276e7d9c95c53ff73090b6704f9522972add0565a29bdaa8"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>js</argument>
          </argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
          <argument key="prefer_extension">2.0</argument>
          <argument key="fallback_format">html</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>html</argument>
            <argument>json</argument>
          </argument>
          <argument key="fallback_format">html</argument>
          <argument key="prefer_extension">2.0</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
        </argument>
      </call>
    </service>
    <service id="fos_rest.format_request_matcher" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false" abstract="true"/>
    <service id="fos_js_routing.extractor" class="FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor" public="true">
      <argument type="service" id="router.default"/>
      <argument type="collection"/>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev</argument>
      <argument>%kernel.bundles%</argument>
    </service>
    <service id="fos_js_routing.dump_command" class="FOS\JsRoutingBundle\Command\DumpCommand">
      <tag name="console.command"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument type="service" id="fos_js_routing.serializer"/>
      <argument>/home/stefan/Documents/Applications/rialto/app</argument>
      <argument>null</argument>
      <call method="setName">
        <argument>fos:js-routing:dump</argument>
      </call>
    </service>
    <service id="fos_js_routing.router_debug_exposed_command" class="FOS\JsRoutingBundle\Command\RouterDebugExposedCommand">
      <tag name="console.command"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>fos:js-routing:debug</argument>
      </call>
    </service>
    <service id="fos_js_routing.controller" class="FOS\JsRoutingBundle\Controller\Controller" public="true">
      <argument type="service" id="fos_js_routing.serializer"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument>%fos_js_routing.cache_control%</argument>
      <argument>true</argument>
    </service>
    <service id="fos_js_routing.serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="fos_js_routing.normalizer.route_collection"/>
        <argument type="service" id="fos_js_routing.normalizer.routes_response"/>
        <argument type="service" id="fos_js_routing.denormalizer.route_collection"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="fos_js_routing.encoder"/>
      </argument>
    </service>
    <service id="fos_js_routing.normalizer.route_collection" class="FOS\JsRoutingBundle\Serializer\Normalizer\RouteCollectionNormalizer" public="false"/>
    <service id="fos_js_routing.normalizer.routes_response" class="FOS\JsRoutingBundle\Serializer\Normalizer\RoutesResponseNormalizer" public="false"/>
    <service id="fos_js_routing.denormalizer.route_collection" class="FOS\JsRoutingBundle\Serializer\Denormalizer\RouteCollectionDenormalizer" public="false"/>
    <service id="fos_js_routing.encoder" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false"/>
    <service id="nelmio_security.clickjacking_listener" class="Nelmio\SecurityBundle\EventListener\ClickjackingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>%nelmio_security.clickjacking.paths%</argument>
      <argument type="collection"/>
    </service>
    <service id="nelmio_security.external_redirect_listener" class="Nelmio\SecurityBundle\EventListener\ExternalRedirectListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="monolog.logger" channel="security"/>
      <tag name="container.hot_path"/>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="nelmio_security.external_redirect.target_validator.whitelist" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="nelmio_security.external_redirect.target_validator.whitelist" class="Nelmio\SecurityBundle\ExternalRedirect\WhitelistBasedTargetValidator" public="false">
      <argument>(?:.*\.mystix\.com|.*\.dev\-storefront\.pcbng\.com|mystix\.com|dev\-storefront\.pcbng\.com)</argument>
    </service>
    <service id="nelmio_cors.cors_listener" class="Nelmio\CorsBundle\EventListener\CorsListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="nelmio_cors.options_resolver"/>
    </service>
    <service id="nelmio_cors.options_resolver" class="Nelmio\CorsBundle\Options\Resolver" public="false">
      <argument type="collection">
        <argument type="service" id="nelmio_cors.options_provider.config"/>
      </argument>
    </service>
    <service id="nelmio_cors.options_provider.config" class="Nelmio\CorsBundle\Options\ConfigProvider">
      <tag name="nelmio_cors.options_provider" priority="-1"/>
      <argument>%nelmio_cors.map%</argument>
      <argument>%nelmio_cors.defaults%</argument>
    </service>
    <service id="tactician.middleware.locking" class="League\Tactician\Plugins\LockingMiddleware"/>
    <service id="tactician.handler.method_name_inflector.handle" class="League\Tactician\Handler\MethodNameInflector\HandleInflector"/>
    <service id="tactician.handler.method_name_inflector.class_name" class="League\Tactician\Handler\MethodNameInflector\ClassNameInflector"/>
    <service id="tactician.handler.method_name_inflector.handle_class_name" class="League\Tactician\Handler\MethodNameInflector\HandleClassNameInflector"/>
    <service id="tactician.handler.method_name_inflector.handle_class_name_without_suffix" class="League\Tactician\Handler\MethodNameInflector\HandleClassNameWithoutSuffixInflector"/>
    <service id="tactician.handler.method_name_inflector.invoke" class="League\Tactician\Handler\MethodNameInflector\InvokeInflector"/>
    <service id="tactician.handler.command_name_extractor.class_name" class="League\Tactician\Handler\CommandNameExtractor\ClassNameExtractor"/>
    <service id="tactician.plugins.named_command.extractor" class="League\Tactician\Plugins\NamedCommand\NamedCommandExtractor"/>
    <service id="tactician.command.debug" class="League\Tactician\Bundle\Command\DebugCommand">
      <tag name="console.command"/>
      <argument type="collection">
        <argument key="default" type="collection">
          <argument key="Rialto\Manufacturing\PurchaseOrder\Command\OrderPartsCommand">Rialto\Manufacturing\PurchaseOrder\Command\OrderPartsHandler</argument>
          <argument key="Rialto\Manufacturing\Allocation\Command\AllocateCommand">Rialto\Manufacturing\Allocation\Command\AllocateHandler</argument>
          <argument key="Rialto\Manufacturing\PurchaseOrder\Command\UserSelectManufacturerToOrderCommand">Rialto\Manufacturing\PurchaseOrder\Command\UserSelectManufacturerToOrderHandler</argument>
          <argument key="Rialto\PcbNg\Command\CreateManufacturedStockItemPcbNgPurchasingDataCommand">Rialto\PcbNg\Command\CreateManufacturedStockItemPcbNgPurchasingDataHandler</argument>
          <argument key="Rialto\PcbNg\Command\ProcessPcbNgEmailsCommand">Rialto\PcbNg\Command\ProcessPcbNgEmailsHandler</argument>
          <argument key="Rialto\Purchasing\Catalog\Command\RefreshPurchasingDataStockLevelCommand">Rialto\Purchasing\Catalog\Command\RefreshPurchasingDataStockLevelHandler</argument>
          <argument key="Rialto\Purchasing\Order\Command\MergePurchaseOrdersCommand">Rialto\Purchasing\Order\Command\MergePurchaseOrdersHandler</argument>
          <argument key="Rialto\Sales\Order\Allocation\Command\CreateStockItemOrderCommand">Rialto\Sales\Order\Allocation\Command\CreateStockItemOrderHandler</argument>
          <argument key="Rialto\Stock\Item\Command\RefreshStockLevelCommand">Rialto\Stock\Item\Command\RefreshStockLevelHandler</argument>
          <argument key="Rialto\Ups\TrackingRecord\Command\UpdateTrackingRecordCommand">Rialto\Ups\TrackingRecord\Command\UpdateTrackingRecordHandler</argument>
        </argument>
      </argument>
    </service>
    <service id="tactician.logger.class_properties_formatter" class="League\Tactician\Logger\Formatter\ClassPropertiesFormatter" public="false"/>
    <service id="tactician.logger.class_name_formatter" class="League\Tactician\Logger\Formatter\ClassNameFormatter" public="false"/>
    <service id="tactician.middleware.logger" class="League\Tactician\Logger\LoggerMiddleware" public="false">
      <tag name="monolog.logger" channel="command_bus"/>
      <argument type="service" id="tactician.logger.class_properties_formatter"/>
      <argument type="service" id="monolog.logger.command_bus"/>
    </service>
    <service id="gumstix_form.twig_extension" class="Gumstix\FormBundle\Twig\FormExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="Gumstix\GeographyBundle\Twig\GeographyExtension" class="Gumstix\GeographyBundle\Twig\GeographyExtension" autowire="true">
      <tag name="twig.extension"/>
      <argument type="service" id="autowired.Gumstix\GeographyBundle\Service\AddressFormatter"/>
    </service>
    <service id="Gumstix\RestBundle\Handler\AccessDeniedHandler" class="Gumstix\RestBundle\Handler\AccessDeniedHandler">
      <argument type="service" id="twig.controller.exception"/>
    </service>
    <service id="Gumstix\RestBundle\Serializer\FormErrorNormalizer" class="Gumstix\RestBundle\Serializer\FormErrorNormalizer">
      <tag name="serializer.normalizer"/>
    </service>
    <service id="Gumstix\RestBundle\Handler\ViewHandler" class="Gumstix\RestBundle\Handler\ViewHandler" public="false">
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_rest.serializer.symfony"/>
      <argument type="service" id="templating.engine.twig" on-invalid="null"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <argument type="collection">
        <argument key="serializeNullStrategy">true</argument>
      </argument>
    </service>
    <service id="Gumstix\SSOBundle\Service\DoctrineCredentialStorage" class="Gumstix\SSOBundle\Service\DoctrineCredentialStorage" public="false">
      <argument type="service" id="doctrine.dbal.default_connection"/>
    </service>
    <service id="Gumstix\SSO\Service\FileCredentialStorage" class="Gumstix\SSO\Service\FileCredentialStorage" public="false">
      <argument>/home/stefan/Documents/Applications/rialto/app/../var/data/gumstix_sso/credential.data</argument>
    </service>
    <service id="Gumstix\SSOBundle\Service\SingleSignOnFactory" class="Gumstix\SSOBundle\Service\SingleSignOnFactory">
      <argument type="service" id="Gumstix\SSO\Service\FileCredentialStorage"/>
      <argument>http://accounts.mystix.com/</argument>
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="Gumstix\SSO\Service\SingleSignOn" class="Gumstix\SSO\Service\SingleSignOn" public="true">
      <argument>http://accounts.mystix.com/</argument>
      <argument type="service" id="Gumstix\SSO\Service\FileCredentialStorage"/>
    </service>
    <service id="Gumstix\SSOBundle\Security\CookieAuthenticator" class="Gumstix\SSOBundle\Security\CookieAuthenticator">
      <argument>gumstix-sso</argument>
      <argument type="service" id="Gumstix\SSO\Service\SingleSignOn"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="gumstix_sso.router"/>
    </service>
    <service id="Gumstix\SSOBundle\Security\HeaderAuthenticator" class="Gumstix\SSOBundle\Security\HeaderAuthenticator">
      <argument type="service" id="Gumstix\SSO\Service\SingleSignOn"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="Gumstix\SSOBundle\Security\LoginAuthenticator" class="Gumstix\SSOBundle\Security\LoginAuthenticator">
      <argument type="service" id="gumstix_sso.router"/>
    </service>
    <service id="Gumstix\SSO\Service\Router" class="Gumstix\SSO\Service\Router">
      <argument>http://accounts.mystix.com/</argument>
    </service>
    <service id="Gumstix\SSOBundle\Service\LogoutService" class="Gumstix\SSOBundle\Service\LogoutService">
      <argument>http://accounts.mystix.com/</argument>
    </service>
    <service id="Gumstix\SSOBundle\Twig\SSOExtension" class="Gumstix\SSOBundle\Twig\SSOExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="gumstix_sso.router"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Gumstix\SSOBundle\Service\HttpClientFactory" class="Gumstix\SSOBundle\Service\HttpClientFactory">
      <argument type="service" id="Gumstix\SSO\Service\FileCredentialStorage"/>
    </service>
    <service id="Gumstix\SSOBundle\Command\SetupCommand" class="Gumstix\SSOBundle\Command\SetupCommand" public="false">
      <tag name="console.command"/>
      <argument type="service" id="Gumstix\SSO\Service\FileCredentialStorage"/>
      <argument type="service" id="Gumstix\SSO\Service\SingleSignOn"/>
      <argument>http://accounts.mystix.com/</argument>
      <argument>gumstix</argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="gumstix_sso.router" class="Gumstix\SSOBundle\Service\SSORouter">
      <argument>http://accounts.mystix.com/</argument>
    </service>
    <service id="1_ServiceLocator~rwjfjl2" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="webpack_encore.entrypoint_lookup_collection" type="service" id="webpack_encore.entrypoint_lookup_collection"/>
        <argument key="webpack_encore.tag_renderer" type="service" id="webpack_encore.tag_renderer"/>
      </argument>
    </service>
    <service id="webpack_encore.entrypoint_lookup_collection" class="Symfony\WebpackEncoreBundle\Asset\EntrypointLookupCollection" public="false">
      <argument type="service" id="service_locator.e9d52eb"/>
      <argument>_default</argument>
    </service>
    <service id="webpack_encore.tag_renderer" class="Symfony\WebpackEncoreBundle\Asset\TagRenderer" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="webpack_encore.entrypoint_lookup_collection"/>
      <argument type="service" id="assets.packages"/>
      <argument type="collection"/>
    </service>
    <service id="webpack_encore.twig_entry_files_extension" class="Symfony\WebpackEncoreBundle\Twig\EntryFilesTwigExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="1_ServiceLocator~rwjfjl2"/>
    </service>
    <service id="webpack_encore.entrypoint_lookup.cache_warmer" class="Symfony\WebpackEncoreBundle\CacheWarmer\EntrypointCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument key="_default">/home/stefan/Documents/Applications/rialto/web/build/entrypoints.json</argument>
      </argument>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/webpack_encore.cache.php</argument>
      <argument type="service" id="cache.webpack_encore"/>
    </service>
    <service id="webpack_encore.cache" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/webpack_encore.cache.php</argument>
      <argument type="service" id="cache.webpack_encore"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="cache.webpack_encore" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>hOlgBHjotV</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/stefan/Documents/Applications/rialto/var/cache/www-data/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="webpack_encore.exception_listener" class="Symfony\WebpackEncoreBundle\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_listener" event="kernel.exception"/>
      <argument type="service" id="webpack_encore.entrypoint_lookup_collection"/>
      <argument type="collection">
        <argument>_default</argument>
      </argument>
    </service>
    <service id="webpack_encore.entrypoint_lookup[_default]" class="Symfony\WebpackEncoreBundle\Asset\EntrypointLookup">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/stefan/Documents/Applications/rialto/web/build/entrypoints.json</argument>
      <argument>null</argument>
      <argument>_default</argument>
      <argument>true</argument>
    </service>
    <service id="service_locator.e9d52eb" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="_default" type="service" id="webpack_encore.entrypoint_lookup[_default]"/>
      </argument>
    </service>
    <service id="2_HtmlDumper~ehw9ut3" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id="1_NonceGenerator~ehw9ut3" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="twig"/>
      <argument type="collection"/>
      <argument>bottom</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/home/stefan/Documents/Applications/rialto</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument>null</argument>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController" public="true">
      <argument>null</argument>
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id="1_NonceGenerator~ehw9ut3"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="2_HtmlDumper~ehw9ut3"/>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string" public="false">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Accounting\Web\AccountingExtension" class="Rialto\Accounting\Web\AccountingExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Accounting\Web\AccountingExtension" class="Rialto\Accounting\Web\AccountingExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Accounting\Web\AccountingExtension" class="Rialto\Accounting\Web\AccountingExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Rialto\Accounting\Bank\Account\AvailableChequeNumberValidator" class="Rialto\Accounting\Bank\Account\AvailableChequeNumberValidator" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Accounting\Bank\Account\AvailableChequeNumberValidator" class="Rialto\Accounting\Bank\Account\AvailableChequeNumberValidator" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Accounting\Period\Web\PeriodController" class="Rialto\Accounting\Period\Web\PeriodController" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Accounting\Period\Web\PeriodController" class="Rialto\Accounting\Period\Web\PeriodController" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Accounting\PaymentTransaction\Cli\RecalculateSettled" class="Rialto\Accounting\PaymentTransaction\Cli\RecalculateSettled" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Accounting\PaymentTransaction\Cli\RecalculateSettled" class="Rialto\Accounting\PaymentTransaction\Cli\RecalculateSettled" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\DependencyInjection\ServiceSubscriberInterface.0.Rialto\Accounting\Bank\Transfer\BankTransferController" class="Rialto\Accounting\Bank\Transfer\BankTransferController" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Rialto\Accounting\Bank\Transfer\BankTransferController" class="Rialto\Accounting\Bank\Transfer\BankTransferController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Accounting\Bank\Transfer\BankTransferController" class="Rialto\Accounting\Bank\Transfer\BankTransferController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Allocation\Web\AllocationExtension" class="Rialto\Allocation\Web\AllocationExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Allocation\Web\AllocationExtension" class="Rialto\Allocation\Web\AllocationExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Allocation\Web\AllocationExtension" class="Rialto\Allocation\Web\AllocationExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Rialto\Allocation\Validator\PurchasingDataExistsValidator" class="Rialto\Allocation\Validator\PurchasingDataExistsValidator" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Allocation\Validator\PurchasingDataExistsValidator" class="Rialto\Allocation\Validator\PurchasingDataExistsValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Rialto\Allocation\Validator\PurchasingDataExistsForChildValidator" class="Rialto\Allocation\Validator\PurchasingDataExistsForChildValidator" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Allocation\Validator\PurchasingDataExistsForChildValidator" class="Rialto\Allocation\Validator\PurchasingDataExistsForChildValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Allocation\Dispatch\DispatchInstructionSubscriber" class="Rialto\Allocation\Dispatch\DispatchInstructionSubscriber" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Allocation\Dispatch\DispatchInstructionSubscriber" class="Rialto\Allocation\Dispatch\DispatchInstructionSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Allocation\Consumer\StockConsumerListener" class="Rialto\Allocation\Consumer\StockConsumerListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Allocation\Consumer\StockConsumerListener" class="Rialto\Allocation\Consumer\StockConsumerListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Allocation\Allocation\AllocationTransferListener" class="Rialto\Allocation\Allocation\AllocationTransferListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Allocation\Allocation\AllocationTransferListener" class="Rialto\Allocation\Allocation\AllocationTransferListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Allocation\Cli\DeleteInvalidAllocationsCommand" class="Rialto\Allocation\Cli\DeleteInvalidAllocationsCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Allocation\Cli\DeleteInvalidAllocationsCommand" class="Rialto\Allocation\Cli\DeleteInvalidAllocationsCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Allocation\Cli\DeleteStockBinAllocationsCommand" class="Rialto\Allocation\Cli\DeleteStockBinAllocationsCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Allocation\Cli\DeleteStockBinAllocationsCommand" class="Rialto\Allocation\Cli\DeleteStockBinAllocationsCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Catalina\Web\CatalinaExtension" class="Rialto\Catalina\Web\CatalinaExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Catalina\Web\CatalinaExtension" class="Rialto\Catalina\Web\CatalinaExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Catalina\Web\CatalinaExtension" class="Rialto\Catalina\Web\CatalinaExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Catalina\ProductionTaskListener" class="Rialto\Catalina\ProductionTaskListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Catalina\ProductionTaskListener" class="Rialto\Catalina\ProductionTaskListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_LoaderInterface.0.Rialto\Cms\CmsLoader" class="Rialto\Cms\CmsLoader" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Loader\LoaderInterface.0.Rialto\Cms\CmsLoader" class="Rialto\Cms\CmsLoader" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Cms\CmsLoader" class="Rialto\Cms\CmsLoader" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Cms\CmsExtension" class="Rialto\Cms\CmsExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Cms\CmsExtension" class="Rialto\Cms\CmsExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Cms\CmsExtension" class="Rialto\Cms\CmsExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Cms\Web\CmsEntryType" class="Rialto\Cms\Web\CmsEntryType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Cms\Web\CmsEntryType" class="Rialto\Cms\Web\CmsEntryType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Database\Orm\LockExceptionHandler" class="Rialto\Database\Orm\LockExceptionHandler" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Database\Orm\LockExceptionHandler" class="Rialto\Database\Orm\LockExceptionHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Email\Web\EmailExtension" class="Rialto\Email\Web\EmailExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Email\Web\EmailExtension" class="Rialto\Email\Web\EmailExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Email\Web\EmailExtension" class="Rialto\Email\Web\EmailExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Filetype\FiletypeExtension" class="Rialto\Filetype\FiletypeExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Filetype\FiletypeExtension" class="Rialto\Filetype\FiletypeExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Filetype\FiletypeExtension" class="Rialto\Filetype\FiletypeExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Filetype\Pdf\LatexExtension" class="Rialto\Filetype\Pdf\LatexExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Filetype\Pdf\LatexExtension" class="Rialto\Filetype\Pdf\LatexExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Filetype\Pdf\LatexExtension" class="Rialto\Filetype\Pdf\LatexExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Geography\Address\Web\AddressEntityType" class="Rialto\Geography\Address\Web\AddressEntityType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Geography\Address\Web\AddressEntityType" class="Rialto\Geography\Address\Web\AddressEntityType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Geppetto\Design\Web\DesignController" class="Rialto\Geppetto\Design\Web\DesignController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Geppetto\Design\Web\DesignController" class="Rialto\Geppetto\Design\Web\DesignController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Geppetto\StandardCostListener" class="Rialto\Geppetto\StandardCostListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Geppetto\StandardCostListener" class="Rialto\Geppetto\StandardCostListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Logging\Cli\RecreateMongoLogsCommand" class="Rialto\Logging\Cli\RecreateMongoLogsCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Logging\Cli\RecreateMongoLogsCommand" class="Rialto\Logging\Cli\RecreateMongoLogsCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Madison\Feature\Web\FeatureType" class="Rialto\Madison\Feature\Web\FeatureType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Madison\Feature\Web\FeatureType" class="Rialto\Madison\Feature\Web\FeatureType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Madison\Version\VersionChangeNotifier" class="Rialto\Madison\Version\VersionChangeNotifier" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Madison\Version\VersionChangeNotifier" class="Rialto\Madison\Version\VersionChangeNotifier" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Magento2\Order\PaymentProcessor" class="Rialto\Magento2\Order\PaymentProcessor" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Magento2\Order\PaymentProcessor" class="Rialto\Magento2\Order\PaymentProcessor" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Magento2\Order\ShipmentListener" class="Rialto\Magento2\Order\ShipmentListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Magento2\Order\ShipmentListener" class="Rialto\Magento2\Order\ShipmentListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Magento2\Order\OrderClosedListener" class="Rialto\Magento2\Order\OrderClosedListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Magento2\Order\OrderClosedListener" class="Rialto\Magento2\Order\OrderClosedListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Magento2\Stock\StockUpdateListener" class="Rialto\Magento2\Stock\StockUpdateListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Magento2\Stock\StockUpdateListener" class="Rialto\Magento2\Stock\StockUpdateListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Magento2\Stock\Cli\SyncStockLevelsCommand" class="Rialto\Magento2\Stock\Cli\SyncStockLevelsCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Magento2\Stock\Cli\SyncStockLevelsCommand" class="Rialto\Magento2\Stock\Cli\SyncStockLevelsCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Magento2\Order\Cli\SyncOrdersCommand" class="Rialto\Magento2\Order\Cli\SyncOrdersCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Magento2\Order\Cli\SyncOrdersCommand" class="Rialto\Magento2\Order\Cli\SyncOrdersCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Magento2\Order\SuspectedFraudListener" class="Rialto\Magento2\Order\SuspectedFraudListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Magento2\Order\SuspectedFraudListener" class="Rialto\Magento2\Order\SuspectedFraudListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Manufacturing\Bom\Bag\AddBagToBomListener" class="Rialto\Manufacturing\Bom\Bag\AddBagToBomListener" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Bom\Bag\AddBagToBomListener" class="Rialto\Manufacturing\Bom\Bag\AddBagToBomListener" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Rialto\Manufacturing\Bom\Validator\IsValidBomCsvValidator" class="Rialto\Manufacturing\Bom\Validator\IsValidBomCsvValidator" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Bom\Validator\IsValidBomCsvValidator" class="Rialto\Manufacturing\Bom\Validator\IsValidBomCsvValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Manufacturing\BuildFiles\PcbBuildFileVoter" class="Rialto\Manufacturing\BuildFiles\PcbBuildFileVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\BuildFiles\PcbBuildFileVoter" class="Rialto\Manufacturing\BuildFiles\PcbBuildFileVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Manufacturing\Customization\Web\CustomizationStrategyType" class="Rialto\Manufacturing\Customization\Web\CustomizationStrategyType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Customization\Web\CustomizationStrategyType" class="Rialto\Manufacturing\Customization\Web\CustomizationStrategyType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Manufacturing\Customization\Cli\ValidateSubstitutionsCommand" class="Rialto\Manufacturing\Customization\Cli\ValidateSubstitutionsCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Customization\Cli\ValidateSubstitutionsCommand" class="Rialto\Manufacturing\Customization\Cli\ValidateSubstitutionsCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Manufacturing\Kit\Reminder\SendEmailCommand" class="Rialto\Manufacturing\Kit\Reminder\SendEmailCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Kit\Reminder\SendEmailCommand" class="Rialto\Manufacturing\Kit\Reminder\SendEmailCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Manufacturing\Kit\Reminder\EmailScheduler" class="Rialto\Manufacturing\Kit\Reminder\EmailScheduler" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Kit\Reminder\EmailScheduler" class="Rialto\Manufacturing\Kit\Reminder\EmailScheduler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Manufacturing\WorkOrder\TransferEventListener" class="Rialto\Manufacturing\WorkOrder\TransferEventListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\WorkOrder\TransferEventListener" class="Rialto\Manufacturing\WorkOrder\TransferEventListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Manufacturing\PurchaseOrder\PartsOrderSentListener" class="Rialto\Manufacturing\PurchaseOrder\PartsOrderSentListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\PurchaseOrder\PartsOrderSentListener" class="Rialto\Manufacturing\PurchaseOrder\PartsOrderSentListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Manufacturing\WorkOrder\Cli\AutoBuildCommand" class="Rialto\Manufacturing\WorkOrder\Cli\AutoBuildCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\WorkOrder\Cli\AutoBuildCommand" class="Rialto\Manufacturing\WorkOrder\Cli\AutoBuildCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Manufacturing\Task\ProductionTaskRefreshListener" class="Rialto\Manufacturing\Task\ProductionTaskRefreshListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Task\ProductionTaskRefreshListener" class="Rialto\Manufacturing\Task\ProductionTaskRefreshListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Manufacturing\Task\Cli\TasksCommand" class="Rialto\Manufacturing\Task\Cli\TasksCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Task\Cli\TasksCommand" class="Rialto\Manufacturing\Task\Cli\TasksCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Manufacturing\Task\Cli\RefreshProductionTasksCommand" class="Rialto\Manufacturing\Task\Cli\RefreshProductionTasksCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Task\Cli\RefreshProductionTasksCommand" class="Rialto\Manufacturing\Task\Cli\RefreshProductionTasksCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Manufacturing\Task\Cli\ProductionTaskReminderCommand" class="Rialto\Manufacturing\Task\Cli\ProductionTaskReminderCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Task\Cli\ProductionTaskReminderCommand" class="Rialto\Manufacturing\Task\Cli\ProductionTaskReminderCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Manufacturing\Task\Cli\JobsCommand" class="Rialto\Manufacturing\Task\Cli\JobsCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Task\Cli\JobsCommand" class="Rialto\Manufacturing\Task\Cli\JobsCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Manufacturing\Web\ManufacturingExtension" class="Rialto\Manufacturing\Web\ManufacturingExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Manufacturing\Web\ManufacturingExtension" class="Rialto\Manufacturing\Web\ManufacturingExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\Web\ManufacturingExtension" class="Rialto\Manufacturing\Web\ManufacturingExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Purchasing\EmailEventSubscriber" class="Rialto\Purchasing\EmailEventSubscriber" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\EmailEventSubscriber" class="Rialto\Purchasing\EmailEventSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Manufacturing\WorkOrder\Web\WorkOrderController" class="Rialto\Manufacturing\WorkOrder\Web\WorkOrderController" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Manufacturing\WorkOrder\Web\WorkOrderController" class="Rialto\Manufacturing\WorkOrder\Web\WorkOrderController" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Rialto\Panelization\Validator\PurchasingDataExistsValidator" class="Rialto\Panelization\Validator\PurchasingDataExistsValidator" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Panelization\Validator\PurchasingDataExistsValidator" class="Rialto\Panelization\Validator\PurchasingDataExistsValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Payment\PaymentProcessor" class="Rialto\Payment\PaymentProcessor" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Payment\PaymentProcessor" class="Rialto\Payment\PaymentProcessor" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Payment\Sweep\Cli\SweepCardTransactionsCommand" class="Rialto\Payment\Sweep\Cli\SweepCardTransactionsCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Payment\Sweep\Cli\SweepCardTransactionsCommand" class="Rialto\Payment\Sweep\Cli\SweepCardTransactionsCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\PcbNg\Service\PcbNgNotificationEmailer" class="Rialto\PcbNg\Service\PcbNgNotificationEmailer" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\PcbNg\Service\PcbNgNotificationEmailer" class="Rialto\PcbNg\Service\PcbNgNotificationEmailer" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Printing\Job\Cli\FlushPrintQueue" class="Rialto\Printing\Job\Cli\FlushPrintQueue" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Printing\Job\Cli\FlushPrintQueue" class="Rialto\Printing\Job\Cli\FlushPrintQueue" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Printing\Job\Cli\DeleteCompletedPrintJobs" class="Rialto\Printing\Job\Cli\DeleteCompletedPrintJobs" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Printing\Job\Cli\DeleteCompletedPrintJobs" class="Rialto\Printing\Job\Cli\DeleteCompletedPrintJobs" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Printing\Printer\Cli\DevPrintServer" class="Rialto\Printing\Printer\Cli\DevPrintServer" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Printing\Printer\Cli\DevPrintServer" class="Rialto\Printing\Printer\Cli\DevPrintServer" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Purchasing\Catalog\Web\PurchasingDataController" class="Rialto\Purchasing\Catalog\Web\PurchasingDataController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Catalog\Web\PurchasingDataController" class="Rialto\Purchasing\Catalog\Web\PurchasingDataController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Purchasing\Catalog\Remote\Web\RemoteCatalogController" class="Rialto\Purchasing\Catalog\Remote\Web\RemoteCatalogController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Catalog\Remote\Web\RemoteCatalogController" class="Rialto\Purchasing\Catalog\Remote\Web\RemoteCatalogController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Purchasing\Catalog\Cli\PurchasingDataSynchronizerCommand" class="Rialto\Purchasing\Catalog\Cli\PurchasingDataSynchronizerCommand" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Catalog\Cli\PurchasingDataSynchronizerCommand" class="Rialto\Purchasing\Catalog\Cli\PurchasingDataSynchronizerCommand" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Purchasing\Catalog\Cli\PurchasingDataStockLevelRefreshCommand" class="Rialto\Purchasing\Catalog\Cli\PurchasingDataStockLevelRefreshCommand" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Catalog\Cli\PurchasingDataStockLevelRefreshCommand" class="Rialto\Purchasing\Catalog\Cli\PurchasingDataStockLevelRefreshCommand" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Purchasing\Catalog\Cli\RefreshGeppettoPurchasingDataConsoleCommand" class="Rialto\Purchasing\Catalog\Cli\RefreshGeppettoPurchasingDataConsoleCommand" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Catalog\Cli\RefreshGeppettoPurchasingDataConsoleCommand" class="Rialto\Purchasing\Catalog\Cli\RefreshGeppettoPurchasingDataConsoleCommand" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Purchasing\Invoice\Reader\Email\Cli\AutoImportInvoices" class="Rialto\Purchasing\Invoice\Reader\Email\Cli\AutoImportInvoices" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Invoice\Reader\Email\Cli\AutoImportInvoices" class="Rialto\Purchasing\Invoice\Reader\Email\Cli\AutoImportInvoices" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Purchasing\Invoice\Cli\FindUninvoicedOrders" class="Rialto\Purchasing\Invoice\Cli\FindUninvoicedOrders" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Invoice\Cli\FindUninvoicedOrders" class="Rialto\Purchasing\Invoice\Cli\FindUninvoicedOrders" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Purchasing\Invoice\Web\SupplierInvoiceItemApprovalType" class="Rialto\Purchasing\Invoice\Web\SupplierInvoiceItemApprovalType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Invoice\Web\SupplierInvoiceItemApprovalType" class="Rialto\Purchasing\Invoice\Web\SupplierInvoiceItemApprovalType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Purchasing\Recurring\Cli\AutoInvoiceCommand" class="Rialto\Purchasing\Recurring\Cli\AutoInvoiceCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Recurring\Cli\AutoInvoiceCommand" class="Rialto\Purchasing\Recurring\Cli\AutoInvoiceCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Purchasing\Invoice\Web\SupplierInvoiceController" class="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Invoice\Web\SupplierInvoiceController" class="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand" class="Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand" class="Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Purchasing\Order\Web\PurchaseOrderController" class="Rialto\Purchasing\Order\Web\PurchaseOrderController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Order\Web\PurchaseOrderController" class="Rialto\Purchasing\Order\Web\PurchaseOrderController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Purchasing\Order\Web\EditPurchaseOrderType" class="Rialto\Purchasing\Order\Web\EditPurchaseOrderType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Order\Web\EditPurchaseOrderType" class="Rialto\Purchasing\Order\Web\EditPurchaseOrderType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Purchasing\Order\Web\CreatePurchaseOrderType" class="Rialto\Purchasing\Order\Web\CreatePurchaseOrderType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Order\Web\CreatePurchaseOrderType" class="Rialto\Purchasing\Order\Web\CreatePurchaseOrderType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Purchasing\Order\Cli\AutoOrderCommand" class="Rialto\Purchasing\Order\Cli\AutoOrderCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Order\Cli\AutoOrderCommand" class="Rialto\Purchasing\Order\Cli\AutoOrderCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Purchasing\Order\AutoSendReworkOrderSubscriber" class="Rialto\Purchasing\Order\AutoSendReworkOrderSubscriber" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Order\AutoSendReworkOrderSubscriber" class="Rialto\Purchasing\Order\AutoSendReworkOrderSubscriber" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Purchasing\PurchasingErrorHandler" class="Rialto\Purchasing\PurchasingErrorHandler" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\PurchasingErrorHandler" class="Rialto\Purchasing\PurchasingErrorHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Purchasing\Order\PurchaseOrderVoter" class="Rialto\Purchasing\Order\PurchaseOrderVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Order\PurchaseOrderVoter" class="Rialto\Purchasing\Order\PurchaseOrderVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Purchasing\Order\StockItemVoter" class="Rialto\Purchasing\Order\StockItemVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Order\StockItemVoter" class="Rialto\Purchasing\Order\StockItemVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Purchasing\Producer\StockProducerVoter" class="Rialto\Purchasing\Producer\StockProducerVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Producer\StockProducerVoter" class="Rialto\Purchasing\Producer\StockProducerVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Purchasing\Receiving\GoodsReceivedLogger" class="Rialto\Purchasing\Receiving\GoodsReceivedLogger" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Receiving\GoodsReceivedLogger" class="Rialto\Purchasing\Receiving\GoodsReceivedLogger" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Purchasing\Receiving\Web\GoodsReceivedType" class="Rialto\Purchasing\Receiving\Web\GoodsReceivedType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Receiving\Web\GoodsReceivedType" class="Rialto\Purchasing\Receiving\Web\GoodsReceivedType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Purchasing\Receiving\Auth\ReceiveIntoVoter" class="Rialto\Purchasing\Receiving\Auth\ReceiveIntoVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Receiving\Auth\ReceiveIntoVoter" class="Rialto\Purchasing\Receiving\Auth\ReceiveIntoVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Rialto\Purchasing\Receiving\Auth\CanReceiveIntoValidator" class="Rialto\Purchasing\Receiving\Auth\CanReceiveIntoValidator" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Receiving\Auth\CanReceiveIntoValidator" class="Rialto\Purchasing\Receiving\Auth\CanReceiveIntoValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Purchasing\Receiving\Notify\XmppEventSubscriber" class="Rialto\Purchasing\Receiving\Notify\XmppEventSubscriber" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Receiving\Notify\XmppEventSubscriber" class="Rialto\Purchasing\Receiving\Notify\XmppEventSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Purchasing\Receiving\Notify\TestXmppCommand" class="Rialto\Purchasing\Receiving\Notify\TestXmppCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Receiving\Notify\TestXmppCommand" class="Rialto\Purchasing\Receiving\Notify\TestXmppCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Purchasing\Supplier\Attribute\Web\SupplierAttributeType" class="Rialto\Purchasing\Supplier\Attribute\Web\SupplierAttributeType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Supplier\Attribute\Web\SupplierAttributeType" class="Rialto\Purchasing\Supplier\Attribute\Web\SupplierAttributeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Purchasing\Web\PurchasingExtension" class="Rialto\Purchasing\Web\PurchasingExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Purchasing\Web\PurchasingExtension" class="Rialto\Purchasing\Web\PurchasingExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Web\PurchasingExtension" class="Rialto\Purchasing\Web\PurchasingExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Purchasing\Supplier\Web\ActionsController" class="Rialto\Purchasing\Supplier\Web\ActionsController" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Supplier\Web\ActionsController" class="Rialto\Purchasing\Supplier\Web\ActionsController" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Purchasing\Producer\Web\StockProducerType" class="Rialto\Purchasing\Producer\Web\StockProducerType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Purchasing\Producer\Web\StockProducerType" class="Rialto\Purchasing\Producer\Web\StockProducerType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Sales\Order\Dates\InitTargetDateCommand" class="Rialto\Sales\Order\Dates\InitTargetDateCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\Order\Dates\InitTargetDateCommand" class="Rialto\Sales\Order\Dates\InitTargetDateCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Sales\Order\Dates\TargetShipDateListener" class="Rialto\Sales\Order\Dates\TargetShipDateListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\Order\Dates\TargetShipDateListener" class="Rialto\Sales\Order\Dates\TargetShipDateListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Sales\Order\Email\OrderEmailListener" class="Rialto\Sales\Order\Email\OrderEmailListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\Order\Email\OrderEmailListener" class="Rialto\Sales\Order\Email\OrderEmailListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Sales\Shipping\ApproveToShipEventListener" class="Rialto\Sales\Shipping\ApproveToShipEventListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\Shipping\ApproveToShipEventListener" class="Rialto\Sales\Shipping\ApproveToShipEventListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Sales\Order\OrderUpdateListener" class="Rialto\Sales\Order\OrderUpdateListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\Order\OrderUpdateListener" class="Rialto\Sales\Order\OrderUpdateListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Sales\Order\Allocation\AllocationEventListener" class="Rialto\Sales\Order\Allocation\AllocationEventListener" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\Order\Allocation\AllocationEventListener" class="Rialto\Sales\Order\Allocation\AllocationEventListener" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Sales\Order\SoftwareInvoicer" class="Rialto\Sales\Order\SoftwareInvoicer" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\Order\SoftwareInvoicer" class="Rialto\Sales\Order\SoftwareInvoicer" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Sales\Order\Dates\Web\OrderDateController" class="Rialto\Sales\Order\Dates\Web\OrderDateController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\Order\Dates\Web\OrderDateController" class="Rialto\Sales\Order\Dates\Web\OrderDateController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Sales\Web\SalesExtension" class="Rialto\Sales\Web\SalesExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Sales\Web\SalesExtension" class="Rialto\Sales\Web\SalesExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\Web\SalesExtension" class="Rialto\Sales\Web\SalesExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Sales\EmailEventListener" class="Rialto\Sales\EmailEventListener" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\EmailEventListener" class="Rialto\Sales\EmailEventListener" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Sales\DocumentEventListener" class="Rialto\Sales\DocumentEventListener" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Sales\DocumentEventListener" class="Rialto\Sales\DocumentEventListener" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Security\User\Cli\CreateUserCommand" class="Rialto\Security\User\Cli\CreateUserCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Security\User\Cli\CreateUserCommand" class="Rialto\Security\User\Cli\CreateUserCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Security\User\Cli\PromoteUserCommand" class="Rialto\Security\User\Cli\PromoteUserCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Security\User\Cli\PromoteUserCommand" class="Rialto\Security\User\Cli\PromoteUserCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Security\User\Cli\AddUuidCommand" class="Rialto\Security\User\Cli\AddUuidCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Security\User\Cli\AddUuidCommand" class="Rialto\Security\User\Cli\AddUuidCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Security\User\Web\UserType" class="Rialto\Security\User\Web\UserType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Security\User\Web\UserType" class="Rialto\Security\User\Web\UserType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Security\User\UserVoter" class="Rialto\Security\User\UserVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Security\User\UserVoter" class="Rialto\Security\User\UserVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Security\User\LastLoginUpdater" class="Rialto\Security\User\LastLoginUpdater" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Security\User\LastLoginUpdater" class="Rialto\Security\User\LastLoginUpdater" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Task\TaskVoter" class="Rialto\Task\TaskVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Task\TaskVoter" class="Rialto\Task\TaskVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Security\Firewall\UsernameNotFoundExceptionHandler" class="Rialto\Security\Firewall\UsernameNotFoundExceptionHandler" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Security\Firewall\UsernameNotFoundExceptionHandler" class="Rialto\Security\Firewall\UsernameNotFoundExceptionHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Security\Nda\NdaFormListener" class="Rialto\Security\Nda\NdaFormListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Security\Nda\NdaFormListener" class="Rialto\Security\Nda\NdaFormListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Security\Web\SecurityExtension" class="Rialto\Security\Web\SecurityExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Security\Web\SecurityExtension" class="Rialto\Security\Web\SecurityExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Security\Web\SecurityExtension" class="Rialto\Security\Web\SecurityExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Shipping\Shipment\Web\ShipmentOptionsType" class="Rialto\Shipping\Shipment\Web\ShipmentOptionsType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Shipping\Shipment\Web\ShipmentOptionsType" class="Rialto\Shipping\Shipment\Web\ShipmentOptionsType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Rialto\Shipping\Export\AllowedCountryValidator" class="Rialto\Shipping\Export\AllowedCountryValidator" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Shipping\Export\AllowedCountryValidator" class="Rialto\Shipping\Export\AllowedCountryValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Shopify\Webhook\Cli\WebhookCustomCommand" class="Rialto\Shopify\Webhook\Cli\WebhookCustomCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Shopify\Webhook\Cli\WebhookCustomCommand" class="Rialto\Shopify\Webhook\Cli\WebhookCustomCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Stock\Bin\Label\BinLabelListener" class="Rialto\Stock\Bin\Label\BinLabelListener" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Bin\Label\BinLabelListener" class="Rialto\Stock\Bin\Label\BinLabelListener" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Stock\Bin\StockBinUpdateListener" class="Rialto\Stock\Bin\StockBinUpdateListener" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Bin\StockBinUpdateListener" class="Rialto\Stock\Bin\StockBinUpdateListener" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Stock\Bin\Web\StockAdjustmentType" class="Rialto\Stock\Bin\Web\StockAdjustmentType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Bin\Web\StockAdjustmentType" class="Rialto\Stock\Bin\Web\StockAdjustmentType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Stock\Bin\Web\BinUpdateAllocType" class="Rialto\Stock\Bin\Web\BinUpdateAllocType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Bin\Web\BinUpdateAllocType" class="Rialto\Stock\Bin\Web\BinUpdateAllocType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Stock\Bin\StockBinVoter" class="Rialto\Stock\Bin\StockBinVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Bin\StockBinVoter" class="Rialto\Stock\Bin\StockBinVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Stock\Bin\Label\Web\LabelController" class="Rialto\Stock\Bin\Label\Web\LabelController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Bin\Label\Web\LabelController" class="Rialto\Stock\Bin\Label\Web\LabelController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Stock\Bin\Web\StockBinController" class="Rialto\Stock\Bin\Web\StockBinController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Bin\Web\StockBinController" class="Rialto\Stock\Bin\Web\StockBinController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Stock\Item\Web\ActionsController" class="Rialto\Stock\Item\Web\ActionsController" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Item\Web\ActionsController" class="Rialto\Stock\Item\Web\ActionsController" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.Rialto\Stock\Item\NewSkuValidator" class="Rialto\Stock\Item\NewSkuValidator" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Item\NewSkuValidator" class="Rialto\Stock\Item\NewSkuValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Stock\Item\Web\StockItemAttributeType" class="Rialto\Stock\Item\Web\StockItemAttributeType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Item\Web\StockItemAttributeType" class="Rialto\Stock\Item\Web\StockItemAttributeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Stock\Item\Web\StockItemTemplateType" class="Rialto\Stock\Item\Web\StockItemTemplateType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Item\Web\StockItemTemplateType" class="Rialto\Stock\Item\Web\StockItemTemplateType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Stock\Item\Web\EditType" class="Rialto\Stock\Item\Web\EditType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Item\Web\EditType" class="Rialto\Stock\Item\Web\EditType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Stock\Item\Version\Web\ItemVersionSelectorType" class="Rialto\Stock\Item\Version\Web\ItemVersionSelectorType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Item\Version\Web\ItemVersionSelectorType" class="Rialto\Stock\Item\Version\Web\ItemVersionSelectorType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Stock\Item\Cli\BulkSetDefaultWorkOrderCommand" class="Rialto\Stock\Item\Cli\BulkSetDefaultWorkOrderCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Item\Cli\BulkSetDefaultWorkOrderCommand" class="Rialto\Stock\Item\Cli\BulkSetDefaultWorkOrderCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Stock\Item\Cli\StockLevelRefreshCommand" class="Rialto\Stock\Item\Cli\StockLevelRefreshCommand" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Item\Cli\StockLevelRefreshCommand" class="Rialto\Stock\Item\Cli\StockLevelRefreshCommand" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Stock\Level\Cli\StockLevelSyncCommand" class="Rialto\Stock\Level\Cli\StockLevelSyncCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Level\Cli\StockLevelSyncCommand" class="Rialto\Stock\Level\Cli\StockLevelSyncCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Stock\Shelf\Position\AssignmentListener" class="Rialto\Stock\Shelf\Position\AssignmentListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Shelf\Position\AssignmentListener" class="Rialto\Stock\Shelf\Position\AssignmentListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Stock\Transfer\BinEventListener" class="Rialto\Stock\Transfer\BinEventListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Transfer\BinEventListener" class="Rialto\Stock\Transfer\BinEventListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Stock\Web\StockExtension" class="Rialto\Stock\Web\StockExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Stock\Web\StockExtension" class="Rialto\Stock\Web\StockExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Web\StockExtension" class="Rialto\Stock\Web\StockExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Stock\EmailEventListener" class="Rialto\Stock\EmailEventListener" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\EmailEventListener" class="Rialto\Stock\EmailEventListener" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Stock\Count\StockCountVoter" class="Rialto\Stock\Count\StockCountVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Stock\Count\StockCountVoter" class="Rialto\Stock\Count\StockCountVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Summary\Menu\SummaryVoter" class="Rialto\Summary\Menu\SummaryVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Summary\Menu\SummaryVoter" class="Rialto\Summary\Menu\SummaryVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Summary\Menu\Web\SummaryExtension" class="Rialto\Summary\Menu\Web\SummaryExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Summary\Menu\Web\SummaryExtension" class="Rialto\Summary\Menu\Web\SummaryExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Summary\Menu\Web\SummaryExtension" class="Rialto\Summary\Menu\Web\SummaryExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Supplier\Logger" class="Rialto\Supplier\Logger" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Supplier\Logger" class="Rialto\Supplier\Logger" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.Rialto\Supplier\SupplierVoter" class="Rialto\Supplier\SupplierVoter" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Supplier\SupplierVoter" class="Rialto\Supplier\SupplierVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Supplier\Web\SupplierExtension" class="Rialto\Supplier\Web\SupplierExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Supplier\Web\SupplierExtension" class="Rialto\Supplier\Web\SupplierExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Supplier\Web\SupplierExtension" class="Rialto\Supplier\Web\SupplierExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Supplier\Order\Email\EmailSubscriber" class="Rialto\Supplier\Order\Email\EmailSubscriber" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Supplier\Order\Email\EmailSubscriber" class="Rialto\Supplier\Order\Email\EmailSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\DependencyInjection\ServiceSubscriberInterface.0.Rialto\Supplier\Allocation\Web\BinAllocationController" class="Rialto\Supplier\Allocation\Web\BinAllocationController" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.Rialto\Supplier\Allocation\Web\BinAllocationController" class="Rialto\Supplier\Allocation\Web\BinAllocationController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Supplier\Allocation\Web\BinAllocationController" class="Rialto\Supplier\Allocation\Web\BinAllocationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Rialto\Supplier\Order\Web\WorkOrderController" class="Rialto\Supplier\Order\Web\WorkOrderController" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Supplier\Order\Web\WorkOrderController" class="Rialto\Supplier\Order\Web\WorkOrderController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Tax\Web\TaxExtension" class="Rialto\Tax\Web\TaxExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Tax\Web\TaxExtension" class="Rialto\Tax\Web\TaxExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Tax\Web\TaxExtension" class="Rialto\Tax\Web\TaxExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Tax\Regime\Cli\LoadTaxRegimesCommand" class="Rialto\Tax\Regime\Cli\LoadTaxRegimesCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Tax\Regime\Cli\LoadTaxRegimesCommand" class="Rialto\Tax\Regime\Cli\LoadTaxRegimesCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Time\Web\TimeExtension" class="Rialto\Time\Web\TimeExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Time\Web\TimeExtension" class="Rialto\Time\Web\TimeExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Time\Web\TimeExtension" class="Rialto\Time\Web\TimeExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Ups\Shipping\Label\ShippingLabelListener" class="Rialto\Ups\Shipping\Label\ShippingLabelListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Ups\Shipping\Label\ShippingLabelListener" class="Rialto\Ups\Shipping\Label\ShippingLabelListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Ups\Shipping\Webservice\UpsExtension" class="Rialto\Ups\Shipping\Webservice\UpsExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Ups\Shipping\Webservice\UpsExtension" class="Rialto\Ups\Shipping\Webservice\UpsExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Ups\Shipping\Webservice\UpsExtension" class="Rialto\Ups\Shipping\Webservice\UpsExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Ups\TrackingRecord\Cli\PollTrackingNumbersCommand" class="Rialto\Ups\TrackingRecord\Cli\PollTrackingNumbersCommand" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Ups\TrackingRecord\Cli\PollTrackingNumbersCommand" class="Rialto\Ups\TrackingRecord\Cli\PollTrackingNumbersCommand" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Ups\TrackingRecord\Cli\UpdatePOTrackingRecordsCommand" class="Rialto\Ups\TrackingRecord\Cli\UpdatePOTrackingRecordsCommand" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Ups\TrackingRecord\Cli\UpdatePOTrackingRecordsCommand" class="Rialto\Ups\TrackingRecord\Cli\UpdatePOTrackingRecordsCommand" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Ups\TrackingRecord\Cli\UpdateSalesTrackingRecordsCommand" class="Rialto\Ups\TrackingRecord\Cli\UpdateSalesTrackingRecordsCommand" public="true" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Ups\TrackingRecord\Cli\UpdateSalesTrackingRecordsCommand" class="Rialto\Ups\TrackingRecord\Cli\UpdateSalesTrackingRecordsCommand" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Ups\TrackingRecord\Web\TrackingExtension" class="Rialto\Ups\TrackingRecord\Web\TrackingExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Ups\TrackingRecord\Web\TrackingExtension" class="Rialto\Ups\TrackingRecord\Web\TrackingExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Ups\TrackingRecord\Web\TrackingExtension" class="Rialto\Ups\TrackingRecord\Web\TrackingExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Web\RialtoExtension" class="Rialto\Web\RialtoExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Web\RialtoExtension" class="Rialto\Web\RialtoExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Web\RialtoExtension" class="Rialto\Web\RialtoExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Web\NumberExtension" class="Rialto\Web\NumberExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Web\NumberExtension" class="Rialto\Web\NumberExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Web\NumberExtension" class="Rialto\Web\NumberExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Serializer\Normalizer\NormalizerInterface.0.Rialto\Web\Serializer\DateTimeNormalizer" class="Rialto\Web\Serializer\DateTimeNormalizer" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Web\Serializer\DateTimeNormalizer" class="Rialto\Web\Serializer\DateTimeNormalizer" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Web\Form\JsEntityType" class="Rialto\Web\Form\JsEntityType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Web\Form\JsEntityType" class="Rialto\Web\Form\JsEntityType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Form\FormTypeInterface.0.Rialto\Web\Form\TextEntityType" class="Rialto\Web\Form\TextEntityType" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Web\Form\TextEntityType" class="Rialto\Web\Form\TextEntityType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Twig_ExtensionInterface.0.Rialto\Web\Form\FormExtension" class="Rialto\Web\Form\FormExtension" public="false" autowire="true" abstract="true"/>
    <service id="instanceof.Twig\Extension\ExtensionInterface.0.Rialto\Web\Form\FormExtension" class="Rialto\Web\Form\FormExtension" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Web\Form\FormExtension" class="Rialto\Web\Form\FormExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.Rialto\Wordpress\ChangeNoticeListener" class="Rialto\Wordpress\ChangeNoticeListener" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Wordpress\ChangeNoticeListener" class="Rialto\Wordpress\ChangeNoticeListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Component\Console\Command\Command.0.Rialto\Port\CommandBus\HandleCommandConsoleCommand" class="Rialto\Port\CommandBus\HandleCommandConsoleCommand" public="false" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.Rialto\Port\CommandBus\HandleCommandConsoleCommand" class="Rialto\Port\CommandBus\HandleCommandConsoleCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="service_locator.5h4cvxx" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="transfer" type="service" id="autowired.Rialto\Accounting\Bank\Transfer\BankTransfer"/>
      </argument>
    </service>
    <service id="service_locator.f0jopj2" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="stockItemDeleteService" type="service" id="Rialto\Stock\Item\StockItemDeleteService" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.r_bhzvw" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.gtv3.px" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.y5h2fnh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.hddlp9z" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.lgjacis" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.y8tx1ej" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.jm2mkgh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.8_1bzul" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="supplier" type="service" id="autowired.Rialto\Purchasing\Supplier\Supplier"/>
      </argument>
    </service>
    <service id="service_locator.fp9eiz1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.1ydjmz8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="item" type="service" id="autowired.Rialto\Stock\Item\PurchasedStockItem"/>
      </argument>
    </service>
    <service id="service_locator.lr3dryr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="commandQueue" type="service" id="Rialto\Port\CommandBus\CommandQueue" on-invalid="ignore"/>
        <argument key="item" type="service" id="autowired.Rialto\Stock\Item\ManufacturedStockItem"/>
        <argument key="pcbNgClient" type="service" id="Rialto\PcbNg\Service\PcbNgClient" on-invalid="ignore"/>
        <argument key="purchasingDataRepository" type="service" id="Rialto\Purchasing\Catalog\Orm\PurchasingDataRepository" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.tkotenx" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="invoice" type="service" id="autowired.Rialto\Purchasing\Invoice\SupplierInvoice"/>
      </argument>
    </service>
    <service id="service_locator.r9yn3ey" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="supplier" type="service" id="autowired.Rialto\Purchasing\Supplier\Supplier"/>
      </argument>
    </service>
    <service id="service_locator.bcryleo" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.qmqcrta" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="handler" type="service" id="Rialto\Purchasing\Invoice\Command\UploadSupplierInvoiceFileHandler" on-invalid="ignore"/>
        <argument key="invoice" type="service" id="autowired.Rialto\Purchasing\Invoice\SupplierInvoice"/>
      </argument>
    </service>
    <service id="service_locator.rvc0r7z" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filesystem" type="service" id="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem" on-invalid="ignore"/>
        <argument key="invoice" type="service" id="autowired.Rialto\Purchasing\Invoice\SupplierInvoice"/>
      </argument>
    </service>
    <service id="service_locator.9.gp1se" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filesystem" type="service" id="Rialto\Purchasing\Invoice\SupplierInvoiceFilesystem" on-invalid="ignore"/>
        <argument key="supplier" type="service" id="autowired.Rialto\Purchasing\Supplier\Supplier"/>
      </argument>
    </service>
    <service id="service_locator.k4wsrws" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="invoice" type="service" id="autowired.Rialto\Purchasing\Invoice\SupplierInvoice"/>
        <argument key="mailer" type="service" id="Rialto\Email\Mailer" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.q.pbxzg" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="item" type="service" id="autowired.Rialto\Purchasing\Invoice\SupplierInvoiceItem"/>
      </argument>
    </service>
    <service id="service_locator.gr7jsx0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="item" type="service" id="autowired.Rialto\Purchasing\Invoice\SupplierInvoiceItem"/>
      </argument>
    </service>
    <service id="service_locator._ayg34g" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="pcbNgClient" type="service" id="Rialto\PcbNg\Service\PcbNgClient" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.r6owv1k" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.kgdq7rh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.antabtk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="dependencyUpdater" type="service" id="Rialto\Purchasing\Producer\DependencyUpdater" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.vkf08r8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.jf3qagc" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.y8eaw7b" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="pdfGenerator" type="service" id="Rialto\Purchasing\Order\OrderPdfGenerator" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.1onhtm9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="pcbNgClient" type="service" id="Rialto\PcbNg\Service\PcbNgClient" on-invalid="ignore"/>
        <argument key="pcbNgSubmitter" type="service" id="Rialto\PcbNg\Service\PcbNgSubmitter" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.gtpaxub" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="supplier" type="service" id="autowired.Rialto\Purchasing\Supplier\Supplier"/>
      </argument>
    </service>
    <service id="service_locator._prgwjr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.mh805et" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="queue" type="service" id="Rialto\Stock\Bin\Label\BinLabelPrintQueue" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.alrq7ug" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.jwvgbsz" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="printer" type="service" id="Rialto\Manufacturing\WorkType\ProductLabelPrinter" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.9rn2ssw" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.ba7jlor" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="printer" type="service" id="Rialto\Manufacturing\WorkType\ProductLabelPrinter" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.hmznkve" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="supplier" type="service" id="autowired.Rialto\Purchasing\Supplier\Supplier"/>
      </argument>
    </service>
    <service id="service_locator.3wdhedg" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.lk4d80q" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.wm0ojhu" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.fuui2gn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.tfkjvqo" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="supplier" type="service" id="autowired.Rialto\Purchasing\Supplier\Supplier"/>
      </argument>
    </service>
    <service id="service_locator.fndts9b" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.aaqa2oe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.eyatk19" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="factory" type="service" id="Rialto\PcbNg\Service\PickAndPlaceFactory" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.zsk7zqm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Rialto\Accounting\Bank\Transfer\BankTransferController:viewAction" type="service" id="service_locator.5h4cvxx"/>
        <argument key="Rialto\Geppetto\Design\Web\DesignController:postDesignRevAction" type="service" id="service_locator.f0jopj2"/>
        <argument key="Rialto\Purchasing\Catalog\Remote\Web\RemoteCatalogController:createForStockItem" type="service" id="service_locator.1ydjmz8"/>
        <argument key="Rialto\Purchasing\Catalog\Remote\Web\RemoteCatalogController:createFromPcbNgForStockItem" type="service" id="service_locator.lr3dryr"/>
        <argument key="Rialto\Purchasing\Catalog\Web\PurchasingDataController:uploadAction" type="service" id="service_locator.8_1bzul"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:approveAction" type="service" id="service_locator.tkotenx"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:deleteAction" type="service" id="service_locator.tkotenx"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:downloadAction" type="service" id="service_locator.rvc0r7z"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:downloadFileAction" type="service" id="service_locator.9.gp1se"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:editAction" type="service" id="service_locator.tkotenx"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:emailAction" type="service" id="service_locator.k4wsrws"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:fromSupplierAction" type="service" id="service_locator.r9yn3ey"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:splitAction" type="service" id="service_locator.q.pbxzg"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:splitInvoiceAccordingToPurchaseOrder" type="service" id="service_locator.gr7jsx0"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:unapproveAction" type="service" id="service_locator.tkotenx"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:uploadInvoiceFileAction" type="service" id="service_locator.qmqcrta"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController:viewAction" type="service" id="service_locator.tkotenx"/>
        <argument key="Rialto\Purchasing\Order\Web\PurchaseOrderController:editAction" type="service" id="service_locator.antabtk"/>
        <argument key="Rialto\Purchasing\Order\Web\PurchaseOrderController:pdfAction" type="service" id="service_locator.y8eaw7b"/>
        <argument key="Rialto\Purchasing\Order\Web\PurchaseOrderController:submitBuildFilesToPcbNgAction" type="service" id="service_locator.1onhtm9"/>
        <argument key="Rialto\Purchasing\Order\Web\PurchaseOrderController:viewAction" type="service" id="service_locator._ayg34g"/>
        <argument key="Rialto\Purchasing\Supplier\Web\ActionsController:linksAction" type="service" id="service_locator.gtpaxub"/>
        <argument key="Rialto\Stock\Bin\Label\Web\LabelController:downloadProductLabelAction" type="service" id="service_locator.ba7jlor"/>
        <argument key="Rialto\Stock\Bin\Label\Web\LabelController:productLabelAction" type="service" id="service_locator.jwvgbsz"/>
        <argument key="Rialto\Stock\Bin\Label\Web\LabelController:suppliersDownloadBinLabelAction" type="service" id="service_locator.mh805et"/>
        <argument key="Rialto\Stock\Bin\Web\StockBinController:list" type="service" id="service_locator.hmznkve"/>
        <argument key="Rialto\Supplier\Allocation\Web\BinAllocationController:list" type="service" id="service_locator.tfkjvqo"/>
        <argument key="Rialto\Supplier\Order\Web\WorkOrderController:pickAndPlaceAction" type="service" id="service_locator.eyatk19"/>
        <argument key="Rialto\Accounting\Bank\Transfer\BankTransferController::viewAction" type="service" id="service_locator.5h4cvxx"/>
        <argument key="Rialto\Geppetto\Design\Web\DesignController::postDesignRevAction" type="service" id="service_locator.f0jopj2"/>
        <argument key="Rialto\Purchasing\Catalog\Remote\Web\RemoteCatalogController::createForStockItem" type="service" id="service_locator.1ydjmz8"/>
        <argument key="Rialto\Purchasing\Catalog\Remote\Web\RemoteCatalogController::createFromPcbNgForStockItem" type="service" id="service_locator.lr3dryr"/>
        <argument key="Rialto\Purchasing\Catalog\Web\PurchasingDataController::uploadAction" type="service" id="service_locator.8_1bzul"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::approveAction" type="service" id="service_locator.tkotenx"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::deleteAction" type="service" id="service_locator.tkotenx"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::downloadAction" type="service" id="service_locator.rvc0r7z"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::downloadFileAction" type="service" id="service_locator.9.gp1se"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::editAction" type="service" id="service_locator.tkotenx"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::emailAction" type="service" id="service_locator.k4wsrws"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::fromSupplierAction" type="service" id="service_locator.r9yn3ey"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::splitAction" type="service" id="service_locator.q.pbxzg"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::splitInvoiceAccordingToPurchaseOrder" type="service" id="service_locator.gr7jsx0"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::unapproveAction" type="service" id="service_locator.tkotenx"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::uploadInvoiceFileAction" type="service" id="service_locator.qmqcrta"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceController::viewAction" type="service" id="service_locator.tkotenx"/>
        <argument key="Rialto\Purchasing\Order\Web\PurchaseOrderController::editAction" type="service" id="service_locator.antabtk"/>
        <argument key="Rialto\Purchasing\Order\Web\PurchaseOrderController::pdfAction" type="service" id="service_locator.y8eaw7b"/>
        <argument key="Rialto\Purchasing\Order\Web\PurchaseOrderController::submitBuildFilesToPcbNgAction" type="service" id="service_locator.1onhtm9"/>
        <argument key="Rialto\Purchasing\Order\Web\PurchaseOrderController::viewAction" type="service" id="service_locator._ayg34g"/>
        <argument key="Rialto\Purchasing\Supplier\Web\ActionsController::linksAction" type="service" id="service_locator.gtpaxub"/>
        <argument key="Rialto\Stock\Bin\Label\Web\LabelController::downloadProductLabelAction" type="service" id="service_locator.ba7jlor"/>
        <argument key="Rialto\Stock\Bin\Label\Web\LabelController::productLabelAction" type="service" id="service_locator.jwvgbsz"/>
        <argument key="Rialto\Stock\Bin\Label\Web\LabelController::suppliersDownloadBinLabelAction" type="service" id="service_locator.mh805et"/>
        <argument key="Rialto\Stock\Bin\Web\StockBinController::list" type="service" id="service_locator.hmznkve"/>
        <argument key="Rialto\Supplier\Allocation\Web\BinAllocationController::list" type="service" id="service_locator.tfkjvqo"/>
        <argument key="Rialto\Supplier\Order\Web\WorkOrderController::pickAndPlaceAction" type="service" id="service_locator.eyatk19"/>
      </argument>
    </service>
    <service id="service_locator.jjt03.w" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Rialto\Accounting\Bank\Account\AvailableChequeNumberValidator" type="service" id="Rialto\Accounting\Bank\Account\AvailableChequeNumberValidator"/>
        <argument key="Rialto\Allocation\Validator\PurchasingDataExistsForChildValidator" type="service" id="Rialto\Allocation\Validator\PurchasingDataExistsForChildValidator"/>
        <argument key="Rialto\Allocation\Validator\PurchasingDataExistsValidator" type="service" id="Rialto\Allocation\Validator\PurchasingDataExistsValidator"/>
        <argument key="Rialto\Manufacturing\Bom\Validator\IsValidBomCsvValidator" type="service" id="Rialto\Manufacturing\Bom\Validator\IsValidBomCsvValidator"/>
        <argument key="Rialto\Panelization\Validator\PurchasingDataExistsValidator" type="service" id="Rialto\Panelization\Validator\PurchasingDataExistsValidator"/>
        <argument key="Rialto\Purchasing\Receiving\Auth\CanReceiveIntoValidator" type="service" id="Rialto\Purchasing\Receiving\Auth\CanReceiveIntoValidator"/>
        <argument key="Rialto\Shipping\Export\AllowedCountryValidator" type="service" id="Rialto\Shipping\Export\AllowedCountryValidator"/>
        <argument key="Rialto\Stock\Item\NewSkuValidator" type="service" id="Rialto\Stock\Item\NewSkuValidator"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id="service_locator.yepb.pt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id="service_locator.w7xlwgx" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="service_locator.mojpgvr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminAutocompleteType" type="service" id="easyadmin.form.type.autocomplete"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminDividerType" type="service" id="easyadmin.form.type.divider"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminFormType" type="service" id="easyadmin.form.type"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminGroupType" type="service" id="easyadmin.form.type.group"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\EasyAdminSectionType" type="service" id="easyadmin.form.type.section"/>
        <argument key="Rialto\Cms\Web\CmsEntryType" type="service" id="Rialto\Cms\Web\CmsEntryType"/>
        <argument key="Rialto\Geography\Address\Web\AddressEntityType" type="service" id="Rialto\Geography\Address\Web\AddressEntityType"/>
        <argument key="Rialto\Madison\Feature\Web\FeatureType" type="service" id="Rialto\Madison\Feature\Web\FeatureType"/>
        <argument key="Rialto\Manufacturing\Customization\Web\CustomizationStrategyType" type="service" id="Rialto\Manufacturing\Customization\Web\CustomizationStrategyType"/>
        <argument key="Rialto\Purchasing\Invoice\Web\SupplierInvoiceItemApprovalType" type="service" id="Rialto\Purchasing\Invoice\Web\SupplierInvoiceItemApprovalType"/>
        <argument key="Rialto\Purchasing\Order\Web\CreatePurchaseOrderType" type="service" id="Rialto\Purchasing\Order\Web\CreatePurchaseOrderType"/>
        <argument key="Rialto\Purchasing\Order\Web\EditPurchaseOrderType" type="service" id="Rialto\Purchasing\Order\Web\EditPurchaseOrderType"/>
        <argument key="Rialto\Purchasing\Producer\Web\StockProducerType" type="service" id="Rialto\Purchasing\Producer\Web\StockProducerType"/>
        <argument key="Rialto\Purchasing\Receiving\Web\GoodsReceivedType" type="service" id="Rialto\Purchasing\Receiving\Web\GoodsReceivedType"/>
        <argument key="Rialto\Purchasing\Supplier\Attribute\Web\SupplierAttributeType" type="service" id="Rialto\Purchasing\Supplier\Attribute\Web\SupplierAttributeType"/>
        <argument key="Rialto\Security\User\Web\UserType" type="service" id="Rialto\Security\User\Web\UserType"/>
        <argument key="Rialto\Shipping\Shipment\Web\ShipmentOptionsType" type="service" id="Rialto\Shipping\Shipment\Web\ShipmentOptionsType"/>
        <argument key="Rialto\Stock\Bin\Web\BinUpdateAllocType" type="service" id="Rialto\Stock\Bin\Web\BinUpdateAllocType"/>
        <argument key="Rialto\Stock\Bin\Web\StockAdjustmentType" type="service" id="Rialto\Stock\Bin\Web\StockAdjustmentType"/>
        <argument key="Rialto\Stock\Item\Version\Web\ItemVersionSelectorType" type="service" id="Rialto\Stock\Item\Version\Web\ItemVersionSelectorType"/>
        <argument key="Rialto\Stock\Item\Web\EditType" type="service" id="Rialto\Stock\Item\Web\EditType"/>
        <argument key="Rialto\Stock\Item\Web\StockItemAttributeType" type="service" id="Rialto\Stock\Item\Web\StockItemAttributeType"/>
        <argument key="Rialto\Stock\Item\Web\StockItemTemplateType" type="service" id="Rialto\Stock\Item\Web\StockItemTemplateType"/>
        <argument key="Rialto\Web\Form\JsEntityType" type="service" id="Rialto\Web\Form\JsEntityType"/>
        <argument key="Rialto\Web\Form\TextEntityType" type="service" id="Rialto\Web\Form\TextEntityType"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="monolog.logger.manufacturing" class="Symfony\Bridge\Monolog\Logger">
      <argument>manufacturing</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.production"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.email" class="Symfony\Bridge\Monolog\Logger">
      <argument>email</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.email"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.automation" class="Symfony\Bridge\Monolog\Logger">
      <argument>automation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.automation"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.flash" class="Symfony\Bridge\Monolog\Logger">
      <argument>flash</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Rialto\Logging\FlashHandler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.receiving" class="Symfony\Bridge\Monolog\Logger">
      <argument>receiving</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.production"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.sales" class="Symfony\Bridge\Monolog\Logger">
      <argument>sales</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.supplier" class="Symfony\Bridge\Monolog\Logger">
      <argument>supplier</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.production"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.ups" class="Symfony\Bridge\Monolog\Logger">
      <argument>ups</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.ups"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.php"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.doctrine"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.logger.command_bus" class="Symfony\Bridge\Monolog\Logger">
      <argument>command_bus</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.sentry"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="service_locator.sr6ctxe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.request_matcher.6d27357678da78ac461e8b851ac5bf83a1f9471f9d410dff7d760712cb7770b80848bf9c" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/_profiler|_wdt/</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.request_matcher.140c098b541b37783581831795a9a5c20b93afc0ee596c2c8da2824c419dcec21a49976d" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/css</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.request_matcher.76989018a361dc0615ef8730276e7d9c95c53ff73090b6704f9522972add0565a29bdaa8" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/js</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.serializer.form_error_handler" class="FOS\RestBundle\Serializer\Normalizer\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="fos_rest.serializer.form_error_handler.inner"/>
    </service>
    <service id="tactician.middleware.doctrine.default" class="League\Tactician\Doctrine\ORM\TransactionMiddleware">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="tactician.middleware.doctrine_rollback_only.default" class="League\Tactician\Doctrine\ORM\RollbackOnlyTransactionMiddleware">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="tactician.middleware.validator" class="League\Tactician\Bundle\Middleware\ValidatorMiddleware">
      <argument type="service" id="validator"/>
    </service>
    <service id="tactician.middleware.security" class="League\Tactician\Bundle\Middleware\SecurityMiddleware">
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="tactician.commandbus.default.handler.service_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Rialto\Manufacturing\Allocation\Command\AllocateHandler" type="service" id="Rialto\Manufacturing\Allocation\Command\AllocateHandler"/>
        <argument key="Rialto\Manufacturing\PurchaseOrder\Command\OrderPartsHandler" type="service" id="Rialto\Manufacturing\PurchaseOrder\Command\OrderPartsHandler"/>
        <argument key="Rialto\Manufacturing\PurchaseOrder\Command\UserSelectManufacturerToOrderHandler" type="service" id="Rialto\Manufacturing\PurchaseOrder\Command\UserSelectManufacturerToOrderHandler"/>
        <argument key="Rialto\PcbNg\Command\CreateManufacturedStockItemPcbNgPurchasingDataHandler" type="service" id="Rialto\PcbNg\Command\CreateManufacturedStockItemPcbNgPurchasingDataHandler"/>
        <argument key="Rialto\PcbNg\Command\ProcessPcbNgEmailsHandler" type="service" id="Rialto\PcbNg\Command\ProcessPcbNgEmailsHandler"/>
        <argument key="Rialto\Purchasing\Catalog\Command\RefreshPurchasingDataStockLevelHandler" type="service" id="Rialto\Purchasing\Catalog\Command\RefreshPurchasingDataStockLevelHandler"/>
        <argument key="Rialto\Purchasing\Order\Command\MergePurchaseOrdersHandler" type="service" id="Rialto\Purchasing\Order\Command\MergePurchaseOrdersHandler"/>
        <argument key="Rialto\Sales\Order\Allocation\Command\CreateStockItemOrderHandler" type="service" id="Rialto\Sales\Order\Allocation\Command\CreateStockItemOrderHandler"/>
        <argument key="Rialto\Stock\Item\Command\RefreshStockLevelHandler" type="service" id="Rialto\Stock\Item\Command\RefreshStockLevelHandler"/>
        <argument key="Rialto\Ups\TrackingRecord\Command\UpdateTrackingRecordHandler" type="service" id="Rialto\Ups\TrackingRecord\Command\UpdateTrackingRecordHandler"/>
      </argument>
    </service>
    <service id="tactician.commandbus.default.handler.locator" class="League\Tactician\Container\ContainerLocator">
      <argument type="service" id="tactician.commandbus.default.handler.service_locator"/>
      <argument type="collection">
        <argument key="Rialto\Manufacturing\PurchaseOrder\Command\OrderPartsCommand">Rialto\Manufacturing\PurchaseOrder\Command\OrderPartsHandler</argument>
        <argument key="Rialto\Manufacturing\Allocation\Command\AllocateCommand">Rialto\Manufacturing\Allocation\Command\AllocateHandler</argument>
        <argument key="Rialto\Manufacturing\PurchaseOrder\Command\UserSelectManufacturerToOrderCommand">Rialto\Manufacturing\PurchaseOrder\Command\UserSelectManufacturerToOrderHandler</argument>
        <argument key="Rialto\PcbNg\Command\CreateManufacturedStockItemPcbNgPurchasingDataCommand">Rialto\PcbNg\Command\CreateManufacturedStockItemPcbNgPurchasingDataHandler</argument>
        <argument key="Rialto\PcbNg\Command\ProcessPcbNgEmailsCommand">Rialto\PcbNg\Command\ProcessPcbNgEmailsHandler</argument>
        <argument key="Rialto\Purchasing\Catalog\Command\RefreshPurchasingDataStockLevelCommand">Rialto\Purchasing\Catalog\Command\RefreshPurchasingDataStockLevelHandler</argument>
        <argument key="Rialto\Purchasing\Order\Command\MergePurchaseOrdersCommand">Rialto\Purchasing\Order\Command\MergePurchaseOrdersHandler</argument>
        <argument key="Rialto\Sales\Order\Allocation\Command\CreateStockItemOrderCommand">Rialto\Sales\Order\Allocation\Command\CreateStockItemOrderHandler</argument>
        <argument key="Rialto\Stock\Item\Command\RefreshStockLevelCommand">Rialto\Stock\Item\Command\RefreshStockLevelHandler</argument>
        <argument key="Rialto\Ups\TrackingRecord\Command\UpdateTrackingRecordCommand">Rialto\Ups\TrackingRecord\Command\UpdateTrackingRecordHandler</argument>
      </argument>
    </service>
    <service id="tactician.commandbus.default.middleware.command_handler" class="League\Tactician\Handler\CommandHandlerMiddleware">
      <argument type="service" id="tactician.handler.command_name_extractor.class_name"/>
      <argument type="service" id="tactician.commandbus.default.handler.locator"/>
      <argument type="service" id="tactician.handler.method_name_inflector.handle"/>
    </service>
    <service id="tactician.commandbus.default" class="League\Tactician\CommandBus" public="true">
      <argument type="collection">
        <argument type="service" id="Infrastructure\CommandBus\LogCommandMiddleware"/>
        <argument type="service" id="Infrastructure\CommandBus\DispatchRecordedEventsMiddleware"/>
        <argument type="service" id="tactician.middleware.locking"/>
        <argument type="service" id="tactician.middleware.doctrine_rollback_only.default"/>
        <argument type="service" id="tactician.commandbus.default.middleware.command_handler"/>
      </argument>
    </service>
    <service id="service_locator.yscbjmj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="templating" type="service" id="templating.engine.twig" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.yscbjmj.Rialto\Accounting\Bank\Transfer\BankTransferController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>Rialto\Accounting\Bank\Transfer\BankTransferController</argument>
      <argument type="service" id="service_container"/>
      <factory service="service_locator.yscbjmj" method="withContext"/>
    </service>
    <service id="service_locator.yscbjmj.Rialto\Supplier\Allocation\Web\BinAllocationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>Rialto\Supplier\Allocation\Web\BinAllocationController</argument>
      <argument type="service" id="service_container"/>
      <factory service="service_locator.yscbjmj" method="withContext"/>
    </service>
    <service id="service_locator.s.m3yzc" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id="service_locator.s.m3yzc.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service="service_locator.s.m3yzc" method="withContext"/>
    </service>
    <service id="service_locator.lluwcxp" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id="service_locator.lluwcxp.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service="service_locator.lluwcxp" method="withContext"/>
    </service>
    <service id="service_locator.c7_qahl" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id="service_locator.c7_qahl.twig.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>twig.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service="service_locator.c7_qahl" method="withContext"/>
    </service>
    <service id="service_locator.2m3e4be" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id="service_locator.2m3e4be.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service="service_locator.2m3e4be" method="withContext"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="argument_resolver.request_attribute"/>
        <argument type="service" id="argument_resolver.request"/>
        <argument type="service" id="argument_resolver.session"/>
        <argument type="service" id="security.user_value_resolver"/>
        <argument type="service" id="argument_resolver.service"/>
        <argument type="service" id="argument_resolver.default"/>
        <argument type="service" id="argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.access.authenticated_voter"/>
        <argument type="service" id="security.access.role_hierarchy_voter"/>
        <argument type="service" id="security.access.expression_voter"/>
        <argument type="service" id="Rialto\Manufacturing\BuildFiles\PcbBuildFileVoter"/>
        <argument type="service" id="Rialto\Purchasing\Order\PurchaseOrderVoter"/>
        <argument type="service" id="Rialto\Purchasing\Order\StockItemVoter"/>
        <argument type="service" id="Rialto\Purchasing\Producer\StockProducerVoter"/>
        <argument type="service" id="Rialto\Purchasing\Receiving\Auth\ReceiveIntoVoter"/>
        <argument type="service" id="Rialto\Security\User\UserVoter"/>
        <argument type="service" id="Rialto\Task\TaskVoter"/>
        <argument type="service" id="Rialto\Stock\Bin\StockBinVoter"/>
        <argument type="service" id="Rialto\Stock\Count\StockCountVoter"/>
        <argument type="service" id="Rialto\Summary\Menu\SummaryVoter"/>
        <argument type="service" id="Rialto\Supplier\SupplierVoter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="fos_rest.serializer.form_error_handler.inner" class="JMS\Serializer\Handler\FormErrorHandler" public="false">
      <argument type="service" id="translator.logging" on-invalid="null"/>
      <argument>validators</argument>
    </service>
    <service id="autowired.Rialto\Purchasing\Supplier\Supplier" class="Rialto\Purchasing\Supplier\Supplier" public="false" autowire="true"/>
    <service id="autowired.Gumstix\GeographyBundle\Service\AddressFormatter" class="Gumstix\GeographyBundle\Service\AddressFormatter" public="false" autowire="true"/>
    <service id="autowired.Rialto\Accounting\Bank\Transfer\BankTransfer" class="Rialto\Accounting\Bank\Transfer\BankTransfer" public="false" autowire="true"/>
    <service id="autowired.Rialto\Stock\Item\PurchasedStockItem" class="Rialto\Stock\Item\PurchasedStockItem" public="false" autowire="true"/>
    <service id="autowired.Rialto\Stock\Item\ManufacturedStockItem" class="Rialto\Stock\Item\ManufacturedStockItem" public="false" autowire="true"/>
    <service id="autowired.Rialto\Purchasing\Invoice\SupplierInvoice" class="Rialto\Purchasing\Invoice\SupplierInvoice" public="false" autowire="true">
      <argument type="service" id="autowired.Rialto\Purchasing\Supplier\Supplier"/>
    </service>
    <service id="autowired.Rialto\Purchasing\Invoice\SupplierInvoiceItem" class="Rialto\Purchasing\Invoice\SupplierInvoiceItem" public="false" autowire="true"/>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id="service_locator.yzlltau"/>
      <argument type="collection">
        <argument key="purchasing:push-module-manufacturers">Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand</argument>
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="debug:swiftmailer">swiftmailer.command.debug</argument>
        <argument key="swiftmailer:email:send">swiftmailer.command.new_email</argument>
        <argument key="swiftmailer:spool:send">swiftmailer.command.send_email</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:generate:entities">doctrine.generate_entities_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="jms-job-queue:clean-up">jms_job_queue.command.clean_up</argument>
        <argument key="jms-job-queue:mark-incomplete">jms_job_queue.command.mark_job_incomplete</argument>
        <argument key="jms-job-queue:run">jms_job_queue.command.run</argument>
        <argument key="jms-job-queue:schedule">jms_job_queue.command.schedule</argument>
        <argument key="fos:js-routing:dump">fos_js_routing.dump_command</argument>
        <argument key="fos:js-routing:debug">fos_js_routing.router_debug_exposed_command</argument>
      </argument>
    </service>
    <service id="service_locator.yzlltau" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand" type="service" id="Rialto\Purchasing\Manufacturer\Cli\BulkPushModuleManufacturersConsoleCommand"/>
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.generate_entities_command" type="service" id="doctrine.generate_entities_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="fos_js_routing.dump_command" type="service" id="fos_js_routing.dump_command"/>
        <argument key="fos_js_routing.router_debug_exposed_command" type="service" id="fos_js_routing.router_debug_exposed_command"/>
        <argument key="jms_job_queue.command.clean_up" type="service" id="jms_job_queue.command.clean_up"/>
        <argument key="jms_job_queue.command.mark_job_incomplete" type="service" id="jms_job_queue.command.mark_job_incomplete"/>
        <argument key="jms_job_queue.command.run" type="service" id="jms_job_queue.command.run"/>
        <argument key="jms_job_queue.command.schedule" type="service" id="jms_job_queue.command.schedule"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="swiftmailer.command.debug" type="service" id="swiftmailer.command.debug"/>
        <argument key="swiftmailer.command.new_email" type="service" id="swiftmailer.command.new_email"/>
        <argument key="swiftmailer.command.send_email" type="service" id="swiftmailer.command.send_email"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
      </argument>
    </service>
    <service id="service_locator.sng9lji" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="JMS\Serializer\Twig\SerializerRuntimeHelper" type="service" id="jms_serializer.twig_extension.serializer_runtime_helper"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="service_locator.orfjtul" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service" id="jms_serializer.doctrine_proxy_subscriber"/>
        <argument key="jms_serializer.stopwatch_subscriber" type="service" id="jms_serializer.stopwatch_subscriber"/>
      </argument>
    </service>
    <service id="service_locator.w_ccqsm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fos_rest.serializer.exception_normalizer.jms" type="service" id="fos_rest.serializer.exception_normalizer.jms"/>
        <argument key="fos_rest.serializer.form_error_handler" type="service" id="fos_rest.serializer.form_error_handler"/>
        <argument key="jms_serializer.array_collection_handler" type="service" id="jms_serializer.array_collection_handler"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service" id="jms_serializer.constraint_violation_handler"/>
        <argument key="jms_serializer.datetime_handler" type="service" id="jms_serializer.datetime_handler"/>
        <argument key="jms_serializer.php_collection_handler" type="service" id="jms_serializer.php_collection_handler"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Doctrine\ORM\EntityManager" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="Doctrine\Common\Persistence\ObjectManager" alias="Rialto\Database\Orm\ErpDbManager" public="true"/>
    <service id="Rialto\Database\Orm\DbManager" alias="Rialto\Database\Orm\ErpDbManager" public="true"/>
    <service id="Rialto\Database\Orm\DoctrineDbManager" alias="Rialto\Database\Orm\ErpDbManager" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="Rialto\Email\MailerInterface" alias="Rialto\Email\Mailer" public="true"/>
    <service id="Rialto\Panelization\Layout\Layout" alias="Rialto\Panelization\Layout\TopToBottomLayout" public="true"/>
    <service id="Rialto\Payment\PaymentGateway" alias="Rialto\Payment\AuthorizeNet" public="true"/>
    <service id="Rialto\Printing\Printer\PrintServer" alias="Rialto\Printing\Printer\PrinterRepo" public="true"/>
    <service id="Rialto\Shipping\Shipment\ShipmentFactory" alias="Rialto\Shipping\Shipment\DelegatingShipmentFactory" public="true"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="true"/>
    <service id="JMS\Serializer\SerializerInterface" alias="jms_serializer.serializer" public="true"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="true"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator" public="true"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Session" alias="session" public="true"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="true"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="true"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="true"/>
    <service id="Twig_Environment" alias="twig" public="true"/>
    <service id="Symfony\Component\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="Rialto\Tax\TaxLookup" alias="Rialto\Tax\TaxJarLookup" public="true"/>
    <service id="Gumstix\SSO\Service\CredentialStorage" alias="Gumstix\SSO\Service\FileCredentialStorage"/>
    <service id="swiftmailer.mailer.transport.fake_transport" alias="Rialto\Email\FakeTransport"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.logging" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="templating.loader" alias="templating.loader.filesystem" public="true"/>
    <service id="templating" alias="templating.engine.twig" public="true"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator" public="false"/>
    <service id="translator" alias="translator.logging" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="cache.default_redis_provider" alias="cache_connection.gd_mszc" public="false"/>
    <service id="cache.default_memcached_provider" alias="cache_connection.jke6kex" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer" public="false"/>
    <service id="serializer.property_accessor" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.user.provider.concrete.by_uuid_provider" alias="Rialto\Security\Firewall\ByUuidProvider" public="false"/>
    <service id="security.user.provider.concrete.by_username_provider" alias="Rialto\Security\Firewall\ByUsernameProvider" public="false"/>
    <service id="security.user.provider.concrete.magento2_provider" alias="Rialto\Magento2\Firewall\StorefrontUserProvider" public="false"/>
    <service id="security.user.provider.concrete.shopify_provider" alias="Rialto\Shopify\Webhook\ShopifyUserProvider" public="false"/>
    <service id="security.authentication.session_strategy.shopify_webhook" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.shopify_webhook" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.magento2_oauth_callback" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.magento2_oauth_callback" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.api" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.api" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="monolog.handler.flash" alias="Rialto\Logging\FlashHandler"/>
    <service id="swiftmailer.mailer.default.transport" alias="Rialto\Email\FakeTransport" public="true"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="Rialto\Email\FakeTransport" public="true"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="Rialto\Email\FakeTransport" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default" public="true"/>
    <service id="craue.form.flow.storage" alias="craue.form.flow.storage_default" public="true"/>
    <service id="craue.form.flow.data_manager" alias="craue.form.flow.data_manager_default"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Symfony\Bridge\Doctrine\RegistryInterface" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache" public="true"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache" public="true"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache" public="true"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="easy_admin.property_accessor" alias="property_accessor" public="true"/>
    <service id="jms_serializer.metadata_driver" alias="jms_serializer.metadata.doctrine_type_driver" public="true"/>
    <service id="jms_serializer.metadata.cache" alias="" public="false"/>
    <service id="jms_serializer.naming_strategy" alias="jms_serializer.serialized_name_annotation_strategy" public="false"/>
    <service id="jms_serializer.object_constructor" alias="jms_serializer.doctrine_object_constructor" public="true"/>
    <service id="jms_serializer.deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory" public="true"/>
    <service id="jms_serializer.serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory" public="true"/>
    <service id="jms_serializer" alias="jms_serializer.serializer" public="true"/>
    <service id="JMS\Serializer\ArrayTransformerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="jms_serializer.accessor_strategy" alias="jms_serializer.accessor_strategy.expression"/>
    <service id="FOS\RestBundle\View\ViewHandlerInterface" alias="fos_rest.view_handler.default"/>
    <service id="FOS\RestBundle\Request\ParamFetcherInterface" alias="fos_rest.request.param_fetcher"/>
    <service id="fos_rest.serializer" alias="fos_rest.serializer.symfony"/>
    <service id="fos_rest.view_handler" alias="Rialto\Web\Serializer\ViewHandler" public="true"/>
    <service id="fos_rest.router" alias="router.default"/>
    <service id="fos_rest.templating" alias="templating.engine.twig"/>
    <service id="fos_rest.inflector" alias="fos_rest.inflector.doctrine"/>
    <service id="fos_js_routing.router" alias="router.default" public="false"/>
    <service id="nelmio_security.external_redirect.target_validator" alias="nelmio_security.external_redirect.target_validator.whitelist"/>
    <service id="gumstix_rest.access_denied_handler" alias="Gumstix\RestBundle\Handler\AccessDeniedHandler"/>
    <service id="gumstix_rest.form_error_normalizer" alias="Gumstix\RestBundle\Serializer\FormErrorNormalizer"/>
    <service id="gumstix_sso.credential_storage" alias="Gumstix\SSO\Service\FileCredentialStorage"/>
    <service id="gumstix_sso.credential_storage_file" alias="Gumstix\SSO\Service\FileCredentialStorage"/>
    <service id="gumstix_sso.credential_storage_database" alias="Gumstix\SSOBundle\Service\DoctrineCredentialStorage"/>
    <service id="gumstix_sso.sso_factory" alias="Gumstix\SSOBundle\Service\SingleSignOnFactory"/>
    <service id="gumstix_sso.sso" alias="Gumstix\SSO\Service\SingleSignOn"/>
    <service id="gumstix_sso.cookie_auth" alias="Gumstix\SSOBundle\Security\CookieAuthenticator"/>
    <service id="gumstix_sso.header_auth" alias="Gumstix\SSOBundle\Security\HeaderAuthenticator"/>
    <service id="gumstix_sso.login_auth" alias="Gumstix\SSOBundle\Security\LoginAuthenticator"/>
    <service id="gumstix_sso.logout_service" alias="Gumstix\SSOBundle\Service\LogoutService"/>
    <service id="gumstix_sso.twig_extension" alias="Gumstix\SSOBundle\Twig\SSOExtension"/>
    <service id="gumstix_sso.http_client_factory" alias="Gumstix\SSOBundle\Service\HttpClientFactory"/>
    <service id="Symfony\WebpackEncoreBundle\Asset\EntrypointLookupCollectionInterface" alias="webpack_encore.entrypoint_lookup_collection" public="false"/>
    <service id="Symfony\WebpackEncoreBundle\Asset\EntrypointLookupInterface" alias="webpack_encore.entrypoint_lookup[_default]"/>
    <service id="Symfony\Bundle\FrameworkBundle\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="twig.loader" alias="twig.loader.chain"/>
    <service id="tactician.middleware.doctrine" alias="tactician.middleware.doctrine.default"/>
    <service id="tactician.middleware.doctrine_rollback_only" alias="tactician.middleware.doctrine_rollback_only.default"/>
    <service id="tactician.commandbus" alias="tactician.commandbus.default"/>
    <service id="League\Tactician\CommandBus" alias="tactician.commandbus.default"/>
    <service id="tactician.handler.locator.symfony" alias="tactician.commandbus.default.handler.locator"/>
    <service id="tactician.middleware.command_handler" alias="tactician.commandbus.default.middleware.command_handler"/>
    <service id="service_locator._fpuy7b" alias="2_ServiceLocator~onbzduz" public="false"/>
    <service id="service_locator.ml7rum7" alias="1_ServiceLocator~wgf8gq9" public="false"/>
    <service id="service_locator.mg0s446" alias="1_ServiceLocator~rwjfjl2" public="false"/>
    <service id="service_locator.sfwl3zd" alias="tactician.commandbus.default.handler.service_locator" public="false"/>
    <service id="translator.logging.inner" alias="translator.default" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="jms_serializer.form_error_handler" alias="fos_rest.serializer.form_error_handler" public="true"/>
    <service id="console.command.rialto_accounting_paymenttransaction_cli_recalculatesettled" alias="Rialto\Accounting\PaymentTransaction\Cli\RecalculateSettled" public="true"/>
    <service id="console.command.rialto_allocation_cli_deleteinvalidallocationscommand" alias="Rialto\Allocation\Cli\DeleteInvalidAllocationsCommand" public="true"/>
    <service id="console.command.rialto_allocation_cli_deletestockbinallocationscommand" alias="Rialto\Allocation\Cli\DeleteStockBinAllocationsCommand" public="true"/>
    <service id="console.command.rialto_logging_cli_recreatemongologscommand" alias="Rialto\Logging\Cli\RecreateMongoLogsCommand" public="true"/>
    <service id="console.command.rialto_magento2_stock_cli_syncstocklevelscommand" alias="Rialto\Magento2\Stock\Cli\SyncStockLevelsCommand" public="true"/>
    <service id="console.command.rialto_magento2_order_cli_syncorderscommand" alias="Rialto\Magento2\Order\Cli\SyncOrdersCommand" public="true"/>
    <service id="console.command.rialto_manufacturing_customization_cli_validatesubstitutionscommand" alias="Rialto\Manufacturing\Customization\Cli\ValidateSubstitutionsCommand" public="true"/>
    <service id="console.command.rialto_manufacturing_kit_reminder_sendemailcommand" alias="Rialto\Manufacturing\Kit\Reminder\SendEmailCommand" public="true"/>
    <service id="console.command.rialto_manufacturing_workorder_cli_autobuildcommand" alias="Rialto\Manufacturing\WorkOrder\Cli\AutoBuildCommand" public="true"/>
    <service id="console.command.rialto_manufacturing_task_cli_taskscommand" alias="Rialto\Manufacturing\Task\Cli\TasksCommand" public="true"/>
    <service id="console.command.rialto_manufacturing_task_cli_refreshproductiontaskscommand" alias="Rialto\Manufacturing\Task\Cli\RefreshProductionTasksCommand" public="true"/>
    <service id="console.command.rialto_manufacturing_task_cli_productiontaskremindercommand" alias="Rialto\Manufacturing\Task\Cli\ProductionTaskReminderCommand" public="true"/>
    <service id="console.command.rialto_manufacturing_task_cli_jobscommand" alias="Rialto\Manufacturing\Task\Cli\JobsCommand" public="true"/>
    <service id="console.command.rialto_payment_sweep_cli_sweepcardtransactionscommand" alias="Rialto\Payment\Sweep\Cli\SweepCardTransactionsCommand" public="true"/>
    <service id="console.command.rialto_printing_job_cli_flushprintqueue" alias="Rialto\Printing\Job\Cli\FlushPrintQueue" public="true"/>
    <service id="console.command.rialto_printing_job_cli_deletecompletedprintjobs" alias="Rialto\Printing\Job\Cli\DeleteCompletedPrintJobs" public="true"/>
    <service id="console.command.rialto_printing_printer_cli_devprintserver" alias="Rialto\Printing\Printer\Cli\DevPrintServer" public="true"/>
    <service id="console.command.rialto_purchasing_invoice_reader_email_cli_autoimportinvoices" alias="Rialto\Purchasing\Invoice\Reader\Email\Cli\AutoImportInvoices" public="true"/>
    <service id="console.command.rialto_purchasing_invoice_cli_finduninvoicedorders" alias="Rialto\Purchasing\Invoice\Cli\FindUninvoicedOrders" public="true"/>
    <service id="console.command.rialto_purchasing_recurring_cli_autoinvoicecommand" alias="Rialto\Purchasing\Recurring\Cli\AutoInvoiceCommand" public="true"/>
    <service id="console.command.rialto_purchasing_order_cli_autoordercommand" alias="Rialto\Purchasing\Order\Cli\AutoOrderCommand" public="true"/>
    <service id="console.command.rialto_purchasing_receiving_notify_testxmppcommand" alias="Rialto\Purchasing\Receiving\Notify\TestXmppCommand" public="true"/>
    <service id="console.command.rialto_sales_order_dates_inittargetdatecommand" alias="Rialto\Sales\Order\Dates\InitTargetDateCommand" public="true"/>
    <service id="console.command.rialto_security_user_cli_createusercommand" alias="Rialto\Security\User\Cli\CreateUserCommand" public="true"/>
    <service id="console.command.rialto_security_user_cli_promoteusercommand" alias="Rialto\Security\User\Cli\PromoteUserCommand" public="true"/>
    <service id="console.command.rialto_security_user_cli_adduuidcommand" alias="Rialto\Security\User\Cli\AddUuidCommand" public="true"/>
    <service id="console.command.rialto_shopify_webhook_cli_webhookcustomcommand" alias="Rialto\Shopify\Webhook\Cli\WebhookCustomCommand" public="true"/>
    <service id="console.command.rialto_stock_item_cli_bulksetdefaultworkordercommand" alias="Rialto\Stock\Item\Cli\BulkSetDefaultWorkOrderCommand" public="true"/>
    <service id="console.command.rialto_stock_level_cli_stocklevelsynccommand" alias="Rialto\Stock\Level\Cli\StockLevelSyncCommand" public="true"/>
    <service id="console.command.rialto_stock_returns_cli_generatemissingadjustmentglrecordscommand" alias="Rialto\Stock\Returns\Cli\GenerateMissingAdjustmentGlRecordsCommand" public="true"/>
    <service id="console.command.rialto_tax_regime_cli_loadtaxregimescommand" alias="Rialto\Tax\Regime\Cli\LoadTaxRegimesCommand" public="true"/>
    <service id="console.command.rialto_port_commandbus_handlecommandconsolecommand" alias="Rialto\Port\CommandBus\HandleCommandConsoleCommand" public="true"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_containscommand" alias="doctrine_cache.contains_command" public="true"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_deletecommand" alias="doctrine_cache.delete_command" public="true"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_flushcommand" alias="doctrine_cache.flush_command" public="true"/>
    <service id="console.command.doctrine_bundle_doctrinecachebundle_command_statscommand" alias="doctrine_cache.stats_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsdiffdoctrinecommand" alias="doctrine_migrations.diff_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsexecutedoctrinecommand" alias="doctrine_migrations.execute_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsgeneratedoctrinecommand" alias="doctrine_migrations.generate_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationslatestdoctrinecommand" alias="doctrine_migrations.latest_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsmigratedoctrinecommand" alias="doctrine_migrations.migrate_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsstatusdoctrinecommand" alias="doctrine_migrations.status_command" public="true"/>
    <service id="console.command.doctrine_bundle_migrationsbundle_command_migrationsversiondoctrinecommand" alias="doctrine_migrations.version_command" public="true"/>
    <service id="console.command.league_tactician_bundle_command_debugcommand" alias="tactician.command.debug" public="true"/>
    <service id="console.command.gumstix_ssobundle_command_setupcommand" alias="Gumstix\SSOBundle\Command\SetupCommand" public="true"/>
    <service id="fos_rest.serializer.jms_handler_registry" alias="jms_serializer.handler_registry" public="true"/>
  </services>
</container>
