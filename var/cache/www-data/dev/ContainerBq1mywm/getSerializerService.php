<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'serializer' shared service.

return $this->services['serializer'] = new \Symfony\Component\Serializer\Serializer([0 => new \Rialto\Web\Serializer\DateTimeNormalizer(), 1 => ${($_ = isset($this->services['Gumstix\\RestBundle\\Serializer\\FormErrorNormalizer']) ? $this->services['Gumstix\\RestBundle\\Serializer\\FormErrorNormalizer'] : ($this->services['Gumstix\\RestBundle\\Serializer\\FormErrorNormalizer'] = new \Gumstix\RestBundle\Serializer\FormErrorNormalizer())) && false ?: '_'}, 2 => new \FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer(), 3 => new \FOS\RestBundle\Serializer\Normalizer\ExceptionNormalizer(${($_ = isset($this->services['fos_rest.exception.messages_map']) ? $this->services['fos_rest.exception.messages_map'] : ($this->services['fos_rest.exception.messages_map'] = new \FOS\RestBundle\Util\ExceptionValueMap([]))) && false ?: '_'}, true), 4 => new \Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer(), 5 => new \Symfony\Component\Serializer\Normalizer\DateTimeNormalizer(), 6 => new \Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer(), 7 => new \Symfony\Component\Serializer\Normalizer\DataUriNormalizer(), 8 => new \Symfony\Component\Serializer\Normalizer\ArrayDenormalizer(), 9 => new \Symfony\Component\Serializer\Normalizer\ObjectNormalizer(new \Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory(new \Symfony\Component\Serializer\Mapping\Loader\LoaderChain([]), NULL), NULL, ${($_ = isset($this->services['property_accessor']) ? $this->services['property_accessor'] : $this->getPropertyAccessorService()) && false ?: '_'}, NULL)], [0 => new \Symfony\Component\Serializer\Encoder\XmlEncoder(), 1 => new \Symfony\Component\Serializer\Encoder\JsonEncoder(), 2 => new \Symfony\Component\Serializer\Encoder\YamlEncoder(), 3 => new \Symfony\Component\Serializer\Encoder\CsvEncoder()]);
