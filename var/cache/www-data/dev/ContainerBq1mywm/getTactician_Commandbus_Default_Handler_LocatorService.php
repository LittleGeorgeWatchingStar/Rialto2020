<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'tactician.commandbus.default.handler.locator' shared service.

return $this->services['tactician.commandbus.default.handler.locator'] = new \League\Tactician\Container\ContainerLocator(new \Symfony\Component\DependencyInjection\ServiceLocator(['Rialto\\Manufacturing\\Allocation\\Command\\AllocateHandler' => function () {
    return ${($_ = isset($this->services['Rialto\\Manufacturing\\Allocation\\Command\\AllocateHandler']) ? $this->services['Rialto\\Manufacturing\\Allocation\\Command\\AllocateHandler'] : $this->load('getAllocateHandlerService.php')) && false ?: '_'};
}, 'Rialto\\Manufacturing\\PurchaseOrder\\Command\\OrderPartsHandler' => function () {
    return ${($_ = isset($this->services['Rialto\\Manufacturing\\PurchaseOrder\\Command\\OrderPartsHandler']) ? $this->services['Rialto\\Manufacturing\\PurchaseOrder\\Command\\OrderPartsHandler'] : $this->load('getOrderPartsHandlerService.php')) && false ?: '_'};
}, 'Rialto\\Manufacturing\\PurchaseOrder\\Command\\UserSelectManufacturerToOrderHandler' => function () {
    return ${($_ = isset($this->services['Rialto\\Manufacturing\\PurchaseOrder\\Command\\UserSelectManufacturerToOrderHandler']) ? $this->services['Rialto\\Manufacturing\\PurchaseOrder\\Command\\UserSelectManufacturerToOrderHandler'] : $this->load('getUserSelectManufacturerToOrderHandlerService.php')) && false ?: '_'};
}, 'Rialto\\PcbNg\\Command\\CreateManufacturedStockItemPcbNgPurchasingDataHandler' => function () {
    return ${($_ = isset($this->services['Rialto\\PcbNg\\Command\\CreateManufacturedStockItemPcbNgPurchasingDataHandler']) ? $this->services['Rialto\\PcbNg\\Command\\CreateManufacturedStockItemPcbNgPurchasingDataHandler'] : $this->load('getCreateManufacturedStockItemPcbNgPurchasingDataHandlerService.php')) && false ?: '_'};
}, 'Rialto\\PcbNg\\Command\\ProcessPcbNgEmailsHandler' => function () {
    return ${($_ = isset($this->services['Rialto\\PcbNg\\Command\\ProcessPcbNgEmailsHandler']) ? $this->services['Rialto\\PcbNg\\Command\\ProcessPcbNgEmailsHandler'] : $this->load('getProcessPcbNgEmailsHandlerService.php')) && false ?: '_'};
}, 'Rialto\\Purchasing\\Catalog\\Command\\RefreshPurchasingDataStockLevelHandler' => function () {
    return ${($_ = isset($this->services['Rialto\\Purchasing\\Catalog\\Command\\RefreshPurchasingDataStockLevelHandler']) ? $this->services['Rialto\\Purchasing\\Catalog\\Command\\RefreshPurchasingDataStockLevelHandler'] : $this->load('getRefreshPurchasingDataStockLevelHandlerService.php')) && false ?: '_'};
}, 'Rialto\\Purchasing\\Order\\Command\\MergePurchaseOrdersHandler' => function () {
    return ${($_ = isset($this->services['Rialto\\Purchasing\\Order\\Command\\MergePurchaseOrdersHandler']) ? $this->services['Rialto\\Purchasing\\Order\\Command\\MergePurchaseOrdersHandler'] : $this->load('getMergePurchaseOrdersHandlerService.php')) && false ?: '_'};
}, 'Rialto\\Sales\\Order\\Allocation\\Command\\CreateStockItemOrderHandler' => function () {
    return ${($_ = isset($this->services['Rialto\\Sales\\Order\\Allocation\\Command\\CreateStockItemOrderHandler']) ? $this->services['Rialto\\Sales\\Order\\Allocation\\Command\\CreateStockItemOrderHandler'] : $this->load('getCreateStockItemOrderHandlerService.php')) && false ?: '_'};
}, 'Rialto\\Stock\\Item\\Command\\RefreshStockLevelHandler' => function () {
    return ${($_ = isset($this->services['Rialto\\Stock\\Item\\Command\\RefreshStockLevelHandler']) ? $this->services['Rialto\\Stock\\Item\\Command\\RefreshStockLevelHandler'] : $this->load('getRefreshStockLevelHandlerService.php')) && false ?: '_'};
}, 'Rialto\\Ups\\TrackingRecord\\Command\\UpdateTrackingRecordHandler' => function () {
    return ${($_ = isset($this->services['Rialto\\Ups\\TrackingRecord\\Command\\UpdateTrackingRecordHandler']) ? $this->services['Rialto\\Ups\\TrackingRecord\\Command\\UpdateTrackingRecordHandler'] : $this->load('getUpdateTrackingRecordHandlerService.php')) && false ?: '_'};
}]), ['Rialto\\Manufacturing\\PurchaseOrder\\Command\\OrderPartsCommand' => 'Rialto\\Manufacturing\\PurchaseOrder\\Command\\OrderPartsHandler', 'Rialto\\Manufacturing\\Allocation\\Command\\AllocateCommand' => 'Rialto\\Manufacturing\\Allocation\\Command\\AllocateHandler', 'Rialto\\Manufacturing\\PurchaseOrder\\Command\\UserSelectManufacturerToOrderCommand' => 'Rialto\\Manufacturing\\PurchaseOrder\\Command\\UserSelectManufacturerToOrderHandler', 'Rialto\\PcbNg\\Command\\CreateManufacturedStockItemPcbNgPurchasingDataCommand' => 'Rialto\\PcbNg\\Command\\CreateManufacturedStockItemPcbNgPurchasingDataHandler', 'Rialto\\PcbNg\\Command\\ProcessPcbNgEmailsCommand' => 'Rialto\\PcbNg\\Command\\ProcessPcbNgEmailsHandler', 'Rialto\\Purchasing\\Catalog\\Command\\RefreshPurchasingDataStockLevelCommand' => 'Rialto\\Purchasing\\Catalog\\Command\\RefreshPurchasingDataStockLevelHandler', 'Rialto\\Purchasing\\Order\\Command\\MergePurchaseOrdersCommand' => 'Rialto\\Purchasing\\Order\\Command\\MergePurchaseOrdersHandler', 'Rialto\\Sales\\Order\\Allocation\\Command\\CreateStockItemOrderCommand' => 'Rialto\\Sales\\Order\\Allocation\\Command\\CreateStockItemOrderHandler', 'Rialto\\Stock\\Item\\Command\\RefreshStockLevelCommand' => 'Rialto\\Stock\\Item\\Command\\RefreshStockLevelHandler', 'Rialto\\Ups\\TrackingRecord\\Command\\UpdateTrackingRecordCommand' => 'Rialto\\Ups\\TrackingRecord\\Command\\UpdateTrackingRecordHandler']);
