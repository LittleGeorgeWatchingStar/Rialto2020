<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'tactician.commandbus.default' shared service.

return $this->services['tactician.commandbus.default'] = new \League\Tactician\CommandBus([0 => new \Infrastructure\CommandBus\LogCommandMiddleware(${($_ = isset($this->services['monolog.logger.automation']) ? $this->services['monolog.logger.automation'] : $this->load('getMonolog_Logger_AutomationService.php')) && false ?: '_'}, ${($_ = isset($this->services['serializer']) ? $this->services['serializer'] : $this->load('getSerializerService.php')) && false ?: '_'}, ${($_ = isset($this->services['Rialto\\Security\\User\\UserManager']) ? $this->services['Rialto\\Security\\User\\UserManager'] : $this->getUserManagerService()) && false ?: '_'}), 1 => new \Infrastructure\CommandBus\DispatchRecordedEventsMiddleware(new \Infrastructure\EventDispatcher\SimpleEventRecorder(), ${($_ = isset($this->services['debug.event_dispatcher']) ? $this->services['debug.event_dispatcher'] : $this->getDebug_EventDispatcherService()) && false ?: '_'}), 2 => ${($_ = isset($this->services['tactician.middleware.locking']) ? $this->services['tactician.middleware.locking'] : ($this->services['tactician.middleware.locking'] = new \League\Tactician\Plugins\LockingMiddleware())) && false ?: '_'}, 3 => ${($_ = isset($this->services['tactician.middleware.doctrine_rollback_only.default']) ? $this->services['tactician.middleware.doctrine_rollback_only.default'] : $this->load('getTactician_Middleware_DoctrineRollbackOnly_DefaultService.php')) && false ?: '_'}, 4 => ${($_ = isset($this->services['tactician.commandbus.default.middleware.command_handler']) ? $this->services['tactician.commandbus.default.middleware.command_handler'] : $this->load('getTactician_Commandbus_Default_Middleware_CommandHandlerService.php')) && false ?: '_'}]);
