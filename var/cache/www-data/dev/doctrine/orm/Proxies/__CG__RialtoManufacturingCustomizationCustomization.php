<?php

namespace Proxies\__CG__\Rialto\Manufacturing\Customization;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Customization extends \Rialto\Manufacturing\Customization\Customization implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Rialto\\Manufacturing\\Customization\\Customization' . "\0" . 'id', '' . "\0" . 'Rialto\\Manufacturing\\Customization\\Customization' . "\0" . 'name', '' . "\0" . 'Rialto\\Manufacturing\\Customization\\Customization' . "\0" . 'stockCodePattern', '' . "\0" . 'Rialto\\Manufacturing\\Customization\\Customization' . "\0" . 'strategies', '' . "\0" . 'Rialto\\Manufacturing\\Customization\\Customization' . "\0" . 'substitutions'];
        }

        return ['__isInitialized__', '' . "\0" . 'Rialto\\Manufacturing\\Customization\\Customization' . "\0" . 'id', '' . "\0" . 'Rialto\\Manufacturing\\Customization\\Customization' . "\0" . 'name', '' . "\0" . 'Rialto\\Manufacturing\\Customization\\Customization' . "\0" . 'stockCodePattern', '' . "\0" . 'Rialto\\Manufacturing\\Customization\\Customization' . "\0" . 'strategies', '' . "\0" . 'Rialto\\Manufacturing\\Customization\\Customization' . "\0" . 'substitutions'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Customization $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubstitutions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubstitutions', []);

        return parent::getSubstitutions();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubstitution(\Rialto\Manufacturing\Customization\Substitution $sub)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubstitution', [$sub]);

        return parent::addSubstitution($sub);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubstitution(\Rialto\Manufacturing\Customization\Substitution $sub)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubstitution', [$sub]);

        return parent::removeSubstitution($sub);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceAdjustment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceAdjustment', []);

        return parent::getPriceAdjustment();
    }

    /**
     * {@inheritDoc}
     */
    public function setStockCodePattern($pattern)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStockCodePattern', [$pattern]);

        return parent::setStockCodePattern($pattern);
    }

    /**
     * {@inheritDoc}
     */
    public function getStockCodePattern()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockCodePattern', []);

        return parent::getStockCodePattern();
    }

    /**
     * {@inheritDoc}
     */
    public function equals(\Rialto\Manufacturing\Customization\Customization $other = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'equals', [$other]);

        return parent::equals($other);
    }

    /**
     * {@inheritDoc}
     */
    public function applySubstitutions(\Rialto\Stock\ItemIndex $bom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'applySubstitutions', [$bom]);

        return parent::applySubstitutions($bom);
    }

    /**
     * {@inheritDoc}
     */
    public function getStrategies()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStrategies', []);

        return parent::getStrategies();
    }

    /**
     * {@inheritDoc}
     */
    public function setStrategies(array $strategies)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStrategies', [$strategies]);

        return parent::setStrategies($strategies);
    }

}
