<?php

namespace Proxies\__CG__\Rialto\Security\User;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Rialto\Security\User\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'id', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'ssoLinks', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'name', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'phone', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'email', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'xmpp', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'lastLoginDate', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'defaultPageSize', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'theme', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'dateFormat', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'language', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'defaultLocation', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'supplier', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'customerBranch', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'roles'];
        }

        return ['__isInitialized__', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'id', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'ssoLinks', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'name', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'phone', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'email', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'xmpp', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'lastLoginDate', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'defaultPageSize', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'theme', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'dateFormat', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'language', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'defaultLocation', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'supplier', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'customerBranch', '' . "\0" . 'Rialto\\Security\\User\\User' . "\0" . 'roles'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getDefaultPageSize(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultPageSize', []);

        return parent::getDefaultPageSize();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): string
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getUuids(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUuids', []);

        return parent::getUuids();
    }

    /**
     * {@inheritDoc}
     */
    public function addUuid($uuid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUuid', [$uuid]);

        return parent::addUuid($uuid);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUuid($uuid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUuid', [$uuid]);

        return parent::removeUuid($uuid);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\Rialto\Security\Role\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\Rialto\Security\Role\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function isEqualTo(\Symfony\Component\Security\Core\User\UserInterface $other)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEqualTo', [$other]);

        return parent::isEqualTo($other);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailLabel', []);

        return parent::getEmailLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getXmpp(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXmpp', []);

        return parent::getXmpp();
    }

    /**
     * {@inheritDoc}
     */
    public function setXmpp($xmpp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXmpp', [$xmpp]);

        return parent::setXmpp($xmpp);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', []);

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', [$phone]);

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTheme(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTheme', []);

        return parent::getTheme();
    }

    /**
     * {@inheritDoc}
     */
    public function setTheme($theme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTheme', [$theme]);

        return parent::setTheme($theme);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFormat(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFormat', []);

        return parent::getDateFormat();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFormat(string $format)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFormat', [$format]);

        return parent::setDateFormat($format);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', []);

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerBranch()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerBranch', []);

        return parent::getCustomerBranch();
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplier', []);

        return parent::getSupplier();
    }

    /**
     * {@inheritDoc}
     */
    public function setSupplier(\Rialto\Purchasing\Supplier\Supplier $supplier = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupplier', [$supplier]);

        return parent::setSupplier($supplier);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultLocation', []);

        return parent::getDefaultLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultLocation(\Rialto\Stock\Facility\Facility $location = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultLocation', [$location]);

        return parent::setDefaultLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLoginDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLoginDate', []);

        return parent::getLastLoginDate();
    }

    /**
     * {@inheritDoc}
     */
    public function updateLastLoginDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateLastLoginDate', []);

        return parent::updateLastLoginDate();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function disable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'disable', []);

        return parent::disable();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

}
