<?php

namespace Proxies\__CG__\Rialto\Stock\Category;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class StockCategory extends \Rialto\Stock\Category\StockCategory implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'id', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'name', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'stockType', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'stockAccount', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'adjustmentAccount', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'purchasePriceVarianceAccount', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'materialUsageVarianceAccount', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'wipAccount'];
        }

        return ['__isInitialized__', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'id', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'name', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'stockType', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'stockAccount', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'adjustmentAccount', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'purchasePriceVarianceAccount', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'materialUsageVarianceAccount', '' . "\0" . 'Rialto\\Stock\\Category\\StockCategory' . "\0" . 'wipAccount'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (StockCategory $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function equals(\Rialto\Stock\Category\StockCategory $other): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'equals', [$other]);

        return parent::equals($other);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdjustmentAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdjustmentAccount', []);

        return parent::getAdjustmentAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdjustmentAccount(\Rialto\Accounting\Ledger\Account\GLAccount $account)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdjustmentAccount', [$account]);

        return parent::setAdjustmentAccount($account);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getPurchasePriceVarianceAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPurchasePriceVarianceAccount', []);

        return parent::getPurchasePriceVarianceAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setPurchasePriceVarianceAccount(\Rialto\Accounting\Ledger\Account\GLAccount $account)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPurchasePriceVarianceAccount', [$account]);

        return parent::setPurchasePriceVarianceAccount($account);
    }

    /**
     * {@inheritDoc}
     */
    public function getStockAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockAccount', []);

        return parent::getStockAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setStockAccount(\Rialto\Accounting\Ledger\Account\GLAccount $account)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStockAccount', [$account]);

        return parent::setStockAccount($account);
    }

    /**
     * {@inheritDoc}
     */
    public function getStockAccountId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockAccountId', []);

        return parent::getStockAccountId();
    }

    /**
     * {@inheritDoc}
     */
    public function getStockType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStockType', []);

        return parent::getStockType();
    }

    /**
     * {@inheritDoc}
     */
    public function setStockType($stockType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStockType', [$stockType]);

        return parent::setStockType($stockType);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaterialUsageVarianceAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaterialUsageVarianceAccount', []);

        return parent::getMaterialUsageVarianceAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaterialUsageVarianceAccount(\Rialto\Accounting\Ledger\Account\GLAccount $account)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaterialUsageVarianceAccount', [$account]);

        return parent::setMaterialUsageVarianceAccount($account);
    }

    /**
     * {@inheritDoc}
     */
    public function getWipAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWipAccount', []);

        return parent::getWipAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function setWipAccount(\Rialto\Accounting\Ledger\Account\GLAccount $account)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWipAccount', [$account]);

        return parent::setWipAccount($account);
    }

    /**
     * {@inheritDoc}
     */
    public function isCategory($category): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCategory', [$category]);

        return parent::isCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function isProduct(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isProduct', []);

        return parent::isProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnclosure(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnclosure', []);

        return parent::isEnclosure();
    }

    /**
     * {@inheritDoc}
     */
    public function isShipping(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isShipping', []);

        return parent::isShipping();
    }

    /**
     * {@inheritDoc}
     */
    public function isPart(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPart', []);

        return parent::isPart();
    }

    /**
     * {@inheritDoc}
     */
    public function isPCB(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPCB', []);

        return parent::isPCB();
    }

    /**
     * {@inheritDoc}
     */
    public function isSoftware(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSoftware', []);

        return parent::isSoftware();
    }

    /**
     * {@inheritDoc}
     */
    public function isSellable(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSellable', []);

        return parent::isSellable();
    }

    /**
     * {@inheritDoc}
     */
    public function isEsdSensitive(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEsdSensitive', []);

        return parent::isEsdSensitive();
    }

}
