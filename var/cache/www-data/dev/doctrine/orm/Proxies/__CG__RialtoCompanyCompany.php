<?php

namespace Proxies\__CG__\Rialto\Company;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Company extends \Rialto\Company\Company implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'id', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'companyName', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'regOffice1', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'regOffice2', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'regOffice3', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'email', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'doesDebtorAccounting', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'doesCreditorAccounting', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'doesStockAccounting', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'debtorAccount', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'grnAccount', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'glAccount', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'creditorsAccount', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'pytDiscountAccount', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'GSTNo', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'CompanyNumber', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'PostalAddress', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'Telephone', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'Fax', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'CurrencyDefault', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'PayrollAct', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'ExchangeDiffAct', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'PurchasesExchangeDiffAct', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'RetainedEarnings'];
        }

        return ['__isInitialized__', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'id', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'companyName', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'regOffice1', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'regOffice2', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'regOffice3', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'email', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'doesDebtorAccounting', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'doesCreditorAccounting', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'doesStockAccounting', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'debtorAccount', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'grnAccount', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'glAccount', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'creditorsAccount', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'pytDiscountAccount', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'GSTNo', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'CompanyNumber', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'PostalAddress', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'Telephone', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'Fax', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'CurrencyDefault', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'PayrollAct', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'ExchangeDiffAct', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'PurchasesExchangeDiffAct', '' . "\0" . 'Rialto\\Company\\Company' . "\0" . 'RetainedEarnings'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Company $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getDebtorAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDebtorAccount', []);

        return parent::getDebtorAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditorsAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditorsAccount', []);

        return parent::getCreditorsAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditorAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditorAccount', []);

        return parent::getCreditorAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentDiscountAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentDiscountAccount', []);

        return parent::getPaymentDiscountAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getGrnAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGrnAccount', []);

        return parent::getGrnAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getShippingAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShippingAccount', []);

        return parent::getShippingAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function getShortName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortName', []);

        return parent::getShortName();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function doesCreditorAccounting()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'doesCreditorAccounting', []);

        return parent::doesCreditorAccounting();
    }

    /**
     * {@inheritDoc}
     */
    public function doesDebtorAccounting()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'doesDebtorAccounting', []);

        return parent::doesDebtorAccounting();
    }

    /**
     * {@inheritDoc}
     */
    public function doesStockAccounting()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'doesStockAccounting', []);

        return parent::doesStockAccounting();
    }

    /**
     * {@inheritDoc}
     */
    public function getRegOffice1(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegOffice1', []);

        return parent::getRegOffice1();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegOffice1(string $regOffice1): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegOffice1', [$regOffice1]);

        parent::setRegOffice1($regOffice1);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegOffice2(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegOffice2', []);

        return parent::getRegOffice2();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegOffice2(string $regOffice2): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegOffice2', [$regOffice2]);

        parent::setRegOffice2($regOffice2);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegOffice3(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegOffice3', []);

        return parent::getRegOffice3();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegOffice3(string $regOffice3): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegOffice3', [$regOffice3]);

        parent::setRegOffice3($regOffice3);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress(): \Gumstix\GeographyBundle\Model\PostalAddress
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', []);

        return parent::getAddress();
    }

}
